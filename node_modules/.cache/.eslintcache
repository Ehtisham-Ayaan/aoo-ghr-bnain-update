[{"F:\\myapp\\client\\src\\index.js":"1","F:\\myapp\\client\\src\\reportWebVitals.js":"2","F:\\myapp\\client\\src\\App.js":"3","F:\\myapp\\client\\src\\home.jsx":"4","F:\\myapp\\client\\src\\auth\\login.js":"5","F:\\myapp\\client\\src\\helper\\notfound.js":"6","F:\\myapp\\client\\src\\auth\\signup.js":"7","F:\\myapp\\client\\src\\postForm.js":"8","F:\\myapp\\client\\src\\submitted.js":"9","F:\\myapp\\client\\src\\sketch.js":"10","F:\\myapp\\client\\src\\About.js":"11","F:\\myapp\\client\\src\\contact.js":"12","F:\\myapp\\client\\src\\helper\\responsive.js":"13","F:\\myapp\\client\\src\\helper\\nav.js":"14","F:\\myapp\\client\\src\\admin\\Dashboard.js":"15","F:\\myapp\\client\\src\\helper\\footer.jsx":"16","F:\\myapp\\client\\src\\services\\UserServices.js":"17","F:\\myapp\\client\\src\\sketchHelper\\TabPanel.js":"18","F:\\myapp\\client\\src\\sketchHelper\\useStyles.js":"19","F:\\myapp\\client\\src\\scrapMe.jsx":"20","F:\\myapp\\client\\src\\services\\GenericServices.js":"21","F:\\myapp\\client\\src\\sketchHelper\\handleSave.js":"22","F:\\myapp\\client\\src\\sketchHelper\\handleMouseMove.js":"23","F:\\myapp\\client\\src\\sketchHelper\\toggleDrawer.js":"24","F:\\myapp\\client\\src\\sketchHelper\\isWithinElement.js":"25","F:\\myapp\\client\\src\\sketchHelper\\handleMouseUp.js":"26","F:\\myapp\\client\\src\\sketchHelper\\handleMouseDown.js":"27","F:\\myapp\\client\\src\\sketchHelper\\updateElement.js":"28","F:\\myapp\\client\\src\\sketchHelper\\createElement.js":"29","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\index.js":"30","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\reportWebVitals.js":"31","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\App.js":"32","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\home.jsx":"33","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\helper\\notfound.js":"34","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\auth\\login.js":"35","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\auth\\signup.js":"36","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\postForm.js":"37","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\sketch.js":"38","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\contact.js":"39","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\submitted.js":"40","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\About.js":"41","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\helper\\responsive.js":"42","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\helper\\nav.js":"43","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\admin\\Dashboard.js":"44","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\helper\\footer.jsx":"45","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\services\\UserServices.js":"46","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\sketchHelper\\TabPanel.js":"47","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\services\\GenericServices.js":"48","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\sketchHelper\\toggleDrawer.js":"49","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\sketchHelper\\isWithinElement.js":"50","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\sketchHelper\\handleSave.js":"51","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\sketchHelper\\handleMouseUp.js":"52","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\sketchHelper\\handleMouseMove.js":"53","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\sketchHelper\\handleMouseDown.js":"54","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\sketchHelper\\useStyles.js":"55","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\scrapMe.jsx":"56","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\sketchHelper\\updateElement.js":"57","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\sketchHelper\\createElement.js":"58","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\auth\\addByAdmin.js":"59","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\users\\userDashboard.js":"60","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\services\\payment.js":"61","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\components\\PaymentForm.js":"62","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\index.js":"63","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\App.js":"64","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\reportWebVitals.js":"65","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\home.jsx":"66","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\auth\\signup.js":"67","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\auth\\login.js":"68","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\helper\\notfound.js":"69","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\postForm.js":"70","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\About.js":"71","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\contact.js":"72","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\submitted.js":"73","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\sketch.js":"74","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\helper\\nav.js":"75","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\helper\\responsive.js":"76","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\auth\\addByAdmin.js":"77","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\admin\\Dashboard.js":"78","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\services\\payment.js":"79","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\users\\userDashboard.js":"80","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\helper\\footer.jsx":"81","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\services\\UserServices.js":"82","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\components\\PaymentForm.js":"83","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\services\\GenericServices.js":"84","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\sketchHelper\\isWithinElement.js":"85","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\sketchHelper\\toggleDrawer.js":"86","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\sketchHelper\\handleSave.js":"87","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\sketchHelper\\handleMouseUp.js":"88","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\sketchHelper\\handleMouseMove.js":"89","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\scrapMe.jsx":"90","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\sketchHelper\\handleMouseDown.js":"91","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\sketchHelper\\useStyles.js":"92","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\sketchHelper\\updateElement.js":"93","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\sketchHelper\\createElement.js":"94","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\sketchHelper\\TabPanel.js":"95","F:\\Aoo-Ghr-Bnain-Client\\src\\index.js":"96","F:\\Aoo-Ghr-Bnain-Client\\src\\App.js":"97","F:\\Aoo-Ghr-Bnain-Client\\src\\reportWebVitals.js":"98","F:\\Aoo-Ghr-Bnain-Client\\src\\home.jsx":"99","F:\\Aoo-Ghr-Bnain-Client\\src\\helper\\notfound.js":"100","F:\\Aoo-Ghr-Bnain-Client\\src\\auth\\login.js":"101","F:\\Aoo-Ghr-Bnain-Client\\src\\auth\\signup.js":"102","F:\\Aoo-Ghr-Bnain-Client\\src\\postForm.js":"103","F:\\Aoo-Ghr-Bnain-Client\\src\\submitted.js":"104","F:\\Aoo-Ghr-Bnain-Client\\src\\contact.js":"105","F:\\Aoo-Ghr-Bnain-Client\\src\\About.js":"106","F:\\Aoo-Ghr-Bnain-Client\\src\\sketch.js":"107","F:\\Aoo-Ghr-Bnain-Client\\src\\helper\\responsive.js":"108","F:\\Aoo-Ghr-Bnain-Client\\src\\helper\\nav.js":"109","F:\\Aoo-Ghr-Bnain-Client\\src\\auth\\addByAdmin.js":"110","F:\\Aoo-Ghr-Bnain-Client\\src\\admin\\Dashboard.js":"111","F:\\Aoo-Ghr-Bnain-Client\\src\\users\\userDashboard.js":"112","F:\\Aoo-Ghr-Bnain-Client\\src\\services\\payment.js":"113","F:\\Aoo-Ghr-Bnain-Client\\src\\helper\\footer.jsx":"114","F:\\Aoo-Ghr-Bnain-Client\\src\\services\\UserServices.js":"115","F:\\Aoo-Ghr-Bnain-Client\\src\\components\\PaymentForm.js":"116","F:\\Aoo-Ghr-Bnain-Client\\src\\services\\GenericServices.js":"117","F:\\Aoo-Ghr-Bnain-Client\\src\\scrapMe.jsx":"118","F:\\Aoo-Ghr-Bnain-Client\\src\\sketchHelper\\toggleDrawer.js":"119","F:\\Aoo-Ghr-Bnain-Client\\src\\sketchHelper\\isWithinElement.js":"120","F:\\Aoo-Ghr-Bnain-Client\\src\\sketchHelper\\handleSave.js":"121","F:\\Aoo-Ghr-Bnain-Client\\src\\sketchHelper\\handleMouseUp.js":"122","F:\\Aoo-Ghr-Bnain-Client\\src\\sketchHelper\\handleMouseMove.js":"123","F:\\Aoo-Ghr-Bnain-Client\\src\\sketchHelper\\handleMouseDown.js":"124","F:\\Aoo-Ghr-Bnain-Client\\src\\sketchHelper\\useStyles.js":"125","F:\\Aoo-Ghr-Bnain-Client\\src\\sketchHelper\\updateElement.js":"126","F:\\Aoo-Ghr-Bnain-Client\\src\\sketchHelper\\createElement.js":"127","F:\\Aoo-Ghr-Bnain-Client\\src\\sketchHelper\\TabPanel.js":"128"},{"size":504,"mtime":1613716738000,"results":"129","hashOfConfig":"130"},{"size":362,"mtime":1612156156000,"results":"131","hashOfConfig":"130"},{"size":3434,"mtime":1615208056000,"results":"132","hashOfConfig":"130"},{"size":12665,"mtime":1616778107382,"results":"133","hashOfConfig":"130"},{"size":6590,"mtime":1615193080000,"results":"134","hashOfConfig":"130"},{"size":342,"mtime":1615119578000,"results":"135","hashOfConfig":"130"},{"size":5464,"mtime":1615116317000,"results":"136","hashOfConfig":"130"},{"size":1552,"mtime":1613577486000,"results":"137","hashOfConfig":"130"},{"size":112,"mtime":1613913137000,"results":"138","hashOfConfig":"130"},{"size":46201,"mtime":1618588998680,"results":"139","hashOfConfig":"130"},{"size":4181,"mtime":1615130351000,"results":"140","hashOfConfig":"130"},{"size":5239,"mtime":1618297109742,"results":"141","hashOfConfig":"130"},{"size":1197,"mtime":1613717006000,"results":"142","hashOfConfig":"130"},{"size":18851,"mtime":1618296394208,"results":"143","hashOfConfig":"130"},{"size":1550,"mtime":1615269651000,"results":"144","hashOfConfig":"130"},{"size":11002,"mtime":1618583913307,"results":"145","hashOfConfig":"130"},{"size":2094,"mtime":1618302976426,"results":"146","hashOfConfig":"130"},{"size":657,"mtime":1612768812000,"results":"147","hashOfConfig":"130"},{"size":1947,"mtime":1612861096000,"results":"148","hashOfConfig":"130"},{"size":1194,"mtime":1618589394597,"results":"149","hashOfConfig":"130"},{"size":1132,"mtime":1614152535000,"results":"150","hashOfConfig":"130"},{"size":705,"mtime":1618299079346,"results":"151","hashOfConfig":"130"},{"size":3863,"mtime":1618297710433,"results":"152","hashOfConfig":"130"},{"size":275,"mtime":1618376454982,"results":"153","hashOfConfig":"130"},{"size":1740,"mtime":1613717129000,"results":"154","hashOfConfig":"130"},{"size":150,"mtime":1613717112000,"results":"155","hashOfConfig":"130"},{"size":2474,"mtime":1616993196814,"results":"156","hashOfConfig":"130"},{"size":628,"mtime":1617042965449,"results":"157","hashOfConfig":"130"},{"size":1009,"mtime":1616675050696,"results":"158","hashOfConfig":"130"},{"size":504,"mtime":1613716738000,"results":"159","hashOfConfig":"160"},{"size":362,"mtime":1612156156000,"results":"161","hashOfConfig":"160"},{"size":3941,"mtime":1620567594519,"results":"162","hashOfConfig":"160"},{"size":13370,"mtime":1624165518842,"results":"163","hashOfConfig":"160"},{"size":342,"mtime":1615119578000,"results":"164","hashOfConfig":"160"},{"size":6594,"mtime":1619592519737,"results":"165","hashOfConfig":"160"},{"size":9878,"mtime":1623333262023,"results":"166","hashOfConfig":"160"},{"size":1552,"mtime":1613577486000,"results":"167","hashOfConfig":"160"},{"size":178224,"mtime":1624244902996,"results":"168","hashOfConfig":"160"},{"size":5239,"mtime":1618297109742,"results":"169","hashOfConfig":"160"},{"size":112,"mtime":1613913137000,"results":"170","hashOfConfig":"160"},{"size":4181,"mtime":1615130351000,"results":"171","hashOfConfig":"160"},{"size":1197,"mtime":1613717006000,"results":"172","hashOfConfig":"160"},{"size":21866,"mtime":1620711313204,"results":"173","hashOfConfig":"160"},{"size":5695,"mtime":1624289409775,"results":"174","hashOfConfig":"160"},{"size":9695,"mtime":1620024509105,"results":"175","hashOfConfig":"160"},{"size":3795,"mtime":1623333356504,"results":"176","hashOfConfig":"160"},{"size":657,"mtime":1612768812000,"results":"177","hashOfConfig":"160"},{"size":1133,"mtime":1620215590890,"results":"178","hashOfConfig":"160"},{"size":538,"mtime":1623471678262,"results":"179","hashOfConfig":"160"},{"size":1740,"mtime":1613717129000,"results":"180","hashOfConfig":"160"},{"size":6154,"mtime":1624167564473,"results":"181","hashOfConfig":"160"},{"size":150,"mtime":1613717112000,"results":"182","hashOfConfig":"160"},{"size":5092,"mtime":1624075386851,"results":"183","hashOfConfig":"160"},{"size":2474,"mtime":1616993196814,"results":"184","hashOfConfig":"160"},{"size":1947,"mtime":1612861096000,"results":"185","hashOfConfig":"160"},{"size":3236,"mtime":1624176266343,"results":"186","hashOfConfig":"160"},{"size":575,"mtime":1621445964311,"results":"187","hashOfConfig":"160"},{"size":1411,"mtime":1621445951426,"results":"188","hashOfConfig":"160"},{"size":6081,"mtime":1619507687208,"results":"189","hashOfConfig":"160"},{"size":10673,"mtime":1620711329279,"results":"190","hashOfConfig":"160"},{"size":2088,"mtime":1620637488552,"results":"191","hashOfConfig":"160"},{"size":1761,"mtime":1623333086870,"results":"192","hashOfConfig":"160"},{"size":504,"mtime":1613716738000,"results":"193","hashOfConfig":"194"},{"size":3941,"mtime":1620567594519,"results":"195","hashOfConfig":"194"},{"size":362,"mtime":1612156156000,"results":"196","hashOfConfig":"194"},{"size":13370,"mtime":1624165518842,"results":"197","hashOfConfig":"194"},{"size":9878,"mtime":1623333262023,"results":"198","hashOfConfig":"194"},{"size":6594,"mtime":1619592519737,"results":"199","hashOfConfig":"194"},{"size":342,"mtime":1615119578000,"results":"200","hashOfConfig":"194"},{"size":1552,"mtime":1613577486000,"results":"201","hashOfConfig":"194"},{"size":4181,"mtime":1615130351000,"results":"202","hashOfConfig":"194"},{"size":5239,"mtime":1618297109742,"results":"203","hashOfConfig":"194"},{"size":112,"mtime":1613913137000,"results":"204","hashOfConfig":"194"},{"size":178224,"mtime":1624244902996,"results":"205","hashOfConfig":"194"},{"size":21866,"mtime":1620711313204,"results":"206","hashOfConfig":"194"},{"size":1197,"mtime":1613717006000,"results":"207","hashOfConfig":"194"},{"size":6081,"mtime":1619507687208,"results":"208","hashOfConfig":"194"},{"size":5695,"mtime":1624289409775,"results":"209","hashOfConfig":"194"},{"size":2088,"mtime":1620637488552,"results":"210","hashOfConfig":"194"},{"size":10673,"mtime":1620711329279,"results":"211","hashOfConfig":"194"},{"size":9695,"mtime":1620024509105,"results":"212","hashOfConfig":"194"},{"size":3795,"mtime":1623333356504,"results":"213","hashOfConfig":"194"},{"size":1761,"mtime":1623333086870,"results":"214","hashOfConfig":"194"},{"size":1133,"mtime":1620215590890,"results":"215","hashOfConfig":"194"},{"size":1740,"mtime":1613717129000,"results":"216","hashOfConfig":"194"},{"size":538,"mtime":1623471678262,"results":"217","hashOfConfig":"194"},{"size":6154,"mtime":1624167564473,"results":"218","hashOfConfig":"194"},{"size":150,"mtime":1613717112000,"results":"219","hashOfConfig":"194"},{"size":5092,"mtime":1624075386851,"results":"220","hashOfConfig":"194"},{"size":3236,"mtime":1624176266343,"results":"221","hashOfConfig":"194"},{"size":2474,"mtime":1616993196814,"results":"222","hashOfConfig":"194"},{"size":1947,"mtime":1612861096000,"results":"223","hashOfConfig":"194"},{"size":575,"mtime":1621445964311,"results":"224","hashOfConfig":"194"},{"size":1411,"mtime":1621445951426,"results":"225","hashOfConfig":"194"},{"size":657,"mtime":1612768812000,"results":"226","hashOfConfig":"194"},{"size":504,"mtime":1613716738000,"results":"227","hashOfConfig":"228"},{"size":3941,"mtime":1620567594519,"results":"229","hashOfConfig":"228"},{"size":362,"mtime":1612156156000,"results":"230","hashOfConfig":"228"},{"size":13370,"mtime":1624165518842,"results":"231","hashOfConfig":"228"},{"size":342,"mtime":1615119578000,"results":"232","hashOfConfig":"228"},{"size":6594,"mtime":1619592519737,"results":"233","hashOfConfig":"228"},{"size":9895,"mtime":1624766755913,"results":"234","hashOfConfig":"228"},{"size":1552,"mtime":1613577486000,"results":"235","hashOfConfig":"228"},{"size":112,"mtime":1613913137000,"results":"236","hashOfConfig":"228"},{"size":5239,"mtime":1618297109742,"results":"237","hashOfConfig":"228"},{"size":4181,"mtime":1615130351000,"results":"238","hashOfConfig":"228"},{"size":178224,"mtime":1624244902996,"results":"239","hashOfConfig":"228"},{"size":1197,"mtime":1613717006000,"results":"240","hashOfConfig":"228"},{"size":21866,"mtime":1620711313204,"results":"241","hashOfConfig":"228"},{"size":6081,"mtime":1619507687208,"results":"242","hashOfConfig":"228"},{"size":5695,"mtime":1624289409775,"results":"243","hashOfConfig":"228"},{"size":10673,"mtime":1620711329279,"results":"244","hashOfConfig":"228"},{"size":2105,"mtime":1624766505606,"results":"245","hashOfConfig":"228"},{"size":9695,"mtime":1620024509105,"results":"246","hashOfConfig":"228"},{"size":3957,"mtime":1624766482188,"results":"247","hashOfConfig":"228"},{"size":1761,"mtime":1623333086870,"results":"248","hashOfConfig":"228"},{"size":1150,"mtime":1624766514376,"results":"249","hashOfConfig":"228"},{"size":3272,"mtime":1624766551883,"results":"250","hashOfConfig":"228"},{"size":538,"mtime":1623471678262,"results":"251","hashOfConfig":"228"},{"size":1740,"mtime":1613717129000,"results":"252","hashOfConfig":"228"},{"size":6154,"mtime":1624167564473,"results":"253","hashOfConfig":"228"},{"size":150,"mtime":1613717112000,"results":"254","hashOfConfig":"228"},{"size":5092,"mtime":1624075386851,"results":"255","hashOfConfig":"228"},{"size":2474,"mtime":1616993196814,"results":"256","hashOfConfig":"228"},{"size":1947,"mtime":1612861096000,"results":"257","hashOfConfig":"228"},{"size":575,"mtime":1621445964311,"results":"258","hashOfConfig":"228"},{"size":1411,"mtime":1621445951426,"results":"259","hashOfConfig":"228"},{"size":657,"mtime":1612768812000,"results":"260","hashOfConfig":"228"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},"189mxkc",{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"263"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"263"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"263"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"263"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"263"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"263"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"263"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"263"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"263"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"263"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"263"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"263"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"263"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},"tlo26g",{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"335"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"335"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"335"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"335"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"335"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"335"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"335"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"335"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"335"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"370","messages":"371","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"335"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"335"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"335"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"335"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"397","usedDeprecatedRules":"335"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"335"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"335"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"335"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"335"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"335"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14v7n33",{"filePath":"417","messages":"418","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"443","messages":"444","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"468","messages":"469","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"397"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"r6o1w",{"filePath":"484","messages":"485","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"490","messages":"491","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"492","messages":"493","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"494","messages":"495","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"500","messages":"501","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"502","messages":"503","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"504","messages":"505","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"508","messages":"509","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"510","messages":"511","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"512","messages":"513","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"514","messages":"515","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"516","messages":"517","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"518","messages":"519","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"526","messages":"527","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"532","messages":"533","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"536","messages":"537","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"538","messages":"539","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"544","messages":"545","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\myapp\\client\\src\\index.js",[],["548","549"],"F:\\myapp\\client\\src\\reportWebVitals.js",[],"F:\\myapp\\client\\src\\App.js",["550","551","552"],"import './css/App.css';\nimport './helper/responsive';\nimport Nav from './helper/nav';\nimport PostForm from \"./postForm\";\nimport {\n    BrowserRouter as Router,\n    Redirect,\n    Route,\n    Switch,\n} from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport login from \"./auth/login.js\";\nimport signup from \"./auth/signup.js\";\n// import Cart from \"./components/Cart.jsx\";\nimport contactus from \"./contact\";\nimport Home from \"./home.jsx\";\nimport notfound from \"./helper/notfound.js\";\nimport sketch from \"./sketch\";\n// import Addproduct from \"./components/products/Addproduct.jsx\";\n// import Editproduct from \"./components/products/editProduct\";\nimport dashboardA from \"./admin/Dashboard\";\nimport about from \"./About\";\nimport TopMenu from \"./helper/nav\";\nimport submitted from \"./submitted\";\nimport welcome from \"./auth/welcome\";\nimport Footer from \"./helper/footer\"\n// import Checkout from \"./components/checkout/Checkout.js\";\n function App() {\n    function forceUpdateHandler(){\n        window.location.reload(false);\n          }\n          \n\n     return (\n        <>\n\n            {/*<PostForm />*/}\n     {/*<Nav />*/}\n\n\n\n\n\n\n            <Router>\n                <div>\n                    <ToastContainer />\n                    <TopMenu />\n                    <Switch>\n                        {/*<Route*/}\n                        {/*    path=\"/products/product_details/:id\"*/}\n                        {/*    component={ProductPage}*/}\n                        {/*></Route>*/}\n                        {/*<Route path=\"/cart/:id?\" component={Cart}></Route>*/}\n                        {/*<Route*/}\n                        {/*    path=\"/manageProducts/Addproduct\"*/}\n                        {/*    component={Addproduct}*/}\n                        {/*></Route>*/}\n                        {/*<Route*/}\n                        {/*    path=\"/manageProducts/Editproduct/:id\"*/}\n                        {/*    component={Editproduct}*/}\n                        {/*></Route>*/}\n\n                        <Route path=\"/dashboardA\" component={dashboardA}></Route>\n                        {/*<Route path=\"/checkout\" component={Checkout}></Route>*/}\n\n                        {/*<Route path=\"/products\" component={products}></Route>*/}\n\n                        <Route path=\"/contact-us\" component={contactus} \n                        // onClick={forceUpdateHandler}\n                        />\n\n                        <Route path=\"/submitted\" component={submitted} \n                        // onClick={forceUpdateHandler}\n                        />\n                        <Route path=\"/notfound\" component={notfound}/>\n                        <Route path=\"/login\" component={login} \n                        // onClick={forceUpdateHandler}\n                        />\n                        <Route path=\"/signup\" component={signup}/>\n                        <Route path=\"/sketch\" component={sketch}/>\n                        <Route path=\"/about\" component={about}/>\n\n                        <Route path=\"/welcome\" component={welcome} \n                        // onEnter={}\n                        />\n                        \n                        <Route path=\"/\" exact component={Home}/>\n                        <Redirect to=\"/notfound\"/>\n                    </Switch>\n                    <Footer/>\n                </div>\n            </Router>\n\n        </>\n  )\n}\nexport default App;\n","F:\\myapp\\client\\src\\home.jsx",["553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571"],"import './css/App.css';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport front from './img/front.jpg';\nimport home1 from \"./img/home1.png\";\nimport home2 from \"./img/home2.png\";\nimport home3 from \"./img/home3.png\";\nimport home4 from \"./img/home4.jpg\";\nimport coffee from \"./img/coffee.jpg\"\nimport lightening from \"./img/lightening.png\";\n\nimport React, { useEffect } from 'react';\nimport { Spin } from 'antd';\nimport { check } from 'antd';\nimport 'antd/dist/antd.css';\nimport {Button, IconButton} from \"@material-ui/core\";\nimport {BrowserRouter as Router, Link, Route, Switch} from \"react-router-dom\";\nimport MyEstimates from \"./sketch\";\nimport logo from \"./img/logoA.png\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Typography from \"@material-ui/core/Typography\";\nimport { FaBeer } from 'react-icons/fa';\nimport { LogoNodejs } from 'react-ionicons'\nimport { Heart } from 'react-ionicons'  \nimport { Close } from 'react-ionicons'  \n\nimport { toast } from \"react-toastify\";\n\nimport AnimatedButton from '@bit/tabinda.react-button-animation.animated.button';\n\n\nconst useStyles = makeStyles((theme) => ({\n    p: {\n            overflow: \"visible\",\n            letterSpacing: 0.5,\n            color: \"#433E69\",\n            fontSize: '20px',\n            fontWeight: 700,\n            fontStyle: \"italic\",\n            fontFamily: `\"Inter-ExtraBoldItalic\", \"Inter\", sans-serif`,\n            lineHeight: 2,\n            textAlign: \"center\",\n            top: '20%' ,\n            height: 'auto',\n            width : '100%'\n            \n        },\n    frame : {\n        width: '100%',\n        height: 'auto',\n    },\n\n    textframe:{\n    width: '100%',\n  height: 'auto',\n  overflow: \"hidden\",\n//   transform: \"translate('-50%' , -'50%' )\" ,\n  background: \"radial-gradient(92.10000000000001% 50% at 5.2% 52.7%, #2266ff 0%, hsl(222, 57%, 77%) 100%)\",\nborderRadius: \"5%\",   \n\n},\n\nframe1 : {\n\n    width: '100%',\n    height: 'auto',\n    overflow: 'visible',\n    background: \"radial-gradient(100% 50% at 0% 50%, #593b3b 0%, hsla(0, 71%, 76%, 0.66) 100%)\",\n\n},\n\nliText : {\n\n    width: '100%',\n    height: 'auto',\n    overflow: 'visible',\n    color: 'white',\n    textAlign: 'left',\n    lineHeight: '2.3',\n    fontWeight: '700',\n    fontStyle: 'italic',\n    fontFamily: \"Inter-Bold\" || \"Inter\" || \"sans-serif\",\n    fontSize: '12px',\n    letterSpacing: '0px',\n},\n\n    myStyle : {\n        position: 'absolute',\n        top: '20%' ,\n        left: '35%' ,\n        transform: \"translate('-50%' , -'50%' )\" ,\n        width: '30%',\n        height: 'auto',\n    }\n\n\n\n}));\n\nconst Sketch = () => <div> <MyEstimates/>     </div>;\n\nfunction Home() {\n\n    const width = '100%';\n    const height = 'auto';\n\n    const myClass = useStyles();\n\n    return (\n<div style={{overflow : 'hidden'}}>\n<img width = {width} height = {height}\n                     src = {front}\n                     alt=\"image\" \n                     style = {{  opacity:0.8 , borderBottomRightRadius : '20%' }}\n                     \n                     />\n                     \n\n                     <img src = {logo} className={myClass.myStyle}/>\n\n<div style={{paddingLeft : \"10px\" , paddingRight : \"10px\" }}>\n    \n<div className=\"row\" style={{marginTop:40}}>\n  <div className=\"col-md-3\">\n      <div className={myClass.textframe}>\n    <p  className={myClass.p} >\n     Here you can build your buildings ( architectural  designs layout)\n    and estimate  the results. You can also see the\n     trending materials in market and see their prices.</p>\n                </div>\n    </div>\n\n    <div className=\"col-md-3\" style = {{marignTop : '5%'}}>\n    <img className={myClass.frame}\n                     src = {home1}\n                     alt=\"image\" />\n    </div>\n\n<div className=\"col-md-3\">\n\n<p className={myClass.p} style ={{textAlign: \"left\" , marginTop: '20%' , fontSize : '15.5px'}}>\n                     Sketch with app estimate with </p>\n                     <div style={{marginTop: '10%'}}></div>\n                         <Link to=\"/sketch\" style={{textDecoration: 'none' }} >\n                             \n                             <AnimatedButton style={{ marginTop: '20%' , align : 'center' }} label =    \"Sketch App Estimate\"/>\n                         \n                         </Link>\n<div style={{marginTop: '10%'}}></div>\n                         </div>\n<div className=\"col-md-3\">\n    <img className={myClass.frame}\n                     width={\"35%\"}\n                     src = {home2}\n                     alt=\"image\" />\n                     </div>\n\n</div>\n\n<div className=\"row\" style={{marginTop: '3%'}}>\n    <div className=\"col-md-12\">\n\n    <p className={myClass.p} >\n    Just two Steps For your results</p>\n\n    </div>\n\n\n</div>\n\n<div className=\"row\" style={{marginTop : '3%'}}>\n    <div className=\"col-md-5\">\n\n    <p className={myClass.p} >\n                    Layout Design </p>\n                    <img style={{width:'50%' , height:'auto' ,  marginLeft: '25%' \n  , marginTop : '3%'}}\n                 src = {home4}\n                 alt=\"image\" />\n\n\n    </div>\n\n    <div className=\"col-md-2\">\n        \n        {/* <Spin style={{width:'100%' , marginTop: '20%' , marginBottom:'20%'}} /> */}\n\n        <img style={{width:'150%' , height:'auto' ,  marginLeft: '-25%' \n  , marginTop : '5%'}}\n                 src = {lightening}\n                 alt=\"image\" />\n    </div>\n\n    <div className=\"col-md-5\">\n\n    <p className={myClass.p} style={{marginTop:'3%'}}>\n    Estimate Design </p>\n\n    <img style={{width:'60%' , height:'auto' , marginLeft: '25%' }}\n                 src = {home3}\n                 alt=\"image\" />\n\n    </div>\n\n\n</div>\n<div className=\"row\" style={{marginTop : '3%'}}>\n<div className=\"col-md-4\">\n<p className={myClass.p} \nstyle={{\n    marginTop:'3%' , \n    fontStyle : 'normal' , \n    fontSize : '20px' ,\n    }}>\nBuy us a cup of Coffee and get</p> \n\n<p className={myClass.p} \nstyle={{\n    marginTop:'3%' , \n    fontStyle : 'normal' , \n    fontSize : '20px' ,\n    }}>\n\nyour Subscription today </p>\n\n<img style={{width:'80%' , height:'auto' , borderRadius : '10%' }}\n                 src = {coffee}\n                 alt=\"image\" />\n\n<p className={myClass.p} \nstyle={{\n    marginTop:'3%' , \n    fontStyle : 'normal' ,\n    fontSize : '20px' ,  \n    }}>\nAs low as 1$ per subscription </p>\n</div>\n\n\n<div className=\"col-md-4\">\n    <div className={myClass.frame1}>\n<div style={{marginTop:\"12%\"}}></div>\n<Typography className={myClass.p} style = {{paddingTop : '20px' , fontSize : '20px'}}>Features</Typography>\n\n<ol className={myClass.liText}>\n<li>Build</li>\n<li>Estimate</li>\n<li>See Material From Other Sources</li>\n<li>Save Locally</li>\n<li>Save On Web App</li>\n<li>Save As pdf For Verification (NOC and print on A3)</li> \n<li>View From DB</li>\n</ol>\n\n    </div>\n    </div>\n\n\n\n<div className=\"col-md-2\"><div className={myClass.frame1}\n\nstyle = {{background: \"radial-gradient(100% 50% at 0% 50%, #593b3b 0%, hsla(0, 71%, 76%, 0.66) 100%)\" }}>\n\n<div style={{marginTop:\"25%\"}}></div>\n\n<Typography className={myClass.p} style = {{paddingTop : '20px', fontSize : '20px' }}>UnSubscribed</Typography>\n\n<ol className={myClass.liText} style = {{textAlign : 'center'}} >\n<li>  <Heart\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"10%\"\n  onClick={() => toast.success('Service Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/>  </li>\n<li><Heart\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"10%\"\n  onClick={() => toast.success('Service Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li>\n<li><Heart\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"10%\"\n  onClick={() => toast.success('Service Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li>\n<li><Heart\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"10%\"\n  onClick={() => toast.success('Service Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li>\n<li><Close\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"10%\"\n  onClick={() => toast.error('Service Not Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li>\n<li><Close\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"10%\"\n  onClick={() => toast.error('Service Not Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li> \n<li><Close\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"10%\"\n  onClick={() => toast.error('Service Not Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li>\n</ol>\n<Link to=\"/sketch\" style={{textDecoration: 'none' }} >\n                             \n                             <AnimatedButton style={{ marginTop: '20%' , align : 'center' }} label =    \"Sketch App\"/>\n                         \n                         </Link>\n\n    </div></div>\n\n\n<div className=\"col-md-2\"><div className={myClass.frame1} \n\nstyle = {{background: \"radial-gradient(100% 50% at 0% 50%, #593b3b 0%, hsla(0, 71%, 76%, 0.66) 100%)\" }}>\n\n<div style={{marginTop:\"25%\"}}></div>\n\n\n<Typography className={myClass.p} style = {{paddingTop : '20px' , fontSize : '20px'}}>Subscribed</Typography>\n\n<ol className={myClass.liText} style = {{textAlign : 'center'}}>\n<li><Heart\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"10%\"\n  onClick={() => toast.success('Service Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li>\n<li><Heart\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"10%\"\n  onClick={() => toast.success('Service Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li>\n<li><Heart\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"10%\"\n  onClick={() => toast.success('Service Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li>\n<li><Heart\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"10%\"\n  onClick={() => toast.success('Service Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li>\n<li><Heart\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"10%\"\n  onClick={() => toast.success('Service Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li>\n<li><Heart\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"10%\"\n  onClick={() => toast.success('Service Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li> \n<li><Heart\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"10%\"\n  onClick={() => toast.success('Service Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li>\n</ol>\n<Link to=\"/signup\" style={{textDecoration: 'none' }} >\n                             \n                             <AnimatedButton style={{ marginTop: '20%' , align : 'center' }} label =    \"Subscribe\"/>\n                         \n                         </Link>\n    </div></div>\n    </div>\n</div>\n\n</div>\n\n\n\n//             <Router>\n\n//                 <Switch>\n//                     <Route path=\"/sketch\" component={Sketch} />\n//                 </Switch>\n//             </Router>\n\n    )\n}\nexport default Home;\n","F:\\myapp\\client\\src\\auth\\login.js",["572","573","574","575","576"],"\n// import React, { Component } from 'react';\n// import axios from 'axios';\n\n// class Create extends Component {\n//     constructor(props) {\n//         super(props);\n\n//         this.state = {\n//             username: '',\n//             password: '',\n//             data:'',\n//         };\n//     }\n\n//     handleInputChange = e => {\n//         this.setState({\n//             [e.target.name]: e.target.value,\n//         });\n//     };\n\n//     handleSubmit = e => {\n//         e.preventDefault();\n\n//         // console.log(\"happy\")\n//         const { username , password } = this.state;\n\n\n//         const account = {\n//             username,\n//             password,\n//         };\n\n//         // console.log(account);\n\n    \n\n//         axios.post('http://localhost:5000/auth', account )\n//             .then((res) =>{ \n//                             // this.data = res.data\n//                             console.log(res.status);\n//                             console.log(res.isLoggedin);\n//                 if(res.isLoggedin){\n\n//                     window.location.href = '/welcome ';\n//                 }\n                            \n                            \n//                         })\n//             .catch(err => {\n//                 console.error(err.status);  \n//             },{\n//                 withCredentials: true,\n//                 headers: {'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json'\n//             }});\n\n//         this.setState({ name: '', email: '' })\n\n//         document.forms['myform'].reset();\n\n\n//     };\n\n   \n\n//     render() {\n//         return (\n//             <div>\n//                 <br />\n//                 <div className=\"container\">\n\n//                         <div className=\"login-form\">\n//                             <h1>Login Form</h1>\n//                             <form onSubmit={this.handleSubmit} id=\"myform\">\n//                                 <input type=\"text\" name=\"username\" placeholder=\"Username\" required onChange={this.handleInputChange}/>\n//                                     <input type=\"password\" name=\"password\" placeholder=\"Password\" required onChange={this.handleInputChange}/>\n//                                         <input type=\"submit\"/>\n//                             </form>\n//                         </div>\n//                 </div>\n//                 <h1>{this.data}</h1>\n//             </div>\n//         );\n//     }\n// }\n\n// export default Create;\n\n\n\n\n\n\n\n\n\n\n\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport UserServices from \"../services/UserServices\";\nimport * as jwt from 'jsonwebtoken';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n\n  const [userName, setUserName] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"userName\"\n            label=\"email address\"\n            name=\"User Name\"\n            autoComplete=\"userName\"\n            autoFocus\n            value={userName}\n            onChange={(e) => {\n              setUserName(e.target.value);\n            }}\n            onKeyPress={event => {\n              if (event.key === 'Enter') {\n            document.getElementById('save').click();\n              }\n          }}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            required\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n            onKeyPress={event => {\n              if (event.key === 'Enter') {\n            document.getElementById('save').click();\n              }\n          }}\n          />\n\n          <Button\n          id = \"save\"\n            className={classes.submit}\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => {\n\n              // console.log({userName}, {password})\n              UserServices.login(userName, password)\n                .then((data) => {\n                  console.log(data);\n                  window.location.href = \"/welcome\";\n                })\n                .catch((err) => {\n                  toast.error(err.response.data, {\n                    position: \"bottom-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                  });\n                });\n            }}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                Don't have an account? {\"Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      \n    </Container>\n  );\n}\n","F:\\myapp\\client\\src\\helper\\notfound.js",["577"],"import React from \"react\";\nimport notFound from \"../img/404-not-found.jpg\";\nimport 'bootstrap/dist/js/bootstrap.min.js'\n\nconst notfound = () => {\n  return (\n    <div className=\"container\">\n      <img src={notFound} width=\"100%\" height=\"auto\"  style = {{marginTop: '10%' , marginBottom: '10%'}}/>\n     </div>\n  );\n};\n\nexport default notfound;\n","F:\\myapp\\client\\src\\auth\\signup.js",["578","579","580"],"import Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport UserServices from \"../services/UserServices\";\nimport PasswordStrengthBar from 'react-password-strength-bar';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const [name, setName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"name\"\n                name=\"name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"Full Name\"\n                autoFocus\n                value={name}\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n                onKeyPress={event => {\n                  if (event.key === 'Enter') {\n                document.getElementById('save').click();\n                  }\n              }}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n                onKeyPress={event => {\n                  if (event.key === 'Enter') {\n                document.getElementById('save').click();\n                  }\n              }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                onChange={(e) => {\n                  setPassword(e.target.value);\n\n                  \n                }}\n                onKeyPress={event => {\n                  if (event.key === 'Enter') {\n                document.getElementById('save').click();\n                  }\n              }}\n              />\n            </Grid>\n          </Grid>\n                  <br></br>\n          <PasswordStrengthBar password={password} />\n\n          <Button\n          id = \"save\"\n            fullWidth\n            className={classes.submit}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => {\n              UserServices.register(name, email, password)\n                .then((data) => {\n                  console.log(data);\n                  toast.success(data, {\n                    position: \"bottom-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                  });\n                  window.location.href = \"/login\";\n                })\n                .catch((err) => {\n                  toast.error(err.response.data, {\n                    position: \"bottom-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                  });\n                });\n            }}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      \n    </Container>\n  );\n}\n","F:\\myapp\\client\\src\\postForm.js",[],"F:\\myapp\\client\\src\\submitted.js",[],"F:\\myapp\\client\\src\\sketch.js",["581","582","583","584","585"],"F:\\myapp\\client\\src\\About.js",["586","587","588","589","590","591","592","593"],"import { Typography } from '@material-ui/core';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport about from './img/about.jpg'\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport home1 from './img/home1.png'\nimport about111 from './img/about111.jpeg'\nimport about222 from './img/about222.jpg'\nimport { useState, useEffect } from 'react';\nimport { Icon } from '@iconify/react'\nimport locationIcon from '@iconify/icons-mdi/map-marker'\n\nconst useStyles = makeStyles((theme) => ({\n \n    h:{\n        marginTop : '20%',\n        color: \"green\"\n    },\n\n    text : {\n           fontSize : '15px',\n           overflow: \"visible\",\n           fontWeight: 800,\n           fontStyle: \"italic\",\n           fontFamily: `\"Inter-ExtraBoldItalic\", \"Inter\", sans-serif`,\n           color: \"#433E69\",\n           letterSpacing: 1,\n           lineHeight: 1.5,\n    },\n\n    frame : {\n        height: \"auto\",\n        overflow: \"visible\",\n        display: 'block',\n        marginTop : '10%',\n        marginBottom: '10%',\n      },\n\n      frame2 : {\n        width: \"85%\",\n        height: 'auto',\n        background: \"radial-gradient(100% 50% at 0% 46.6%, #33aaff 0%, hsl(0, 0%, 66%) 100%)\",\n        overflow: \"visible\",\n      }\n\n}));\n\nfunction getWindowDimensions() {\n    const width = window.innerWidth;\n    return width\n    \n  }\n\nexport default function About() {\n\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n    const [fontSize, setFontSize] = useState(25);\n    const [widthh , setWidthh] = useState(750);\nuseEffect(() => {\n\n    setWindowDimensions(getWindowDimensions());\n\n    if(windowDimensions < 1024){ \n        setFontSize(12);\n        setWidthh(280);\n    }\n})\n    \n    const myClass = useStyles();\n\n    return(\n\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-xs-12\">\n                    <img src={about} width = '100%' height = 'auto' style = {{marginTop: '10%'}}/>\n                </div>\n            </div>\n            <div className=\"row\">\n            <div className=\"col-xs-12\" style = {{padding : 15}}>\n                    <h4 className={myClass.h}>Who We Are</h4>\n                    <Typography className={myClass.text}>We are Students in UOL. We have made this project as FYP</Typography>\n                </div>\n            </div>\n\n            <div className=\"row\">\n            <div className=\"col-xs-12\">\n                    <div className={myClass.frame}>\n                        <div style = {{marginLeft:'10%'}}>    \n                        <img src={about111} width=\"35%\" height = \"auto\"/>\n                        <img src={about222} width = \"50%\" height = \"auto\"/>\n\n                            <div className = {myClass.frame2}>\n            <Typography className = {myClass.text} style = {{fontSize : fontSize , marginLeft : '12%'}}>\n            Designed By: UOL Students <br/>\n            Supervisor: Sir Hassan Bajwa <br/>\n            Ehtisham ur Rehman (70069403@student.uol.edu.pk) <br/>\n            Saad Qadeer (70069780@student.uol.edu.pk) <br/> </Typography>\n\n                            </div>\n                            \n\n                    </div>\n                    </div>\n                </div>\n                </div>\n                <div className=\"row\">\n            <div className=\"col-xs-12\" style = {{padding : 15}}>\n                    <h4 className={myClass.h}>Where to Find us</h4>\n                    <Typography className={myClass.text}>The University of Lahore, Defence Road Campus</Typography>\n                </div>\n            </div>\n            <br/>\n            <div className=\"row\">\n            <div className=\"col-xs-12\" style = {{marginLeft:'10%'  }} >\n            <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3405.82331630059!2d74.23897181549792!3d31.39143496063751!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3919018a8ea548c1%3A0x4a52db69c2c814f!2sThe%20University%20of%20Lahore!5e0!3m2!1sen!2s!4v1615126762811!5m2!1sen!2s\" \n            width={widthh} height=\"auto\" style={{border:1}} allowfullscreen=\"yes\" loading=\"eager\"></iframe>\n                </div>\n            </div>\n            \n\n\n        </div>\n    )\n}","F:\\myapp\\client\\src\\contact.js",["594","595","596","597","598","599"],"import Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport UserServices from \"./services/UserServices\";\nimport avatar from \"./img/contactAvatar.jpg\"\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const [name, setName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [query, setQuery] = React.useState(\"\");\n  \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <img src={avatar} width=\"100%\" height = \"auto\"/>\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          We Want To Listen From You\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"name\"\n                name=\"name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"Full Name\"\n                autoFocus\n                value={name}\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n                onKeyPress={event => {\n                    if (event.key === 'Enter') {\n                  document.getElementById('save').click();\n                    }\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n                onKeyPress={event => {\n                    if (event.key === 'Enter') {\n                  document.getElementById('save').click();\n                    }\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                onKeyPress={event => {\n                    if (event.key === 'Enter') {\n                  document.getElementById('save').click();\n                    }\n                }}\n                variant=\"outlined\"\n                required\n                fullWidth\n                fullHeight\n                name=\"query\"\n                label=\"Query\"\n                type=\"query\"\n                id=\"query\"\n                value={query}\n                onChange={(e) => {\n                  setQuery(e.target.value);\n\n                  \n                }}\n              />\n            </Grid>\n          </Grid>\n          <Button\n          \n          id = \"save\"\n            fullWidth\n            className={classes.submit}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => {\n              UserServices.contact(name, email, query)\n                .then((data) => {\n                  console.log(data);\n                  toast.success(data, {\n                    position: \"bottom-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                  });\n                })\n                .catch((err) => {\n                  toast.error(err.response.data, {\n                    position: \"bottom-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                  });\n                });\n\n                setName(\"\"); setEmail(\"\"); setQuery(\"\");\n            }}\n          >\n            Submit\n          </Button>\n          <Grid container justify=\"flex-end\">\n          </Grid>\n        </form>\n      </div>\n      \n    </Container>\n  );\n}\n","F:\\myapp\\client\\src\\helper\\responsive.js",[],"F:\\myapp\\client\\src\\helper\\nav.js",["600","601","602","603","604","605","606","607","608","609","610"],"\nimport { useHistory } from 'react-router'\nimport '../css/App.css';\nimport { Button, withStyles } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Badge from \"@material-ui/core/Badge\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\n// import Cookie from \"js-cookie\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport UserServices from \"../services/UserServices\";\n// import searchProduct from \"./actions/search\";\nimport logo from '../img/logo2.png'\n\n\n\nconst StyledBadge = withStyles((theme) => ({\n    badge: {\n        right: -3,\n        top: 13,\n\n        padding: \"0 4px\",\n    },\n}))(Badge);\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        display: \"none\",\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"block\",\n        },\n    },\n\n    link: {\n        color: \"white\",\n        paddingRight: \"1rem\",\n\n        textDecoration: \"none\",\n        marginTop: \".5rem\",\n        fontFamily: \"ubuntu\",\n    },\n    search: {\n        position: \"relative\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n            marginLeft: theme.spacing(3),\n            width: \"auto\",\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    inputRoot: {\n        color: \"inherit\",\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: \"20ch\",\n        },\n    },\n    sectionDesktop: {\n        display: \"none\",\n        [theme.breakpoints.up(\"md\")]: {\n            display: \"flex\",\n        },\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    sectionMobile: {\n        display: \"flex\",\n        [theme.breakpoints.up(\"md\")]: {\n            display: \"none\",\n        },\n    },\n}));\n\nexport default function TopMenu() {\n\n    \n    const history = useHistory();\n\n    const reRender = (e) => {\n\n        history.go(0);\n    }\n\n\n    const [search, setSearch] = React.useState(\"\");\n    // const cart = useSelector((state) => state.cart);\n    // const { cartItems } = cart;\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n    // const dispatch = useDispatch();\n\n    // const searchHandler = () => {\n    //     dispatch(searchProduct(search));\n    // };\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const menuId = \"primary-search-account-menu\";\n\n    const mobileMenuId = \"primary-search-account-menu-mobile\";\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                {\" \"}\n                <Typography variant=\"h6\">\n                    <Link to=\"/\" className={classes.link} style={{ color: \"black\" }} onClick={reRender}>\n                        Home\n                    </Link>\n                </Typography>\n            </MenuItem>\n            <MenuItem>\n                <Typography variant=\"h6\">\n                    <Link\n                        to=\"/sketch\"\n                        className={classes.link}\n                        style={{ color: \"black\" }}\n                        // onClick={reRender} \n                        >\n                        Sketch App\n                    </Link>\n                </Typography>\n            </MenuItem>\n\n            <MenuItem>\n                {\" \"}\n                <Typography variant=\"h6\">\n                    <Link\n                        to=\"/contact-us\"\n                        className={classes.link}\n                        style={{ color: \"black\" }}\n                        // onClick={reRender}\n                        >\n                        Contact us\n                    </Link>\n                </Typography>\n            </MenuItem>\n\n            <MenuItem>\n                {\" \"}\n                <Typography variant=\"h6\">\n                    <Link\n                        to=\"/about\"\n                        className={classes.link}\n                        style={{ color: \"black\" }}\n                        // onClick={reRender}\n                        >\n                        About us\n                    </Link>\n                </Typography>\n            </MenuItem>\n\n            <MenuItem>\n                {\" \"}\n                <Typography variant=\"h6\">\n                    <Link\n                        to=\"/login\"\n                        className={classes.link}\n                        style={{ color: \"black\" }}\n                        // onClick={reRender}\n                        >\n                        Login\n                    </Link>\n                </Typography>\n            </MenuItem>\n\n            {UserServices.isLoggedin\n                ? UserServices.getLoggedinfo().role === \"admin\" && (\n                <MenuItem>\n                    <Link to=\"/dashboardA\" className={classes.link}> \n                        <Button\n                            color=\"secondary\"\n                            style={{\n                                color: \"black\",\n                                backgroundColor: \"#FEBD69\",\n                                textDecoration: \"none\",\n                                paddingLeft: \"1rem\",\n                                paddingRight: \"1rem\",\n                            }}\n                        >\n                            Admin\n                        </Button>\n                    </Link>\n                </MenuItem>\n            )\n                : \"\"}\n\n            {!UserServices.isLoggedin ? (\n                <>\n                    <MenuItem>\n                        <Link to=\"/login\" className={classes.link}>\n                            <Button\n                                color=\"secondary\"\n                                style={{\n                                    color: \"black\",\n                                    backgroundColor: \"#FEBD69\",                                    textDecoration: \"none\",\n                                    paddingLeft: \"1rem\",\n                                    paddingRight: \"1rem\",\n                                }}\n                            >\n                                Login\n                            </Button>\n                        </Link>\n                    </MenuItem>\n                    <MenuItem>\n                        <Link to=\"/signup\" className={classes.link}>\n                            <Button\n                                color=\"secondary\"\n                                style={{\n                                    color: \"black\",\n                                    backgroundColor: \"#FEBD69\",\n                                    textDecoration: \"none\",\n                                    paddingLeft: \"1rem\",\n                                    paddingRight: \"1rem\",\n\n                                    marginLeft: \"0.1rem\",\n                                }}\n                            >\n                                Sign up\n                            </Button>\n                        </Link>\n                    </MenuItem>\n                </>\n            ) : (\n                <MenuItem>\n                    <Link className={classes.link}>\n                        <Button\n                            color=\"secondary\"\n                            style={{\n                                color: \"black\",\n                                backgroundColor: \"#FEBD69\",\n                                textDecoration: \"none\",\n                                paddingLeft: \"1rem\",\n                                paddingRight: \"1rem\",\n\n                                marginLeft: \"0.1rem\",\n                            }}\n                            onClick={UserServices.logout}\n                        >\n                            Logout\n                        </Button>\n                    </Link>\n                </MenuItem>\n            )}\n        </Menu>\n    );\n\n    return (\n        <div className={classes.grow}>\n\n            <AppBar\n                position=\"static\"\n                style={{\n                    backgroundColor: \"#232F3E\",\n                    textAlign: \"center\",\n                    justifyContent: \"center\",\n                }}\n            >\n                <Toolbar>\n                    {/*<Typography className={classes.title} variant=\"h6\" noWrap>*/}\n                    {/*    <Link className={classes.link} to=\"/\" style={{ color: \"#FEBD69\" }}>*/}\n                    {/*        Expotech*/}\n                    {/*    </Link>*/}\n                    {/*</Typography>*/}\n                    {/*<div className={classes.search}>*/}\n                    {/*    <InputBase*/}\n                    {/*        placeholder=\"Search the Store\"*/}\n                    {/*        classes={{*/}\n                    {/*            root: classes.inputRoot,*/}\n                    {/*            input: classes.inputInput,*/}\n                    {/*        }}*/}\n                    {/*        inputProps={{ \"aria-label\": \"search\" }}*/}\n                    {/*        onChange={(e) => {*/}\n                    {/*            setSearch(e.target.value);*/}\n                    {/*        }}*/}\n                    {/*    />*/}\n                    {/*</div>*/}\n                    {/*/!*<Button*!/*/}\n                    {/*    style={{*/}\n                    {/*        backgroundColor: \"#FEBD69\",*/}\n                    {/*        borderRadius: \"0rem .5rem .5rem 0rem\",*/}\n                    {/*        padding: \".3rem\",*/}\n                    {/*        marginLeft: \"-15px\",*/}\n                    {/*    }}*/}\n                    {/*    onClick={() => {*/}\n                    {/*        searchHandler();*/}\n                    {/*    }}*/}\n                    {/*>*/}\n                    {/*    <SearchIcon />*/}\n                    {/*</Button>*/}\n                    <Link to=\"/\" className={classes.link}>\n                    <img src = {logo} width=\"auto\" height = \"5%\" className = \"App-logo\"/>\n                    </Link>\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        <Typography variant=\"h6\">\n                            <Link to=\"/\" className={classes.link}>\n                              Home\n                            </Link>\n                        </Typography>\n                        <Typography variant=\"h6\">\n                            <Link to=\"/sketch\" className={classes.link} \n                            // onClick={reRender}\n                            >\n                                Sketch App\n                            </Link>\n                        </Typography>\n\n                        <Typography variant=\"h6\">\n                            <Link to=\"/contact-us\" className={classes.link} \n                            // onClick={reRender}\n                            >\n                                Contact us\n                            </Link>\n                        </Typography>\n\n                        <Typography variant=\"h6\">\n                            <Link to=\"/about\" className={classes.link} \n                            // onClick={reRender}\n                            >\n                                About us\n                            </Link>\n                        </Typography>\n\n                        {UserServices.isLoggedin\n                            ? \n                            UserServices.getLoggedinfo().role === \"admin\" && \n                            (\n                            <Link to=\"/dashboardA\" className={classes.link}>\n                                <Button\n                                    color=\"secondary\"\n                                    style={{\n                                        color: \"black\",\n                                        backgroundColor: \"#C0C0C0\",\n                                        textDecoration: \"none\",\n                                        paddingLeft: \"1rem\",\n                                        paddingRight: \"1rem\",\n                                    }}\n                                >\n                                    Admin\n                                </Button>\n                            </Link>\n                        )\n                            : \"\"}\n\n                        {!UserServices.isLoggedin ? (\n                            <>\n                                <Link to=\"/login\" className={classes.link}>\n                                    <Button\n                                        color=\"secondary\"\n                                        style={{\n                                            color: \"black\",\n                                            backgroundColor: \"#C0C0C0\",\n                                            textDecoration: \"none\",\n                                            paddingLeft: \"1rem\",\n                                            paddingRight: \"1rem\",\n                                        }}\n                                    >\n                                        Login\n                                    </Button>\n                                </Link>\n\n                                <Link to=\"/signup\" className={classes.link}>\n                                    <Button\n                                        color=\"secondary\"\n                                        style={{\n                                            color: \"black\",\n                                            backgroundColor: \"#C0C0C0\",\n                                            textDecoration: \"none\",\n                                            paddingLeft: \"1rem\",\n                                            paddingRight: \"1rem\",\n\n                                            marginLeft: \"0.1rem\",\n                                        }}\n                                    >\n                                        Subscribe\n                                    </Button>\n                                </Link>\n                            </>\n                        ) : (\n                            <Link className={classes.link}>\n                                <Button\n                                    color=\"secondary\"\n                                    style={{\n                                        color: \"black\",\n                                        backgroundColor: \"#C0C0C0\",\n                                        textDecoration: \"none\",\n                                        paddingLeft: \"1rem\",\n                                        paddingRight: \"1rem\",\n                                        marginLeft: \"0.1rem\",\n\n                                    }}\n                                    onClick={UserServices.logout}\n                                    \n                                >\n                                    Logout\n                                </Button>\n                            </Link>\n                        )}\n\n                        {/* <IconButton\n                            aria-label=\"cart\"\n                            color=\"inherit\"\n                            onClick={() => {\n                                window.location.href = \"/cart/\";\n                            }}\n                        >\n                            <StyledBadge\n                                badgeContent={cartItems.reduce((a, c) => a + Number(c.qty), 0)}\n                                color=\"secondary\"\n                            >\n                                <ShoppingCartIcon />\n                            </StyledBadge>\n                        </IconButton> */}\n\n                        <IconButton\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            {UserServices.isLoggedin && (\n                                <Typography> {UserServices.getLoggedinfo().name} <AccountCircle /> </Typography>\n                            ) }\n\n                             \n                        </IconButton> \n                    </div>\n\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu} \n        </div>\n\n    );\n}","F:\\myapp\\client\\src\\admin\\Dashboard.js",["611","612","613"],"import UserServices from \"../services/UserServices\";\nimport welcome from \"../img/welcome.jpg\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport notAllowed from \"../img/not_allowed.jpg\"\nimport onlyAdmins from \"../img/only_admins.jpg\"\n\n\nexport default function Dashboard() {\n\n    return (\n        <>\n         {UserServices.isLoggedin\n                            ? UserServices.getLoggedinfo().role === \"admin\" && (\n                            \n                                <div className=\"container\">\n\n                            <h1>Welcome to Admin</h1>\n                            <img src={welcome} width=\"100%\" height = \"auto\"  style = {{ marginBottom : '10%'}}/>\n                            </div>\n                            \n                        )\n                            : \" \"}\n                            {UserServices.isLoggedin ? UserServices.getLoggedinfo().role === \"user\" && (\n                               \n                               <div className=\"container\">\n                               <h1>Only Admins</h1>\n                                <img src={onlyAdmins} width=\"100%\" height = \"auto\" style ={{marginBottom : '10%'}}/>\n                                </div>\n                            ) : (\n                            <div className=\"container\"> \n                            <h1>Please login first</h1>\n                            <img src={notAllowed} width=\"100%\" height = \"auto\" style = {{ marginBottom : '10%'}}/>\n                            </div>\n                            )}\n        </>\n    )\n}","F:\\myapp\\client\\src\\helper\\footer.jsx",["614","615","616","617","618","619","620"],"F:\\myapp\\client\\src\\services\\UserServices.js",[],"F:\\myapp\\client\\src\\sketchHelper\\TabPanel.js",[],"F:\\myapp\\client\\src\\sketchHelper\\useStyles.js",[],"F:\\myapp\\client\\src\\scrapMe.jsx",["621","622","623"],"F:\\myapp\\client\\src\\services\\GenericServices.js",[],"F:\\myapp\\client\\src\\sketchHelper\\handleSave.js",["624"],"import {saveAs} from 'file-saver';\nimport elements from '../sketch';\n\nexport function handleSave() {\n    const canvas = document.getElementById(\"canvas\");\n    const context = canvas.getContext('2d');\n    context.fillStyle = \"white\";\n    context.font = \"bold 16px Arial\";\n    context.fillText(\"Aoo Ghr Bnain\" , (canvas.width / 2) - 17, (canvas.height / 2) + 8);\n\n    canvas.toBlob(function (blob) {\n        saveAs(blob, \"pretty image.png\")\n\n    });\n\n    \n\n    alert(\"File Save Successfully\");\n    // //\n    //\n    // const writeJsonFile = require('write-json-file');\n    // const jsonFile = \"/tmp/exampleFile.json\";\n    // writeJsonFile(jsonFile,{canvas:true}).catch(err => console.log(err));\n    //\n\n\n\n\n}\n","F:\\myapp\\client\\src\\sketchHelper\\handleMouseMove.js",["625","626","627","628","629"],"import {action, \n        setAction ,\n        elements, \n        getElementAtPosition, \n        mouse, \n        selectedElement, \n        tool, setElementWidth , setElementLength} from \"../sketch\";\nimport {updateElement} from \"./updateElement\";\n\nexport const handleMouseMove = (event) => {\n    // const {clientX, clientY} = event;\n\n    let bounds = event.target.getBoundingClientRect();\n    mouse.x = event.pageX - bounds.left - window.scrollX;  // is window.scrollX same for Y\n    mouse.y = event.pageY - bounds.top - window.scrollY;\n\n    if(tool === \"selection\")\n    {\n        event.target.style.cursor = getElementAtPosition(mouse.x, mouse.y, elements)\n            ? \"move\" : \"default\";\n    }\n\n    if(tool === \"text\")\n    {\n        event.target.style.cursor = getElementAtPosition(mouse.x, mouse.y, elements)\n            ? \"text\" : \"default\";\n    }\n\n    if(tool === \"eraser\")\n    {\n        event.target.style.cursor = getElementAtPosition(mouse.x, mouse.y, elements)\n            ? \"move\" : \"default\";\n    }\n    if(tool === \"resize\")\n    {\n        event.target.style.cursor = getElementAtPosition(mouse.x, mouse.y, elements)\n            ? \"resize\" : \"default\";\n    }\n    // if(tool === \"rectangle\" || tool ===\"circle\" || tool ===\"wall\" || tool ===\"arcL\" ||\n    //     tool ===\"arcR\" || tool ===\"ellipse\"){\n    //\n    //     event.target.style.cursor = getCvsAtPosition(canvas.getBoundingClientRect().width , canvas.getBoundingClientRect().height, elements)\n    //         ? \"crosshair\" : \"default\";\n    // }\n\n    if(action === \"drawing\") {\n        const index = elements.length - 1;\n        const {x1,y1} = elements[index];\n        updateElement(index, x1 , y1 , mouse.x, mouse.y , tool);\n\n    }\n    else if (action === \"moving\")\n    {\n        const {id , x1, x2, y1, y2 , type , offsetX, offsetY} = selectedElement;\n        const width = x2-x1;\n        const height = y2-y1;\n        const nexX1 = mouse.x- offsetX;\n        const nexY1 = mouse.y - offsetY;\n\n        // type.scale(mouse.x , mouse.y);\n\n        updateElement(id, nexX1, nexY1, nexX1 + width, nexY1 + height, type);\n        \n    }\n    else if (action === \"eraser\")\n    {\n        const {id , x1, x2, y1, y2 , type , offsetX, offsetY} = selectedElement;\n        const width = x2-x1;\n        const height = y2-y1;\n        const nexX1 = mouse.x- offsetX;\n        const nexY1 = mouse.y - offsetY;\n\n        // type.scale(mouse.x , mouse.y);\n\n        updateElement(id, nexX1, nexY1, nexX1 + width, nexY1 + height, null);\n    }\n\n    else if (action === \"resize\")\n    {\n        const {id , x1, x2, y1, y2 , type , offsetX, offsetY} = selectedElement;\n        const width = x2-x1;\n        const height = y2-y1;\n        const nexX1 = mouse.x- offsetX;\n        const nexY1 = mouse.y - offsetY;\n\n        alert(\"Your previous Width was \" + width / 15.36)\n\n        alert(\"Your previous Width was \" + height / 15.36)\n        \n\n        const newx1 = prompt(\"Your previous x1 was \" + x1 + \" Enter x1 \")\n        const newx2 = prompt(\"Your previous x2 was \" + x2 + \" Enter x2 \")\n        const newy1 = prompt(\"Your previous y1 was \" + y1 + \" Enter y1 \")\n        const newy2 = prompt(\"Your previous y2 was \" + y2 + \" Enter y2 \")\n        // type.scale(mouse.x , mouse.y);\n\n        if(newx1 && newx2 && newy1 && newy2)\n        {\n        updateElement(id, newx1, newy1, newx2, newy2, type);\n        }\n        else{\n            updateElement(id, nexX1, nexY1, nexX1 + width, nexY1 + height, type);\n        }\n        setAction(\"selection\")\n    }\n\n    else if (action === \"sizes\")\n    {\n        const {id , x1, x2, y1, y2 , type , offsetX, offsetY} = selectedElement;\n        const width = x2-x1;\n        const height = y2-y1;\n        const nexX1 = mouse.x- offsetX;\n        const nexY1 = mouse.y - offsetY;\n\n        // type.scale(mouse.x , mouse.y);\n\n        setElementWidth(width);\n        setElementLength(height);\n    }\n\n};","F:\\myapp\\client\\src\\sketchHelper\\toggleDrawer.js",[],"F:\\myapp\\client\\src\\sketchHelper\\isWithinElement.js",[],"F:\\myapp\\client\\src\\sketchHelper\\handleMouseUp.js",[],"F:\\myapp\\client\\src\\sketchHelper\\handleMouseDown.js",["630","631","632"],"import {    mouse ,\n            myArr ,\n            setMyArr , \n            elements , \n            setElements ,\n            getElementAtPosition , \n            setAction , \n            selectedElement,\n            setSelectedElement, \n            tool } \n        \n            from \"../sketch\";\n\n\nimport {createElement} from \"./createElement\";\n\nexport const handleMouseDown = (event) => {\n    // const { clientX , clientY} = event;\n    if (tool === \"selection\") {\n        const element = getElementAtPosition(mouse.x, mouse.y, elements);\n        if(element)\n        {\n            const offsetX = mouse.x - element.x1 ;\n            const offsetY = mouse.y - element.y1 ;\n\n            setSelectedElement({...element,offsetX,offsetY});\n            setAction(\"moving\");\n        }\n\n    }\n    else if(tool === \"eraser\")\n    {\n        const element = getElementAtPosition(mouse.x, mouse.y, elements);\n        if(element)\n        {\n            const offsetX = mouse.x - element.x1 ;\n            const offsetY = mouse.y - element.y1 ;\n            setSelectedElement({...element,offsetX,offsetY});\n            setAction(\"eraser\");\n        }\n    }\n\n    else if(tool === \"text\")\n    {\n        const element = getElementAtPosition(mouse.x, mouse.y, elements);\n        if(element)\n        {\n            const offsetX = mouse.x - element.x1 ;\n            const offsetY = mouse.y - element.y1 ;\n            setSelectedElement({...element,offsetX,offsetY});\n            setAction(\"text\");\n        }\n    }\n    else if(tool === \"resize\")\n    {\n        const element = getElementAtPosition(mouse.x, mouse.y, elements);\n        if(element)\n        {\n            const offsetX = mouse.x - element.x1 ;\n            const offsetY = mouse.y - element.y1 ;\n            setSelectedElement({...element,offsetX,offsetY});\n            setAction(\"resize\");\n        }\n    }\n\n    else if(tool === \"sizes\")\n    {\n        const element = getElementAtPosition(mouse.x, mouse.y, elements);\n        if(element)\n        {\n            const offsetX = mouse.x - element.x1 ;\n            const offsetY = mouse.y - element.y1 ;\n            setSelectedElement({...element,offsetX,offsetY});\n\n            setAction(\"sizes\")\n        }\n    }\n\n    else {\n        setAction(\"drawing\");\n        // const {clientX, clientY} = event;\n        const id = elements.length;\n        const element =  createElement(id, mouse.x, mouse.y, mouse.x, mouse.y, tool);\n        setElements(prevState => [...prevState, element]);\n\n\n    }\n};","F:\\myapp\\client\\src\\sketchHelper\\updateElement.js",[],"F:\\myapp\\client\\src\\sketchHelper\\createElement.js",["633"],"import rough from 'roughjs/bundled/rough.esm';\nimport Konva from 'konva'\n\nconst generator = rough.generator();\n\nexport function createElement(id, x1, y1, x2, y2 , type ){\n    const roughElement = type === \"line\"\n        ? generator.line(x1,y1,x2,y2, { roughness: 0 , strokeWidth: 3})\n\n        : type === \"rectangle\" ? generator.rectangle(x1, y1, x2-x1, y2-y1 , { roughness: 0 , strokeWidth: 3 })\n\n            : type === \"ellipse\" ? generator.ellipse(x1, y1, x2-x1, y2-y1 , { roughness: 0 , strokeWidth: 3})\n\n                : type === \"arcL\" ? generator.arc(x1, y1, x2-x1, x2-x1 , Math.PI , Math.PI * 1.5, true ,  { roughness: 0 , strokeWidth: 3})\n\n                    : type === \"arcR\" ? generator.arc(x1, y1, x2-x1, x2-x1 ,  Math.PI * 1.5 , Math.PI * 2.0, true ,  { roughness: 0 , strokeWidth: 3})\n\n                        : type === \"circle\" ? generator.circle(x1, y1, x2-x1,   { roughness: 0 , strokeWidth: 3}) :\n\n                            \"\" ;\n\n\n    return {id, x1, y1, x2, y2, type , roughElement};\n\n}","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\index.js",[],["634","635"],"C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\reportWebVitals.js",[],"C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\App.js",["636","637","638"],"import './css/App.css';\nimport './helper/responsive';\nimport Nav from './helper/nav';\nimport PostForm from \"./postForm\";\nimport AnimatedCursor from \"react-animated-cursor\"\nimport {\n    BrowserRouter as Router,\n    Redirect,\n    Route,\n    Switch,\n} from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport login from \"./auth/login.js\";\nimport signup from \"./auth/signup.js\";\n// import Cart from \"./components/Cart.jsx\";\nimport contactus from \"./contact\";\nimport Home from \"./home.jsx\";\nimport notfound from \"./helper/notfound.js\";\nimport sketch from \"./sketch\";\n// import Addproduct from \"./components/products/Addproduct.jsx\";\n// import Editproduct from \"./components/products/editProduct\";\nimport dashboardA from \"./admin/Dashboard\";\nimport about from \"./About\";\nimport TopMenu from \"./helper/nav\";\nimport submitted from \"./submitted\";\nimport addByAdmin from \"./auth/addByAdmin\";\nimport Footer from \"./helper/footer\"\nimport dashboardB from \"./users/userDashboard\";\nimport Payment from \"./services/payment\";\n\n// import Checkout from \"./components/checkout/Checkout.js\";\n function App() {\n    function forceUpdateHandler(){\n        window.location.reload(false);\n          }\n          \n\n     return (\n        <>\n\n            {/*<PostForm />*/}\n     {/*<Nav />*/}\n\n\n\n\n\n\n            <Router>\n                <div>\n\n                <AnimatedCursor  \n                    innerSize={10}\n                    outerSize={10}\n                    color='193, 11, 111'\n                    outerAlpha={0.2}\n                    innerScale={0.7}\n                    outerScale={5}/>\n\n                    <ToastContainer />\n                    <TopMenu />\n                    <Switch>\n                        {/*<Route*/}\n                        {/*    path=\"/products/product_details/:id\"*/}\n                        {/*    component={ProductPage}*/}\n                        {/*></Route>*/}\n                        {/*<Route path=\"/cart/:id?\" component={Cart}></Route>*/}\n                        {/*<Route*/}\n                        {/*    path=\"/manageProducts/Addproduct\"*/}\n                        {/*    component={Addproduct}*/}\n                        {/*></Route>*/}\n                        {/*<Route*/}\n                        {/*    path=\"/manageProducts/Editproduct/:id\"*/}\n                        {/*    component={Editproduct}*/}\n                        {/*></Route>*/}\n\n                        <Route path=\"/dashboardA\" component={dashboardA}></Route>\n                        <Route path=\"/dashboardB\" component={dashboardB}></Route>\n\n                        <Route path=\"/payment\" component={Payment}></Route>\n\n                        {/*<Route path=\"/checkout\" component={Checkout}></Route>*/}\n\n                        {/*<Route path=\"/products\" component={products}></Route>*/}\n\n                        <Route path=\"/contact-us\" component={contactus} \n                        // onClick={forceUpdateHandler}\n                        />\n\n                        <Route path=\"/submitted\" component={submitted} \n                        // onClick={forceUpdateHandler}\n                        />\n                        <Route path=\"/notfound\" component={notfound}/>\n                        <Route path=\"/login\" component={login} \n                        // onClick={forceUpdateHandler}\n                        />\n                        <Route path=\"/signup\" component={signup}/>\n                        <Route path=\"/sketch\" component={sketch}/>\n                        <Route path=\"/about\" component={about}/>\n\n                       \n                        <Route path=\"/addByAdmin\" component={addByAdmin}/>\n                        <Route path=\"/\" exact component={Home}/>\n                        <Redirect to=\"/notfound\"/>\n                    </Switch>\n                    <Footer/>\n                </div>\n            </Router>\n\n        </>\n  )\n}\nexport default App;\n","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\home.jsx",["639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658"],"import './css/App.css';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport front from './img/front.jpg';\n// import home1 from \"./img/home1.png\";\nimport home1 from \"./img/home1-removebg-preview (2).png\";\n// import home2 from \"./img/home2.png\";\nimport home2 from \"./img/home2-removebg-preview (2).png\";\n// import home3 from \"./img/home3.png\";\nimport home3 from \"./img/home3-removebg.png\";\n// import home4 from \"./img/home4.jpg\";\n// import home4 from \"./img/home4-removebg.png\";\n// import home4 from \"./img/home4-removebg-preview.png\";\n\nimport home4 from \"./img/home44.png\";\n\nimport home5 from \"./img/home5.png\";\nimport coffee from \"./img/coffee.jpg\"\nimport lightening from \"./img/lightening.png\";\n\nimport React, { useEffect } from 'react';\nimport { Spin } from 'antd';\nimport { check } from 'antd';\nimport 'antd/dist/antd.css';\nimport {Button, IconButton} from \"@material-ui/core\";\nimport {BrowserRouter as Router, Link, Route, Switch} from \"react-router-dom\";\nimport MyEstimates from \"./sketch\";\nimport logo from \"./img/logoA.png\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Typography from \"@material-ui/core/Typography\";\nimport { FaBeer } from 'react-icons/fa';\nimport { LogoNodejs } from 'react-ionicons'\nimport { Heart } from 'react-ionicons'  \nimport { Close } from 'react-ionicons'  \n\nimport { toast } from \"react-toastify\";\n\nimport AnimatedButton from '@bit/tabinda.react-button-animation.animated.button';\n\n\nconst useStyles = makeStyles((theme) => ({\n    p: {\n            overflow: \"visible\",\n            letterSpacing: 0.5,\n            color: \"#433E69\",\n            fontSize: '20px',\n            fontWeight: 700,\n            fontStyle: \"italic\",\n            fontFamily: `\"Inter-ExtraBoldItalic\", \"Inter\", sans-serif`,\n            lineHeight: 2,\n            textAlign: \"center\",\n            top: '20%' ,\n            height: 'auto',\n            width : '100%'\n            \n        },\n    frame : {\n        width: '100%',\n        height: 'auto',\n    },\n\n    textframe:{\n    width: '100%',\n  height: 'auto',\n  overflow: \"hidden\",\n//   transform: \"translate('-50%' , -'50%' )\" ,\n  background: \"radial-gradient(92.10000000000001% 50% at 5.2% 52.7%, #2266ff 0%, hsl(222, 57%, 77%) 100%)\",\nborderRadius: \"5%\",   \n\n},\n\nframe1 : {\n\n    width: '100%',\n    height: 'auto',\n    overflow: 'visible',\n    background: \"radial-gradient(100% 50% at 0% 50%, #593b3b 0%, hsla(0, 71%, 76%, 0.66) 100%)\",\n\n},\n\nliText : {\n\n    width: '100%',\n    height: 'auto',\n    overflow: 'visible',\n    color: 'white',\n    textAlign: 'left',\n    lineHeight: '2.3',\n    fontWeight: '700',\n    fontStyle: 'italic',\n    fontFamily: \"Inter-Bold\" || \"Inter\" || \"sans-serif\",\n    fontSize: '14.3px',\n    letterSpacing: '0px',\n},\n\n    myStyle : {\n        position: 'absolute',\n        top: '20%' ,\n        left: '35%' ,\n        transform: \"translate('-50%' , -'50%' )\" ,\n        width: '30%',\n        height: 'auto',\n    }\n\n\n\n}));\n\nconst Sketch = () => <div> <MyEstimates/>     </div>;\n\nfunction Home() {\n\n    const width = '100%';\n    const height = 'auto';\n\n    const myClass = useStyles();\n\n    return (\n<div style={{overflow : 'hidden'}}>\n<img width = {width} height = {height}\n                     src = {front}\n                     alt=\"image\" \n                     style = {{  opacity:0.8 , borderBottomRightRadius : '20%' }}\n                     \n                     />\n                     \n\n                     <img src = {logo} className={myClass.myStyle}/>\n\n<div style={{paddingLeft : \"10px\" , paddingRight : \"10px\" }}>\n<div className=\"container\">\n<div className=\"row\" style={{marginTop:80}}>\n  <div className=\"col-md-3\"style={{marginTop:70}}>\n      <div className={myClass.textframe}>\n    <p  className={myClass.p} >\n     Here you can build your buildings ( architectural  designs layout)\n    and estimate  the results. You can also see the\n     trending materials in market and see their prices.</p>\n                </div>\n    </div>\n\n   \n\n<div className=\"col-md-4\">\n\n<p className={myClass.p} style ={{textAlign: \"left\" , marginTop: '20%' , fontSize : '15.5px'}}>\n                     Sketch with app estimate with </p>\n                     <div style={{marginTop: '10%'}}></div>\n                         <Link to=\"/sketch\" style={{textDecoration: 'none' }} >\n                             \n                             <AnimatedButton style={{ marginTop: '20%' , align : 'center' }} label =    \"Sketch App Estimate\"/>\n                         \n                         </Link>\n<div style={{marginTop: '10%'}}></div>\n                         </div>\n<div className=\"col-md-4\">\n    <img className={myClass.frame}\n                     width={\"35%\"}\n                     src = {home2}\n                     alt=\"image\" />\n                     {/* </div>\n                     <div className=\"col-md-3\" style = {{marignTop : '5%'}}> */}\n                    <img className={myClass.frame}\n                     src = {home1}\n                     alt=\"image\" />\n    </div>\n\n</div>\n\n<div className=\"row\" style={{marginTop: '3%'}}>\n    <div className=\"col-md-12\">\n\n    <p className={myClass.p} >\n    Just two Steps For your results</p>\n\n    </div>\n\n\n</div>\n\n<div className=\"row\" style={{marginTop : '3%'}}>\n    <div className=\"col-md-5\">\n\n    <p className={myClass.p} >\n                    Layout Design </p>\n                    <img style={{width:'50%' , height:'auto' ,  marginLeft: '25%' \n  , marginTop : '3%'}}\n                 src = {home4}\n                 alt=\"image\" />\n\n\n    </div>\n\n    <div className=\"col-md-2\">\n        \n        {/* <Spin style={{width:'100%' , marginTop: '20%' , marginBottom:'20%'}} /> */}\n\n        <img style={{width:'150%' , height:'auto' ,  marginLeft: '-25%' \n  , marginTop : '5%'}}\n                 src = {lightening}\n                 alt=\"image\" />\n    </div>\n\n    <div className=\"col-md-5\">\n\n    <p className={myClass.p} style={{marginTop:'3%'}}>\n    Estimate Design </p>\n\n    <img style={{width:'60%' , height:'auto' , marginLeft: '25%' }}\n                 src = {home3}\n                 alt=\"image\" />\n\n    </div>\n\n\n</div>\n\n<div className=\"row\">\n<img style={{width:'60%' , height:'auto' , marginLeft: '20%' }}\n                 src = {home5}\n                 alt=\"image\" />\n\n</div>\n<div className=\"row\">\n<p className={myClass.p} \nstyle={{\n    marginTop:'3%' , \n    fontStyle : 'normal' , \n    fontSize : '20px' ,\n    }}>\nBuy us a cup of Coffee and get\n\nyour Subscription today </p>\n\n</div>\n\n\n<div className=\"row\" style={{marginTop : '3%'}}>\n<div className=\"col-md-4\">\n\n\n\n<img style={{width:'80%' , height:'auto' , borderRadius : '10%' }}\n                 src = {coffee}\n                 alt=\"image\" />\n\n\n</div>\n\n\n<div className=\"col-md-4\">\n    <div className={myClass.frame1}>\n{/* <div style={{marginTop:\"12%\"}}></div> */}\n<Typography className={myClass.p} style = {{paddingTop : '20px' , fontSize : '20px'}}>Features</Typography>\n\n<ol className={myClass.liText}>\n<li>Build</li>\n<li>Estimate</li>\n<li>See Material From Other Sources</li>\n<li>Save Locally</li>\n<li>Save On Web App</li>\n<li>Save As pdf For Verification (NOC and print on A3)</li> \n<li>View From DB</li>\n</ol>\n<Link to=\"/signup\" style={{textDecoration: 'none' }} >\n                             \n                             <AnimatedButton style={{ marginTop: '20%' , align : 'center' }} \n                             label =    \"We will be glad to see you \"/>\n                         \n                         </Link>\n    </div>\n    </div>\n\n\n\n<div className=\"col-md-2\"><div className={myClass.frame1}\n\nstyle = {{background: \"radial-gradient(100% 50% at 0% 50%, #593b3b 0%, hsla(0, 71%, 76%, 0.66) 100%)\" }}>\n\n{/* <div style={{marginTop:\"25%\"}}></div> */}\n\n<Typography className={myClass.p} style = {{paddingTop : '20px', fontSize : '20px' }}>UnSubscribed</Typography>\n\n<ol className={myClass.liText} style = {{textAlign : 'center'}} >\n<li>  <Heart\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"18%\"\n  onClick={() => toast.success('Service Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/>  </li>\n<li><Heart\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"18%\"\n  onClick={() => toast.success('Service Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li>\n<li><Heart\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"18%\"\n  onClick={() => toast.success('Service Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li>\n<li><Heart\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"18%\"\n  onClick={() => toast.success('Service Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li>\n<li><Close\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"18%\"\n  onClick={() => toast.error('Service Not Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li>\n<li><Close\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"18%\"\n  onClick={() => toast.error('Service Not Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li> \n<li><Close\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"18%\"\n  onClick={() => toast.error('Service Not Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li>\n</ol>\n<Link to=\"/sketch\" style={{textDecoration: 'none' }} >\n                             \n                             <AnimatedButton style={{ marginTop: '20%' , align : 'center' }} label =    \"Sketch App\"/>\n                         \n                         </Link>\n\n    </div></div>\n\n\n<div className=\"col-md-2\"><div className={myClass.frame1} \n\nstyle = {{background: \"radial-gradient(100% 50% at 0% 50%, #593b3b 0%, hsla(0, 71%, 76%, 0.66) 100%)\" }}>\n\n{/* <div style={{marginTop:\"25%\"}}></div> */}\n\n\n<Typography className={myClass.p} style = {{paddingTop : '20px' , fontSize : '20px'}}>Subscribed</Typography>\n\n<ol className={myClass.liText} style = {{textAlign : 'center'}}>\n<li><Heart\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"18%\"\n  onClick={() => toast.success('Service Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li>\n<li><Heart\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"18%\"\n  onClick={() => toast.success('Service Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li>\n<li><Heart\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"18%\"\n  onClick={() => toast.success('Service Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li>\n<li><Heart\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"18%\"\n  onClick={() => toast.success('Service Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li>\n<li><Heart\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"18%\"\n  onClick={() => toast.success('Service Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li>\n<li><Heart\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"18%\"\n  onClick={() => toast.success('Service Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li> \n<li><Heart\n  color={'#8B0000'}\n  beat\n  height=\"auto\"\n  width=\"18%\"\n  onClick={() => toast.success('Service Available', {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  })}\n/></li>\n</ol>\n<Link to=\"/signup\" style={{textDecoration: 'none' }} >\n                             \n                             <AnimatedButton style={{ marginTop: '20%' , align : 'center' }} label =    \"Subscribe\"/>\n                         \n                         </Link>\n    </div></div>\n    </div>\n</div>\n\n</div>\n</div>\n\n\n//             <Router>\n\n//                 <Switch>\n//                     <Route path=\"/sketch\" component={Sketch} />\n//                 </Switch>\n//             </Router>\n\n    )\n}\nexport default Home;\n","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\helper\\notfound.js",["659"],"C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\auth\\login.js",["660","661","662","663","664"],"\n// import React, { Component } from 'react';\n// import axios from 'axios';\n\n// class Create extends Component {\n//     constructor(props) {\n//         super(props);\n\n//         this.state = {\n//             username: '',\n//             password: '',\n//             data:'',\n//         };\n//     }\n\n//     handleInputChange = e => {\n//         this.setState({\n//             [e.target.name]: e.target.value,\n//         });\n//     };\n\n//     handleSubmit = e => {\n//         e.preventDefault();\n\n//         // console.log(\"happy\")\n//         const { username , password } = this.state;\n\n\n//         const account = {\n//             username,\n//             password,\n//         };\n\n//         // console.log(account);\n\n    \n\n//         axios.post('http://localhost:5000/auth', account )\n//             .then((res) =>{ \n//                             // this.data = res.data\n//                             console.log(res.status);\n//                             console.log(res.isLoggedin);\n//                 if(res.isLoggedin){\n\n//                     window.location.href = '/welcome ';\n//                 }\n                            \n                            \n//                         })\n//             .catch(err => {\n//                 console.error(err.status);  \n//             },{\n//                 withCredentials: true,\n//                 headers: {'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json'\n//             }});\n\n//         this.setState({ name: '', email: '' })\n\n//         document.forms['myform'].reset();\n\n\n//     };\n\n   \n\n//     render() {\n//         return (\n//             <div>\n//                 <br />\n//                 <div className=\"container\">\n\n//                         <div className=\"login-form\">\n//                             <h1>Login Form</h1>\n//                             <form onSubmit={this.handleSubmit} id=\"myform\">\n//                                 <input type=\"text\" name=\"username\" placeholder=\"Username\" required onChange={this.handleInputChange}/>\n//                                     <input type=\"password\" name=\"password\" placeholder=\"Password\" required onChange={this.handleInputChange}/>\n//                                         <input type=\"submit\"/>\n//                             </form>\n//                         </div>\n//                 </div>\n//                 <h1>{this.data}</h1>\n//             </div>\n//         );\n//     }\n// }\n\n// export default Create;\n\n\n\n\n\n\n\n\n\n\n\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport UserServices from \"../services/UserServices\";\nimport * as jwt from 'jsonwebtoken';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n\n  const [userName, setUserName] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"userName\"\n            label=\"email address\"\n            name=\"User Name\"\n            autoComplete=\"userName\"\n            autoFocus\n            value={userName}\n            onChange={(e) => {\n              setUserName(e.target.value);\n            }}\n            onKeyPress={event => {\n              if (event.key === 'Enter') {\n            document.getElementById('save').click();\n              }\n          }}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            required\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n            onKeyPress={event => {\n              if (event.key === 'Enter') {\n            document.getElementById('save').click();\n              }\n          }}\n          />\n\n          <Button\n          id = \"save\"\n            className={classes.submit}\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => {\n\n              // console.log({userName}, {password})\n              UserServices.login(userName, password)\n                .then((data) => {\n                  console.log(data);\n                  window.location.href = \"/dashboardB\";\n\n                })\n                .catch((err) => {\n                  toast.error(err.response.data, {\n                    position: \"bottom-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                  });\n                });\n            }}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                Don't have an account? {\"Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      \n    </Container>\n  );\n}\n","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\auth\\signup.js",["665","666","667","668","669","670"],"import Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport UserServices from \"../services/UserServices\";\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\n\n\nimport { Elements } from '@stripe/react-stripe-js'\nimport { loadStripe } from \"@stripe/stripe-js\"\n\nimport PaymentForm from \"../components/PaymentForm\"\n\nlet ids, setId;\n\nexport {ids , setId};\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\n\n\nconst PUBLIC_KEY = \"pk_test_51IorIIJmpNZTNdrVSyS2DzXf6i1NSsowyVHM90rIurlyXK9SXfLKq8rMb4ppoc0zPhcnLff6kUKuOXB90Uy9FyG100kml35YcH\"\nconst stripeTestPromise = loadStripe(PUBLIC_KEY)\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const [name, setName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  [ids, setId] = React.useState(null)\n\n\n\n\n\n  const [token , setToken] = React.useState(false);\n\n  \n  \n  \n \n\n\n\n\n\n  function handleToken(token, addresses) {\n\n      toast.error(\"This Function will work properly on online server\", {\n      position: \"bottom-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n          });\n\n\n      setToken(true)\n\n    new Promise((resolve, reject) => {\n\n      console.log(token)\n\n    axios.post(\n      \"https://localhost:5000/mycheckout\",\n      { token }\n    ).then((res)=>{\n      resolve(res)\n    })\n    .catch((err)=>{\n      reject(err)\n    });\n  });\n\n\n\n    // this.post(\"http://localhost:5000/register\", { username, email, password , role})\n    //     .then((res) => {\n    //       resolve(res);\n    //     })  \n    //     .catch((err) => {\n    //       reject(err);\n    //     });\n\n    // console.log(handleToken)\n\n\n\n    // const { status } = response.data;\n    // console.log(\"Response:\", response.data);\n    // if (status === \"success\") {\n    //   toast(\"Success! Check email for details\", { type: \"success\" });\n    // } else {\n    //   toast(\"Something went wrong\", { type: \"error\" });\n    // }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"name\"\n                name=\"name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"Full Name\"\n                autoFocus\n                value={name}\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n                onKeyPress={event => {\n                  if (event.key === 'Enter') {\n                document.getElementById('save').click();\n                  }\n              }}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n                onKeyPress={event => {\n                  if (event.key === 'Enter') {\n                document.getElementById('save').click();\n                  }\n              }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                onChange={(e) => {\n                  setPassword(e.target.value);\n\n                  \n                }}\n                onKeyPress={event => {\n                  if (event.key === 'Enter') {\n                document.getElementById('save').click();\n                  }\n              }}\n              />\n            </Grid>\n          </Grid>\n                  <br></br>\n          <PasswordStrengthBar password={password} />\n<Grid>\n\n\n  <Elements stripe = {stripeTestPromise}>\n    \n              <PaymentForm/>\n  </Elements>\n  \n\n</Grid>\n          \n\n        {ids == null ? ( \n        \n        <Button\n            disabled\n          id = \"save\"\n            fullWidth\n            className={classes.submit}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => {\n              UserServices.register(name, email, password , \"user\")\n                .then((data) => {\n                  console.log(data);\n                  toast.success(data, {\n                    position: \"bottom-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                  });\n                  window.location.href = \"/login\";\n                })\n                .catch((err) => {\n                  toast.error(err.response.data, {\n                    position: \"bottom-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                  });\n                });\n            }}\n          >\n            Sign Up\n          </Button>) : ( \n          \n          <Button\n          \n          id = \"save\"\n            fullWidth\n            className={classes.submit}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => {\n              UserServices.register(name, email, password , \"user\" , 100, ids)\n                .then((data) => {\n                  console.log(data);\n                  toast.success(data, {\n                    position: \"bottom-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                  });\n                  window.location.href = \"/login\";\n                })\n                .catch((err) => {\n                  toast.error(err.response.data, {\n                    position: \"bottom-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                  });\n                });\n            }}\n          >\n            Sign Up\n          </Button>) }\n\n          {/* <Button\n          \n          id = \"save\"\n            fullWidth\n            className={classes.submit}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => {\n\n                UserServices.register(name, email, password , \"user\")\n                .then((data) => {\n                  console.log(data);\n                  toast.success(data, {\n                    position: \"bottom-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                  });\n                  window.location.href = \"/login\";\n                })\n                .catch((err) => {\n                  toast.error(err.response.data, {\n                    position: \"bottom-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                  });\n                });\n               \n              }}\n          >\n            Sign Up\n          </Button> */}\n        <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n  \n    </Container>\n  );\n}\n","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\postForm.js",[],"C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\sketch.js",["671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698"],"import './css/App.css';\nimport React, {useLayoutEffect,useEffect, useState} from 'react';\nimport rough from 'roughjs/bundled/rough.esm';\nimport Button from '@material-ui/core/Button';\nimport clsx from 'clsx';\nimport TabPanel from \"./sketchHelper/TabPanel\";\nimport PropTypes from 'prop-types';\nimport {useTheme} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport {Avatar,  Input, InputAdornment, InputLabel, Menu, MenuItem} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport {ButtonGroup as MaterialButtonGroup}  from \"@material-ui/core\";\n\nimport SwapHorizontalCircleIcon from '@material-ui/icons/SwapHorizontalCircle';\nimport BuildIcon from '@material-ui/icons/Build';\nimport LandscapeIcon from '@material-ui/icons/Landscape';\nimport SwapVerticalCircleIcon from '@material-ui/icons/SwapVerticalCircle';\nimport useStyles from \"./sketchHelper/useStyles\"; \nimport {handleMouseDown} from \"./sketchHelper/handleMouseDown\";\nimport {handleMouseUp} from \"./sketchHelper/handleMouseUp\";\nimport {handleMouseMove} from \"./sketchHelper/handleMouseMove\";\nimport {HandleSave} from \"./sketchHelper/handleSave\";\nimport {isWithinElement} from \"./sketchHelper/isWithinElement\";\nimport {toggleDrawer , toggleDrawer2} from \"./sketchHelper/toggleDrawer\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {scrapMe} from './scrapMe'\nimport { toast } from \"react-toastify\";\nimport UserServices from \"./services/UserServices\";\nimport { Spin } from 'antd';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport surface from './img/surface.jpg'; \nimport steel from './img/steel.jpg'; \nimport brick from './img/brick.jpg'; \nimport sand from './img/sand.jpg';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSave} from \"@fortawesome/free-solid-svg-icons\";\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {faVoteYea} from \"@fortawesome/free-solid-svg-icons\";\nimport {faIndustry} from \"@fortawesome/free-solid-svg-icons\";\nimport {faGripLinesVertical} from \"@fortawesome/free-solid-svg-icons\";\nimport {faSquare} from \"@fortawesome/free-solid-svg-icons\";\nimport {faCircleNotch} from \"@fortawesome/free-solid-svg-icons\";\nimport {faDoorOpen} from \"@fortawesome/free-solid-svg-icons\";\nimport {faCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {faEraser} from \"@fortawesome/free-solid-svg-icons\";\nimport {faFileDownload} from \"@fortawesome/free-solid-svg-icons\";\nimport {faLayerGroup} from \"@fortawesome/free-solid-svg-icons\";\nimport {faTrashAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport {faPalette} from  \"@fortawesome/free-solid-svg-icons\";\nimport {faGetPocket} from  \"@fortawesome/free-brands-svg-icons\";\nimport {faJoget} from  \"@fortawesome/free-brands-svg-icons\";\n\n\nimport ColorPicker from 'material-ui-color-picker'\n\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\n\nimport {sketchData} from './users/userDashboard'\nimport { custom } from 'joi';\n\n        let heightt ;\n        let widthh ;\n        let item = 0;\n        let canv = null;\n        let canvWidth , setCanvWidth = null;\n        let canvHeight , setCanvHeight = null;\n        let ElementWidth , setElementWidth = null;\n        let ElementLength , setElementLength = null;\n        let ElementStrokeWidth , setElementStrokeWidth = null;\n        let error , setError ;\n        let canvas = null;\n        let totalLayer = 0;\n        let  tool , setTool ;\n        let elements, setElements;\n        let myElements, setMyElements;\n        let myVar, setMyVar;\n        let estimateArr, setEstimateArr;\n        let selectedElement , setSelectedElement ;\n        let action , setAction ;\n        let state , setState;\n        let state2 , setState2;\n        let open , setOpen ;\n        let myArr , setMyArr ;\n        let price , setPrice ;\n        let title , setTitle ;\n        let image , setImage ;\n        let price2 , setPrice2 ;\n        let title2 , setTitle2 ;\n        let image2 , setImage2 ;\n        let price3 , setPrice3 ;\n        let title3 , setTitle3 ;\n        let image3 , setImage3 ;\n        let steelPrice , setSteelPrice ;\n        let steelTitle , setSteelTitle ;\n        let steelImage , setSteelImage ;\n        let steelPrice2 , setSteelPrice2 ;\n        let steelTitle2 , setSteelTitle2 ;\n        let steelImage2 , setSteelImage2 ;\n        let steelPrice3 , setSteelPrice3 ;\n        let steelTitle3 , setSteelTitle3 ;\n        let steelImage3 , setSteelImage3 ;\n        let loading , setLoading ;\n        let value, setValue;\n        let steelValue, setSteelValue;\n        let bricksValue, setBricksValue;\n        let sandValue, setSandValue;\n        let heightValue, setHeightValue;\n        let ccRatio, setCcRatio;\n        let ssRatio, setSsRatio;\n        let plasterValue, setPlasterValue;\n        let marla = 0;\n        let wall , setWall ;\n        let bgColor , setBGColor ;\n        let customCement , setCustomCement ;\n        let customSteel , setCustomSteel ;\n        let customBricks , setCustomBricks ;\n        let customSand , setCustomSand ;\n        let customHeight , setCustomHeight ;\n        let customCRatio , setCustomCRatio ;\n        let customSRatio , setCustomSRatio ;\n        let customPlaster , setCustomPlaster ;\n        let cArea , setCArea ;\n        let c2Area , setC2Area ;\n\n        export {totalLayer};\n        export {widthh};\n        export {heightt};\n        export {marla};\n        export {canvWidth , canvHeight};\n        export {ElementWidth , ElementLength ,ElementStrokeWidth,\n                setElementStrokeWidth, setElementLength  , setElementWidth};\n        export {error , setError };\n        export {canvas};\n        export {tool , setTool};\n        export {elements , setElements };\n        export {selectedElement , setSelectedElement};\n        export {action , setAction};\n        export {state , setState};\n        export {state2 , setState2};\n        export {open , setOpen};        \n        export {myArr , setMyArr};\n        export {price , setPrice};\n        export {title , setTitle};\n        export {image , setImage};\n        export {price2 , setPrice2};\n        export {title2 , setTitle2};\n        export {image2 , setImage2};\n        export {price3 , setPrice3};\n        export {title3 , setTitle3};\n        export {image3 , setImage3};\n        export {steelPrice , setSteelPrice};\n        export {steelTitle , setSteelTitle};\n        export {steelImage , setSteelImage};\n        export {steelPrice2 , setSteelPrice2};\n        export {steelTitle2 , setSteelTitle2};\n        export {steelImage2 , setSteelImage2};\n        export {steelPrice3 , setSteelPrice3};\n        export {steelTitle3 , setSteelTitle3};\n        export {steelImage3 , setSteelImage3};\n        export {loading , setLoading};\n        export {value, setValue}; \n        export {steelValue, setSteelValue};\n        export {bricksValue, setBricksValue};\n        export {sandValue, setSandValue};\n        export {heightValue, setHeightValue};\n        export {plasterValue, setPlasterValue};\n        export {wall , setWall}\n        export {bgColor , setBGColor}\n        export {customCement , setCustomCement}\n        export {customSteel , setCustomSteel };\n        export {customBricks , setCustomBricks };\n        export {customSand , setCustomSand };\n        export {customHeight , setCustomHeight };\n        export {customPlaster , setCustomPlaster };\n        export {myVar, setMyVar};\n\n\n\n        export let mouse = {x : 0, y : 0, events : \"mousemove,mousedown,mouseup\"};\n\n        function myColorPicker(){\n            return  <ColorPicker\n            name=\"color\"\n            defaultValue=\"#000\"\n            // value={this.state.color} - for controlled component\n            onChange={color => console.log(color)}\n          />\n        }\n            \n        export const list = (anchor) => (\n        \n            <div\n                className={clsx(useStyles.list, {\n                    [useStyles.fullList]: anchor === 'top' || anchor === 'bottom',\n                })}\n                role=\"presentation\"\n                // onClick={toggleDrawer(anchor, false)}\n                // onKeyDown={toggleDrawer(anchor, false)}\n            >\n\n                {loading ? (\n                               \n                               <List\n                               style={{display: 'flex' , flexDirection : 'row'}}\n                   \n                           >\n                   \n                               {[<Spin style={{width:'100%' , marginTop: '20%' , marginBottom:'20%'}} />\n                                   ].map((text, index) => (\n                                   <ListItem button key={text}>\n                                       <ListItemIcon></ListItemIcon>\n                                       <ListItemText primary={text} />\n                                   </ListItem>\n                               ))}\n                           </List>\n                    ) :  \n\n                    <List \n                    style={{display: 'flex' , flexDirection : 'column'}}\n        \n                >\n        \n                    {[\n                  \n\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Cement</FormLabel>\n                            <RadioGroup aria-label=\"cement\" name=\"cement\" value={value} \n                            onChange={(event) => setValue(event.target.value)}\n                            >\n                                <FormControlLabel value={price} control={<Radio />} label={title} /> <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>{price}</Typography>\n                                <FormControlLabel value={price2} control={<Radio />} label={title2} />  <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>{price2}</Typography>\n                                 <FormControlLabel value={price3} control={<Radio />} label={title3} /> <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>{price3}</Typography>\n                                <FormControlLabel value={customCement} control={<Radio />} label=\"Your Desired Price per bag\" /> <TextField\n                                                                                                                            autoComplete=\"price\"\n                                                                                                                            name=\"Price\"\n                                                                                                                            variant=\"outlined\"\n                                                                                                                            required\n                                                                                                                            fullWidth\n                                                                                                                            id=\"priceCement\"\n                                                                                                                            label=\"Enter Price\"\n                                                                                                                            autoFocus\n                                                                                                                            value={customCement}\n                                                                                                                            onChange={(e) => {\n                                                                                                                                setCustomCement(e.target.value);\n                                                                                                                             }}\n                                                                                                                            />\n                            </RadioGroup>\n                         \n                        </FormControl>\n                        ,\n<FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Steel</FormLabel>\n                            <RadioGroup aria-label=\"steel\" name=\"steel\" value={steelValue} \n                            onChange={(event) => setSteelValue(event.target.value)}\n                            >\n                                <FormControlLabel value=\"136.9\" control={<Radio />} label={steelTitle} /> <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>{steelPrice}</Typography>\n                                <FormControlLabel value=\"137\" control={<Radio />} label={steelTitle2} />  <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>{steelPrice2}</Typography>\n                                 <FormControlLabel value=\"137.1\" control={<Radio />} label={steelTitle3} /> <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>{steelPrice3}</Typography>\n                                <FormControlLabel value={customSteel} control={<Radio />} label=\"Your Desired Price per Kg\" /> <TextField\n                                                                                                                            autoComplete=\"price\"\n                                                                                                                            name=\"Price\"\n                                                                                                                            variant=\"outlined\"\n                                                                                                                            required\n                                                                                                                            fullWidth\n                                                                                                                            id=\"priceSteel\"\n                                                                                                                            label=\"Enter Price\"\n                                                                                                                            autoFocus\n                                                                                                                            value={customSteel}\n                                                                                                                            onChange={(e) => {\n                                                                                                                                setCustomSteel(e.target.value);\n                                                                                                                             }}\n                                                                                                                            />\n                            </RadioGroup>\n                         \n                        </FormControl>\n                        ,\n                        <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Bricks</FormLabel>\n                                    <RadioGroup aria-label=\"bricks\" name=\"bricks\" value={bricksValue} \n                                        onChange={(event) => setBricksValue(event.target.value)}\n                                        >\n                                        <FormControlLabel value=\"13.2\" control={<Radio />} label=\"level 1 Bricks (Awwal A+)\" /> <Typography\n                                                                                                                                style = {{color: 'black',\n                                                                                                                                marginLeft: '25%'}}>Per 1000 ... PKR 13,200</Typography>\n                                            <FormControlLabel value=\"12.8\" control={<Radio />} label=\"level 1- Bricks (Awwal A)\" />  <Typography\n                                                                                                                                style = {{color: 'black',\n                                                                                                                                marginLeft: '25%'}}>Per 1000 ... PKR 12,800</Typography>\n                                             <FormControlLabel value=\"9.2\" control={<Radio />} label=\"level 2 Bricks (Doam)\" /> <Typography\n                                                                                                                                style = {{color: 'black',\n                                                                                                                                marginLeft: '25%'}}>Per 1000 ... PKR 9,200</Typography>\n                                             <FormControlLabel value=\"8.8\" control={<Radio />} label=\"level 3 Bricks (Khangar)\" /> <Typography\n                                                                                                                                style = {{color: 'black',\n                                                                                                                                marginLeft: '25%'}}>Per 1000 ... PKR 8,800</Typography>\n\n                                            <FormControlLabel value={customBricks} control={<Radio />} label=\"Your Desired Price per 1 piece\" /> <TextField\n                                                                                                                            autoComplete=\"price\"\n                                                                                                                            name=\"Price\"\n                                                                                                                            variant=\"outlined\"\n                                                                                                                            required\n                                                                                                                            fullWidth\n                                                                                                                            id=\"priceBricks\"\n                                                                                                                            label=\"Enter Price\"\n                                                                                                                            autoFocus\n                                                                                                                            value={customBricks}\n                                                                                                                            onChange={(e) => {\n                                                                                                                                setCustomBricks(e.target.value);\n                                                                                                                             }}\n                                                                                                                            />\n                                                    \n                                        </RadioGroup>\n                                                 \n                                     </FormControl>\n                        ,\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Sand (Construction)</FormLabel>\n                            <RadioGroup aria-label=\"gender\" name=\"steel\" value={sandValue} \n                            onChange={(event) => setSandValue(event.target.value)}\n                            >\n                                <FormControlLabel value=\"42.14\" control={<Radio />} label=\"Chanab Sand A+\" /> <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>Per Trolly 700 CFT ... PKR 29,500</Typography>\n                                <FormControlLabel value=\"40\" control={<Radio />} label=\"Chanab Sand B\" />  <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>Per Trolly 700 CFT ... PKR 28,000</Typography>\n                                 <FormControlLabel value=\"34.28\" control={<Radio />} label=\"Chanab Sand C\" /> <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>Per Trolly 700 CFT ... PKR 24,000</Typography>\n                               <FormControlLabel value=\"17.14\" control={<Radio />} label=\"Ravi Sand\" /> <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>Per Trolly 700 CFT ... PKR 12,000</Typography>\n                               <FormControlLabel value={customSand} control={<Radio />} label=\"Your Desired Price per Trolly 700 CFT\" /> <TextField\n                                                                                                                            autoComplete=\"price\"\n                                                                                                                            name=\"Price\"\n                                                                                                                            variant=\"outlined\"\n                                                                                                                            required\n                                                                                                                            fullWidth\n                                                                                                                            id=\"priceSand\"\n                                                                                                                            label=\"Enter Price\"\n                                                                                                                            autoFocus\n                                                                                                                            value={customSand}\n                                                                                                                            onChange={(e) => {\n                                                                                                                                setCustomSand(e.target.value);\n                                                                                                                             }}\n                                                                                                                            />\n                            </RadioGroup>\n                         \n                        </FormControl>\n                        ,\n                        <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Height of Building</FormLabel>\n                        <RadioGroup aria-label=\"gender\" name=\"heightValue\" value={heightValue} \n                        onChange={(event) => setHeightValue(event.target.value)}\n                        >\n                            <FormControlLabel value=\"12\" control={<Radio />} label=\"12 ft\" /> \n                            <FormControlLabel value=\"11\" control={<Radio />} label=\"11 ft\" />  \n                             <FormControlLabel value=\"10\" control={<Radio />} label=\"10 ft\" />\n                           <FormControlLabel value={customHeight} control={<Radio />} label=\"Your Desired Height\" /> <TextField\n                                                                                                                        autoComplete=\"price\"\n                                                                                                                        name=\"Price\"\n                                                                                                                        variant=\"outlined\"\n                                                                                                                        required\n                                                                                                                        fullWidth\n                                                                                                                        id=\"priceSand\"\n                                                                                                                        label=\"Enter Price\"\n                                                                                                                        autoFocus\n                                                                                                                        value={customHeight}\n                                                                                                                        onChange={(e) => {\n                                                                                                                            setCustomHeight(e.target.value);\n                                                                                                                         }}\n                                                                                                                        />\n                        </RadioGroup>\n                     \n                    </FormControl>,\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Enter ratio of cement <span style={{color : \"blue\"}}>\n                                                                                (If you want 1:4 select 1)</span></FormLabel>\n                        <RadioGroup aria-label=\"gender\" name=\"ccRatio\" value={ccRatio} \n                        onChange={(event) => setCcRatio(event.target.value)}\n                        >\n                            <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" /> \n                            \n                           <FormControlLabel value={customCRatio} control={<Radio />} label=\"Your Desired cement ratio\" /> <TextField\n                                                                                                                        autoComplete=\"price\"\n                                                                                                                        name=\"Price\"\n                                                                                                                        variant=\"outlined\"\n                                                                                                                        required\n                                                                                                                        fullWidth\n                                                                                                                        id=\"cRatio\"\n                                                                                                                        label=\"Enter Cement Ratio\"\n                                                                                                                        autoFocus\n                                                                                                                        value={customCRatio}\n                                                                                                                        onChange={(e) => {\n                                                                                                                            setCustomCRatio(e.target.value);\n                                                                                                                         }}\n                                                                                                                        />\n                        </RadioGroup>\n                     \n                    </FormControl>,\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Enter ratio of sand <span style={{color : \"blue\"}}>\n                                                                                (If you want 1:4 select 4)</span></FormLabel>\n                        <RadioGroup aria-label=\"gender\" name=\"ssRatio\" value={ssRatio} \n                        onChange={(event) => setSsRatio(event.target.value)}\n                        >\n                            <FormControlLabel value=\"4\" control={<Radio />} label=\"4\" /> \n                            <FormControlLabel value=\"6\" control={<Radio />} label=\"6\" />\n                           <FormControlLabel value={customSRatio} control={<Radio />} label=\"Your Desired sand ratio\" /> <TextField\n                                                                                                                        autoComplete=\"price\"\n                                                                                                                        name=\"Price\"\n                                                                                                                        variant=\"outlined\"\n                                                                                                                        required\n                                                                                                                        fullWidth\n                                                                                                                        id=\"cRatio\"\n                                                                                                                        label=\"Enter Sand Ratio\"\n                                                                                                                        autoFocus\n                                                                                                                        value={customSRatio}\n                                                                                                                        onChange={(e) => {\n                                                                                                                            setCustomSRatio(e.target.value);\n                                                                                                                         }}\n                                                                                                                        />\n                        </RadioGroup>\n                     \n                    </FormControl>,\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Plastering Depth in inches</FormLabel>\n                        <RadioGroup aria-label=\"gender\" name=\"plasterValue\" value={plasterValue} \n                        onChange={(event) => setPlasterValue(event.target.value)}\n                        >\n                            <FormControlLabel value=\"0.5\" control={<Radio />} label=\"0.5 inches\" /> \n                            <FormControlLabel value=\"1\" control={<Radio />} label=\"1 inches\" />  \n                            \n                           <FormControlLabel value={customPlaster} control={<Radio />} label=\"Your Depth for Plastering\" /> <TextField\n                                                                                                                        autoComplete=\"price\"\n                                                                                                                        name=\"Depth of Plsater\"\n                                                                                                                        variant=\"outlined\"\n                                                                                                                        required\n                                                                                                                        fullWidth\n                                                                                                                        id=\"plaster\"\n                                                                                                                        label=\"Enter Depth of Plsater\"\n                                                                                                                        autoFocus\n                                                                                                                        value={customPlaster}\n                                                                                                                        onChange={(e) => {\n                                                                                                                            setCustomPlaster(e.target.value);\n                                                                                                                         }}\n                                                                                                                        />\n                        </RadioGroup>\n                     \n                    </FormControl>,\n                        <Button onClick={()=>{\n                            // setState(\"bottom\" , false)\n\n                            var price = value;\n                            console.log(parseFloat(price.replace( /\\D/g, \"\")));\n                            \n                            console.log(steelValue)\n                            console.log(bricksValue)\n                            console.log(sandValue)\n                            console.log(heightValue)\n\n                            let estimatess1 = 0;\n                            let estimatess2 = 0;\n                            let estimatess1total = 0;\n                            let estimatess2total = 0;\n\n                            let strokeWidth = 0;\n\n                            for(var k = 0; k < myVar.length; k++) {\n\n                                var Data = myVar[k];\n    \n                                for(var m = 0; m < Data.length; m++) {\n    \n                                    estimatess1total = estimatess1total + (Math.abs((Data[m].x2-Data[m].x1))  / 15.36);\n                                    estimatess2total = estimatess2total + (Math.abs((Data[m].y2-Data[m].y1))  / 15.36);\n    \n                                }\n    \n                            }\n                            \n\n                        for(var i = 0; i < myArr.length ; i++)\n                        {\n                            // console.log( myArr[i].type);\n                            // console.log( myArr[i].x1);\n                            // console.log( myArr[i].x2);\n                            // console.log( myArr[i].y2);\n                            // console.log( myArr[i].y1);\n                            // console.log( (myArr[i].x2-myArr[i].x1)  / 15.36);\n                            // console.log( (myArr[i].y2-myArr[i].y1)  / 15.36);\n     \n                            estimatess1 = estimatess1 + (Math.abs(myArr[i].x2-myArr[i].x1)  / 15.36);\n                            estimatess2 = estimatess2 + (Math.abs(myArr[i].y2-myArr[i].y1) / 15.36);\n                            strokeWidth = myArr[i].roughElement.options.strokeWidth\n                           \n                        }   \n\n                            var brickArea = Math.abs(heightValue) * Math.abs((estimatess1  + estimatess2) * 144 ) * strokeWidth\n\n                            var nuOfBrick = brickArea / 166.25\n\n                            var mortar = nuOfBrick * 0.10\n                            \n                            nuOfBrick = nuOfBrick - mortar\n                            \n                            var waste = nuOfBrick * 0.04\n\n                            var getTotalBrick = nuOfBrick + waste;\n                        \n                            var totalBricks = Math.abs(heightValue) * Math.abs((((estimatess1 *2 ) + (estimatess2*2))*144)/32)\n                            // var totalBricks = Math.abs((estimatess1 * 2 )+( estimatess2*2)) \n   \n\n                            console.log(\"arr length   :   \" + myArr.length)\n                            console.log(\"Height  :   \" + heightValue)\n                            console.log(\"ElementStrokeWidth   :   \" + strokeWidth)\n                            console.log(\"estimate1   :    \" + estimatess1 * 2 )\n                            console.log(\"estimate2   :    \" + estimatess2 * 2 )\n                            console.log(\"Total Bricks  :  \" + getTotalBrick )\n                            console.log(\"mortar of Bricks  :    \" + mortar * 0.0254 * 0.012 )\n\n                            document.getElementById(\"bricksCount\").value = getTotalBrick ;\n\n                            var Hplaster = Math.abs(heightValue * 0.3048)\n\n                            var Wplaster = Math.abs(estimatess1 * 0.3048 + estimatess2  * 0.3048)\n\n                            var Dplaster = Math.abs(strokeWidth * 0.0254)\n\n                            var currentPlasterValue = plasterValue * 0.0254\n\n                            var plasterVolume =   Hplaster *  Wplaster * currentPlasterValue\n\n                            var plasterDryVolume = plasterVolume * 1.35\n\n                            var cRatio = Math.abs(ccRatio) \n                            var sRatio = Math.abs(ssRatio)\n                            \n                            \n                            // var cRatio = Math.abs(1) \n                            // var sRatio = Math.abs(6)\n\n                            var tRatio = Math.abs(cRatio + sRatio)\n\n                            var cCum = ( cRatio / tRatio ) * plasterDryVolume\n\n                            var cKg = cCum * 1440\n\n                            var cBags = cKg / 50\n\n                            var sCum = (sRatio / tRatio) * plasterDryVolume\n                            \n                            var sCFT = sCum * 35.31\n\n                            console.log(\"H  :   \" +  Hplaster)\n                            console.log(\"W  :   \" +  Wplaster)\n                            console.log(\"D  :   \" + currentPlasterValue)\n                            \n                            console.log(\"plasterVolume  :   \" + plasterVolume )\n                            console.log(\"plasterDryVolume  :   \" + plasterDryVolume)\n                            console.log(\"cRatio   :   \" + cRatio)\n                            console.log(\"sRatio   :    \" + sRatio )\n                            console.log(\"tRatio   :    \" + tRatio )\n                            console.log(\"cCum  :  \" + cCum)\n                            console.log(\"cKg  :   \" + cKg )\n                            console.log(\"cBags  :   \" + cBags)\n                            console.log(\"sCum   :   \" + sCum)\n                            console.log(\"sCFT   :    \" + sCFT )\n                            console.log(\"mortar of Plaster  :    \" + (Hplaster * Wplaster * currentPlasterValue) )\n\n                            document.getElementById(\"cementCount\").value = cBags\n                            document.getElementById(\"sandCount\").value = sCFT\n                            document.getElementById(\"cementKg\").value = cKg\n\n                            var brickAreaTotal = Math.abs(heightValue) * Math.abs((estimatess1total  + estimatess2total) * 144 ) * strokeWidth\n\n                            var nuOfBrickTotal = brickAreaTotal / 166.25\n\n                            var mortarTotal = nuOfBrickTotal * 0.10\n                            \n                            nuOfBrickTotal = nuOfBrickTotal - mortarTotal\n                            \n                            var wasteTotal = nuOfBrickTotal * 0.04\n\n                            var getTotalBrickTotal = nuOfBrickTotal + wasteTotal;\n                        \n                            var totalBricksTotal = Math.abs(heightValue) * Math.abs((((estimatess1total *2 ) + (estimatess2total*2))*144)/32)\n                            // var totalBricks = Math.abs((estimatess1 * 2 )+( estimatess2*2)) \n                            \n                            console.log(\"arr length   :   \" + myArr.length)\n                            console.log(\"Height  :   \" + heightValue)\n                            console.log(\"ElementStrokeWidth   :   \" + strokeWidth)\n                            console.log(\"estimate1   :    \" + estimatess1total * 2 )\n                            console.log(\"estimate2   :    \" + estimatess2total * 2 )\n                            console.log(\"Total Bricks  :  \" + getTotalBrick )\n                            console.log(\"mortar of Bricks  :    \" + mortar * 0.0254 * 0.012 )\n\n                            document.getElementById(\"bricksCountTotal\").value = getTotalBrickTotal ;\n\n                            var HplasterTotal = Math.abs(heightValue * 0.3048)\n\n                            var WplasterTotal = Math.abs(estimatess1total * 0.3048 + estimatess2total  * 0.3048)\n\n                            var DplasterTotal = Math.abs(strokeWidth * 0.0254)\n\n                            var totalPlasterValue = plasterValue * 0.0254\n\n                            var plasterVolumeTotal =   HplasterTotal *  WplasterTotal * totalPlasterValue\n\n                            var plasterDryVolumeTotal = plasterVolumeTotal * 1.35\n\n                            var cRatioTotal = Math.abs(ccRatio) \n                            var sRatioTotal = Math.abs(ssRatio)\n\n                            var tRatioTotal = Math.abs(cRatioTotal + sRatioTotal)\n\n                            var cCumTotal = ( cRatioTotal / tRatioTotal ) * plasterDryVolumeTotal\n\n                            var cKgTotal = cCumTotal * 1440\n\n                            var cBagsTotal = cKgTotal / 50\n\n                            var sCumTotal = (sRatioTotal / tRatioTotal) * plasterDryVolumeTotal\n                            \n                            var sCFTTotal = sCumTotal * 35.31\n\n                            console.log(\"H  :   \" +  Hplaster)\n                            console.log(\"W  :   \" +  Wplaster)\n                            console.log(\"D  :   \" + totalPlasterValue)\n                            \n                            console.log(\"plasterVolumeTotal  :   \" + plasterVolumeTotal )\n                            console.log(\"plasterDryVolumeTotal  :   \" + plasterDryVolumeTotal)\n                            console.log(\"cRatioTotal   :   \" + cRatioTotal)\n                            console.log(\"sRatioTotal   :    \" + sRatioTotal )\n                            console.log(\"tRatioTotal   :    \" + tRatioTotal )\n                            console.log(\"cCumTotal  :  \" + cCumTotal)\n                            console.log(\"cKgTotal  :   \" + cKgTotal )\n                            console.log(\"cBagsTotal  :   \" + cBagsTotal)\n                            console.log(\"sCumTotal   :   \" + sCumTotal)\n                            console.log(\"sCFTTotal   :    \" + sCFTTotal )\n                            console.log(\"mortar of Plaster Total :    \" + (HplasterTotal * WplasterTotal * totalPlasterValue) )\n\n                            document.getElementById(\"cementCountTotal\").value = cBagsTotal\n                            document.getElementById(\"sandCountTotal\").value = sCFTTotal\n                            document.getElementById(\"cementKgTotal\").value = cKgTotal\n\n                            var myArea = document.getElementById(\"cArea\").value;\n                            console.log(\"Area 1 : : : \" + myArea)\n                            console.log(\"Area 2 : : : \" +c2Area)\n\n                            var cBagCost =  (cBags * parseFloat(price.replace( /\\D/g, \"\")))\n                            var sCFTCost =  (sCFT * sandValue)\n                            var brickCost = (getTotalBrick * bricksValue)\n\n                            var cBagCostTotal = (cBagsTotal * parseFloat(price.replace( /\\D/g, \"\")))\n                            var sCFTCostTotal =  (sCFTTotal * sandValue)\n                            var brickCostTotal = (getTotalBrickTotal * bricksValue)\n\n                            console.log(\"cBagCostTotal  \" +cBagCostTotal )\n                            console.log(\"sCFTCostTotal  \" +sCFTCostTotal )\n                            console.log(\"brickCostTotal \" +brickCostTotal )\n\n                            document.getElementById(\"cAreaMat\").value = (cArea * 150) + cBagCost + sCFTCost + brickCost\n                            document.getElementById(\"c2AreaMat\").value = (c2Area * 150) + cBagCostTotal + sCFTCostTotal + brickCostTotal\n\n                        }}>Apply</Button>\n\n                ].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>{index  === 0 ? <Avatar alt=\"Remy Sharp\" variant=\"rounded\" src={surface}/> :\n                                            index === 1 ? <Avatar alt=\"Remy Sharp\" variant=\"rounded\" src={steel}/> :\n                                            index === 2 ? <Avatar alt=\"Remy Sharp\" variant=\"rounded\" src={brick}/> :\n                                            <Avatar alt=\"Remy Sharp\" variant=\"rounded\" src={sand}/>  }</ListItemIcon>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    ))}\n                </List>\n\n\n\n                            \n                }\n        \n        \n            </div>\n        );\n\n        export const list2 = (anchor) => (\n            <div\n              className={clsx(useStyles.list, {\n                [useStyles.fullList]: anchor === 'top' || anchor === 'bottom',\n              })}\n              role=\"presentation\"\n              onClick={toggleDrawer2(anchor, false)}\n              onKeyDown={toggleDrawer2(anchor, false)}\n            >\n              <List>\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                  <ListItem button key={text}>\n                    <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                    <ListItemText primary={text} />\n                  </ListItem>\n                ))}\n              </List>\n              <Divider />\n              <List>\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                  <ListItem button key={text}>\n                    <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                    <ListItemText primary={text} />\n                  </ListItem>\n                ))}\n              </List>\n            </div>\n          );\n        \n        export const distance = (a,b) => Math.sqrt(Math.pow(a.x - b.x , 2) + Math.pow(a.y - b.y, 2));\n        \n        export const getElementAtPosition = (x,y, elements) => {\n            return elements.find(element => isWithinElement(x,y,element));\n        }\n\n\n        function getWindowDimensions() {\n            const width = window.innerWidth;\n            return width\n            \n          }\n        \n        export const handleDrawerOpen = () => {\n            setOpen(true);\n        };\n        \n        export const handleDrawerClose = () => {\n            setOpen(false);\n        }; \n        \n        export const handleError = () => {\n            setError(false);\n        }; \n        \n        \n            // const isWithinCanvas = (x,y, element) => {\n            //     const {x1, y1, x2, y2} = element;\n            //\n            //         const minX = Math.min(x1, x2);\n            //         const maxX = Math.max(x1, x2);\n            //         const minY = Math.min(y1, y2);\n            //         const maxy = Math.max(y1, y2);\n            //         return x >= minX && x <= maxX && y <= maxy && y >= minY;\n            //\n            // }\n\n\n            // export function putCanvs() {\n\n\n            //     // for (let item = 0; item < 20; item++) {\n            //     //     if (count !== 0 && count%5 === 0) {\n            //     //         document.write(\" ||| \");\n            //     //     }\n\n\n            //     // canv.setAttribute('width', window.innerWidth);\n            //     if (widthh !== null) {\n\n            //         item = item + 1;\n            //         totalLayer = totalLayer + 1;\n\n\n            //         const texta = document.createElement(\"input\");\n\n            //         texta.setAttribute('id', 'itemNo'\n            //         + item\n            //         );\n\n\n            //         texta.textContent = '111';\n\n            //         canv = document.createElement(\"canvas\");\n\n            //         canv.width = canvas.width;\n            //         // canv.setAttribute('height', window.innerHeight * heightt/100);\n            //         canv.height = canvas.height;\n            //         canv.setAttribute('id', 'canv'\n            //         + item\n            //         );\n\n\n\n            //         alert(totalLayer);\n            //         canv.style.background = \"#c0c6c5\";\n\n            //         canv.style.border = \"5px solid darkslategrey\";\n\n            //         canv.style.margin = \"14.4%\";\n\n            //         document.body.appendChild(canv);\n\n            //         canv.addEventListener('mousedown' , handleMouseDown , true);\n            //         canv.addEventListener('mouseup' , handleMouseUp , true);\n            //         canv.addEventListener('mousemove' , handleMouseMove , true);\n\n            //         canv.onmousedown = handleMouseDown;\n            //         canv.onmouseup = handleMouseUp;\n            //         canv.onmousemove = handleMouseMove;\n            //         const C = document.getElementById(canv.getAttribute('id'));\n            //         if (C.getContext) {\n            //             if (C.getContext) {\n            //                 makePlot(C);\n            //             }\n            //         }\n            //     }\n            //     else {\n            //         alert(\"Please Enter Width and Length First\");\n            //         setOpen(true);\n            //     }\n            // }\n\n            // function makePlot(elem) {\n\n            //     const ctx = elem.getContext(\"2d\");\n            //     ctx.fillStyle   = '#00f';\n            //     ctx.strokeStyle = 'black';\n            //     ctx.lineWidth   = 5;\n            //     ctx.borderBlock = 1;\n\n            // }\n            export function saveLayer(){\n                \n\n                console.log(elements)\n\n                setMyElements(elements)\n\n                // myVar[totalLayer] = elements\n\n                myVar[item] = elements\n\n                console.log(myElements)\n\n            }\n\n            function addLayer(){\n                \n\n                console.log(elements)\n\n                setMyElements(elements)\n\n                myVar[totalLayer] = elements\n\n                console.log(myElements)\n\n                setElements([])\n\n                item = item + 1;\n                totalLayer = totalLayer + 1;\n\n                // alert(\"Your Current Layer: \" + totalLayer);\n                // alert(\"Your Current Element: \" + item);\n\n            }\n\n            function App() \n            \n            {\n\n                [tool, setTool] = useState(\"selection\");\n                [elements, setElements] = useState([]);\n                [action , setAction] = useState('none');\n                [canvWidth, setCanvWidth] = useState(null);\n                [canvHeight, setCanvHeight] = useState(null);\n                [myArr , setMyArr] = useState([]);\n                [ElementWidth , setElementWidth] = useState(null);\n                [ElementLength , setElementLength] = useState(null);\n                [ElementStrokeWidth , setElementStrokeWidth] = useState(null);\n                [selectedElement , setSelectedElement] = useState(null);\n                [error , setError] = useState(false);\n                [price , setPrice] = useState(null);\n                [title , setTitle] = useState(null);\n                [image , setImage] = useState(null);\n                [price2 , setPrice2] = useState(null);\n                [title2 , setTitle2] = useState(null);\n                [image2 , setImage2] = useState(null);\n                [price3 , setPrice3] = useState(null);\n                [title3 , setTitle3] = useState(null);\n                [image3 , setImage3] = useState(null);\n                [steelPrice , setSteelPrice] = useState(null);\n                [steelTitle , setSteelTitle] = useState(null);\n                [steelImage , setSteelImage] = useState(null);\n                [steelPrice2 , setSteelPrice2] = useState(null);\n                [steelTitle2 , setSteelTitle2] = useState(null);\n                [steelImage2 , setSteelImage2] = useState(null);\n                [steelPrice3 , setSteelPrice3] = useState(null);\n                [steelTitle3 , setSteelTitle3] = useState(null);\n                [steelImage3 , setSteelImage3] = useState(null);\n                [loading , setLoading] = useState(false);\n                [value, setValue] = React.useState(null);\n                [steelValue, setSteelValue] = React.useState(null);\n                [bricksValue, setBricksValue] = React.useState(null);\n                [sandValue, setSandValue] = React.useState(null);\n                [heightValue, setHeightValue] = React.useState(null);\n                [ccRatio, setCcRatio] = React.useState(null);\n                [ssRatio, setSsRatio] = React.useState(null);\n                [plasterValue, setPlasterValue] = React.useState(null);\n                [myElements , setMyElements] = useState([]);\n                [myVar , setMyVar] = useState([]);\n                [estimateArr , setEstimateArr] = React.useState([]);\n                [wall , setWall] = React.useState(null);\n                [bgColor , setBGColor] = React.useState(null);\n                [customCement , setCustomCement] = React.useState(null);\n                [customSteel , setCustomSteel ] = React.useState(null);\n                [customBricks , setCustomBricks ] = React.useState(null);\n                [customSand , setCustomSand ] = React.useState(null);\n                [customHeight , setCustomHeight ] = React.useState(null);\n                [customCRatio , setCustomCRatio ] = React.useState(null);\n                [customSRatio , setCustomSRatio ] = React.useState(null);\n                [customPlaster , setCustomPlaster ] = React.useState(null);\n\n                let [name , setName] = useState(undefined);\n                const [id, setId] = useState(null);\n                [cArea , setCArea] = useState(null);\n                [c2Area , setC2Area] = useState(null);\n\n                const [devWidth, setDevWidth] = useState(null);\n                const [devHeight, setDevHeight] = useState(null);\n\n                const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n                const [isMobile, setMobile] = useState(0);\n\n                const [overflow, setOverflow] = useState(\"hidden\")\n\n                // const [widthh , setWidthh] = useState(750);\n                \n                useEffect(() => {\n\n                    setWindowDimensions(getWindowDimensions());\n\n                    if(windowDimensions < 1440 && windowDimensions >= 1200 ){ \n                        setMobile(1);\n                        console.log(isMobile)\n                    }\n                    else if(windowDimensions < 1200 && windowDimensions >= 700){ \n                        setMobile(2);\n                        console.log(isMobile)\n                        \n                    }\n                    else if(windowDimensions < 700){\n                        setMobile(3);\n                        console.log(isMobile)\n\n                    }\n                    \n                    if(canvWidth > windowDimensions){\n                            setOverflow(\"visible\")\n                    }\n                \n                })\n\n                const getData = () => {\n                    \n                    if(sketchData)\n                    {\n                        setId( sketchData.id )\n                        setName( sketchData.name )\n                        alert(sketchData.width)\n                        widthh = sketchData.width \n                        // setWidthh( sketchData.width ) \n                        heightt = sketchData.height\n                        totalLayer = sketchData.layer\n                        setMyVar( JSON.parse(sketchData.sketch))\n\n                        canvas = document.getElementById(\"canvas\");\n                        setCanvWidth( 1536 * widthh/100 );\n                        setCanvHeight(1536 * heightt/100);\n                        canvas.width = canvWidth ;\n                        canvas.height = canvHeight;\n\n                        marla = (widthh * heightt)/270;\n\n                        document.getElementById(\"marla\").value = marla ;\n                        document.getElementById(\"height\").value = heightt;\n                        document.getElementById(\"width\").value = widthh;\n    \n                    }\n    \n                    else{\n\n                        alert(\"No Data Found\")\n    \n                    }\n                  }\n\n                \n\n\n                // let canv = null;\n    \n                // }\n\n                useLayoutEffect(() => {\n\n                    if(widthh !== null)\n                    {\n\n                        canvas = document.getElementById('canvas');\n                        const context = canvas.getContext('2d');\n                        context.clearRect(0, 0, canvas.width, canvas.height);\n\n                        const roughCanvas = rough.canvas(canvas);\n                        elements.forEach(({roughElement}) => roughCanvas.draw(roughElement));\n\n\n                        // const roughCanvas222 = rough.canvas(canvas2);\n                        // elements.forEach(({roughElement}) => roughCanvas222.draw(roughElement));\n                        //\n                        //      canv = document.getElementById('canv' + 1);\n                        //     const ctx = canv.getContext('2d');\n                        //     ctx.clearRect(0,0,canvas.width, canvas.height);\n                        //\n                        //     const roughCanvas2 = rough.canvas(canv);\n                        //     elements.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n\n\n                        // for(let i = 1 ; i <= item ; i ++) {\n                        //     const cnv = document.getElementById('canv' + item);\n                        //     const ctx = cnv.getContext('2d');\n\n                        //     ctx.clearRect(0,0,cnv.width, cnv.height);\n                        //     const roughCanvas2 = rough.canvas(cnv);\n                        //     // let element+item;\n                        //     // let\n                        //     elements.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n                        // }\n\n                    }\n                            \n                    else {\n                        alert(\"Please Enter Width and Length First\");\n                        setOpen(true);\n                    }\n                }\n                    // ,\n                    // [\n                    //     elements , canvas , item\n                    // ]\n    \n                    );\n\n                    function handleWrite(){\n\n                        const context = canvas.getContext('2d');\n\n                        const wrt = document.getElementById(\"write\").value;\n                        context.fillStyle = \"white\";\n                        context.font = \"bold 16px Arial\";\n                        context.fillText(wrt , (canvas.width / 2) - 17, (canvas.height / 2) + 8);\n\n                    }\n\n                    const classes = useStyles();\n                    const theme = useTheme();\n                    [open, setOpen] = React.useState(false);\n                    \n                    [state, setState] = React.useState({\n                        bottom: false,\n           \n                    });\n\n                    [state2, setState2] = React.useState({\n                        // top: false,\n                        left: false,\n                        // bottom: false,\n                        // right: false,\n                      });\n\n                    TabPanel.propTypes = {\n                        children: PropTypes.node,\n                        index: PropTypes.any.isRequired,\n                        value: PropTypes.any.isRequired,\n                    };\n\n                    const handleSubmit = () => {\n                        heightt = document.getElementById(\"height\").value;\n                        widthh = document.getElementById(\"width\").value;\n                        alert(\" Length  \" + heightt + \"   width  \" + widthh + \"   was submitted\");\n                        canvas = document.getElementById(\"canvas\");\n                        setCanvWidth( 1536 * widthh/100 );\n                        setCanvHeight(1536 * heightt/100);\n                        canvas.width = canvWidth ;\n                        canvas.height = canvHeight;\n\n                        marla = (widthh * heightt)/270;\n\n                        document.getElementById(\"marla\").value = marla ;\n\n                    }\n\n\n\n                    const handleCalculate = () => {\n\n                        const totalArea = widthh * heightt;\n                        const enteredArea = document.getElementById(\"area\").value ;\n                        let myElement = 0;\n\n                        \n                        const totalCost = totalArea * 150;\n                        const cost = enteredArea * 150;\n                        let myJs = JSON.stringify(elements);\n                        setMyArr(JSON.parse(myJs))\n                        let estimatess1 = 0;\n                        let estimatess2 = 0;\n\n\n\n                        for(var i = 0; i < myArr.length ; i++)\n                        {\n                            // console.log( myArr[i].type);\n                            // console.log( myArr[i].x1);\n                            // console.log( myArr[i].x2);\n                            // console.log( myArr[i].y2);\n                            // console.log( myArr[i].y1);\n                            // console.log( (myArr[i].x2-myArr[i].x1)  / 15.36);\n                            // console.log( (myArr[i].y2-myArr[i].y1)  / 15.36);\n                            \n                            estimatess1 = estimatess1 + (Math.abs((myArr[i].x2-myArr[i].x1))  / 15.36);\n                            estimatess2 = estimatess2 + (Math.abs((myArr[i].y2-myArr[i].y1))  / 15.36);\n                           \n                            // myElement ++ ;\n\n                        }\n\n                        if(marla < ((estimatess1*estimatess2) / 270))\n                        {\n                            console.log(\"Total Area Created Feet  \" + (widthh*heightt));\n                            console.log(\"Total Area Created Marla \" + marla);\n                        }\n                        else{\n                        console.log(\"Total Area Created Feet  \" + (estimatess1*estimatess2));\n\n                        \n                        console.log(\"Total Area Created Marla \" + ((estimatess1*estimatess2) / 270)); \n                        }\n                        document.getElementById(\"myArea\").value = totalCost ;\n                        document.getElementById(\"eArea\").value = cost ;\n\n                        if(marla < ((estimatess1*estimatess2) / 270))\n                        {\n                            document.getElementById(\"cArea\").value =  (widthh*heightt) * 150 ;\n                            setCArea(widthh*heightt);\n                        }\n                        else{\n                            document.getElementById(\"cArea\").value =  (estimatess1*estimatess2) * 150 ;\n                            setCArea(estimatess1*estimatess2)\n                        }\n                        \n\n                        // console.log(value)\n\n                        \n\n                    }\n\n                    const handleCalculate2 = () => {\n\n                        alert(\"We are calculating labour cost at the price of 150 RS per feet\")\n                        \n                        saveLayer()\n\n                        const totalArea = widthh * heightt;\n                        const enteredArea = document.getElementById(\"area\").value ;\n                        let myElement = 0;\n\n                        \n                        const totalCost = totalArea * 150;\n                        const cost = enteredArea * 150;\n                        let myJs = JSON.stringify(elements);\n                        setMyArr(JSON.parse(myJs))\n                        let estimatess1 = 0;\n                        let estimatess2 = 0;\n\n                        let estimatess1total = 0;\n                        let estimatess2total = 0;\n\n                        console.log(myVar.length)\n\n                        for(var k = 0; k < myVar.length; k++) {\n\n                            var Data = myVar[k];\n\n                            console.log(Data);\n\n                            for(var m = 0; m < Data.length; m++) {\n\n                                // console.log( \"Type : \" + Data[m].type);\n                                // console.log( \"x1 : \" + Data[m].x1);\n                                // console.log( \"x2 : \" + Data[m].x2);\n                                // console.log( \"y2 : \" + Data[m].y2);\n                                // console.log( \"y1 : \" + Data[m].y1);\n                                // console.log( (Data[m].x2-Data[m].x1)  / 15.36);\n                                // console.log( (Data[m].y2-Data[m].y1)  / 15.36);\n\n                                estimatess1total = estimatess1total + (Math.abs((Data[m].x2-Data[m].x1))  / 15.36);\n                                estimatess2total = estimatess2total + (Math.abs((Data[m].y2-Data[m].y1))  / 15.36);\n\n                            }\n\n                        }\n\n\n\n\n                        for(var i = 0; i < myArr.length ; i++)\n                        {\n                            // console.log( myArr[i].type);\n                            // console.log( myArr[i].x1);\n                            // console.log( myArr[i].x2);\n                            // console.log( myArr[i].y2);\n                            // console.log( myArr[i].y1);\n                            // console.log( (myArr[i].x2-myArr[i].x1)  / 15.36);\n                            // console.log( (myArr[i].y2-myArr[i].y1)  / 15.36);\n                            \n                            estimatess1 = estimatess1 + (Math.abs((myArr[i].x2-myArr[i].x1))  / 15.36);\n                            estimatess2 = estimatess2 + (Math.abs((myArr[i].y2-myArr[i].y1))  / 15.36);\n                           \n                            // myElement ++ ;\n\n                        }\n\n                        if(marla < ((estimatess1*estimatess2) / 270))\n                        {\n                            console.log(\"Total Area Created Feet  \" + (widthh*heightt));\n                            console.log(\"Total Area Created Marla \" + marla);\n                        }\n                        else{\n                        console.log(\"Total Area Created Feet  \" + (estimatess1*estimatess2));\n\n                        \n                        console.log(\"Total Area Created Marla \" + ((estimatess1*estimatess2) / 270)); \n                        }\n                        document.getElementById(\"myArea\").value = totalCost ;\n                        document.getElementById(\"eArea\").value = cost ;\n\n                        var totalEstCost = (estimatess1total*estimatess2total)\n\n                        document.getElementById(\"c2Area\").value =   totalEstCost * 150 ;\n                        setC2Area(estimatess1total*estimatess2total)\n                        \n                        if(marla < ((estimatess1*estimatess2) / 270))\n                        {\n                            var EstCost =  (widthh*heightt) \n                            document.getElementById(\"cArea\").value = EstCost * 150 ;\n                            setCArea(widthh*heightt);\n                        }\n                        else{\n                            var EstCost = (estimatess1*estimatess2)\n                            document.getElementById(\"cArea\").value =   EstCost * 150 ;\n                            setCArea(estimatess1*estimatess2)\n                        }\n                        \n                        \n\n                        // console.log(value)\n\n                        \n\n                    }\n\n\n                    const [anchorEl, setAnchorEl] = React.useState(null);\n                    const handleClick = (event) => {\n\n                        setAnchorEl(event.currentTarget);\n\n                    };\n\n                    const handleClose = () => {\n                        setAnchorEl(null);\n                    };\n                    \n                    const [view, setView] = React.useState('list');\n                    const handleChange = (event, nextView) => {\n                        setView(nextView);\n                    };\n\n\n\n\n                    let getJson = () => {\n                        let myJs = JSON.stringify(elements);\n                        setMyArr(JSON.parse(myJs))\n                        console.log( myArr );\n                    }\n                    \n                    let lessItem = () => {\n                        if(myVar[totalLayer] === undefined)\n                            {\n                                saveLayer()\n                            }\n                        if(item > 0) {\n                            item = item - 1;\n                            setElements(myVar[item])\n                            // myVar[item] = elements\n                            // saveLayer(item)\n                            \n                        }\n                        else {\n                            toast.success(\"Already on First\", {\n                                position: \"top-right\",\n                                autoClose: 5000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                                progress: undefined,\n                            });\n                    }}\n\n                    let upItem = () => {\n                        if(item < totalLayer){\n                            item = item + 1;\n                            setElements(myVar[item])\n                            // myVar[item] = elements\n                            // saveLayer(item)\n                            \n                        }\n                        else {\n                            toast.success(\"Already on Last\", {\n                                position: \"top-right\",\n                                autoClose: 5000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                                progress: undefined,\n                            });\n                        }\n                    }\n\n                    // var canvas = document.getElementById(\"canvas\"),\n                    //     ctx = canvas.getContext(\"2d\");\n                    // var b = ball[i];\n                    // b.draw(b.x, b.y, b.color ,b.radius);\n\n                    \n                    \n                    \n                    \n\n\n\n\n\n\n\n\n\n\n\n\n                    return (\n                        <div style={{overflow: overflow}}>\n\n                            <Toolbar>\n                                <Typography variant=\"h6\" noWrap className={classes.title} style={{color : \"#4E4141\"}}>\n\n                                    {['bottom'].map((anchor) => (\n                                        <React.Fragment key={anchor}>\n                                \n                                            <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n                                            <div className={classes.drawerHeader}>\n                                                <IconButton onClick={()=>{setState(\"bottom\",false)}}>\n                                                {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ExpandMore />}\n                                            </IconButton>\n                                            </div>\n\n                                            <Divider />\n                                                {list(anchor)}\n                                            </Drawer>\n                                        </React.Fragment>\n                                    ))}\n                                    {['right'].map((anchor) => (\n                                        <React.Fragment key={anchor}>\n                                \n                                            <Drawer anchor={anchor} open={state2[anchor]} onClose={toggleDrawer2(anchor, false)}>\n                                            <div className={classes.drawerHeader}>\n                                                <IconButton onClick={()=>{setState2(\"right\",false)}}>\n                                                {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ExpandMore />}\n                                            </IconButton>\n                                            </div>\n\n                                            <Divider />\n                                                {list2(anchor)}\n                                            </Drawer>\n                                        </React.Fragment>\n                                    ))}\n\n                                </Typography>\n                    \n                            </Toolbar>\n\n                            <div>\n      \n    </div>\n\n    {/* {['right'].map((anchor) => (\n                                        <React.Fragment key={anchor}>\n                                        <Button onClick={toggleDrawer2(anchor, true)}>{anchor}</Button>\n                                        <Drawer anchor={anchor} open={state2[anchor]} onClose={toggleDrawer2(anchor, false)}>\n                                            {list2(anchor)}\n                                        </Drawer>\n                                        </React.Fragment>\n                                    ))} */}\n\n\n            \n                            <Drawer\n                                className={classes.drawer}\n                                variant=\"persistent\"\n                                anchor=\"right\"\n                                open={open}\n                                classes={{\n                                    paper: classes.drawerPaper,\n                                }}\n                                >\n                                <div className={classes.drawerHeader}>\n                                    <IconButton onClick={handleDrawerClose}>\n                                        {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                                    </IconButton>\n                                </div>\n\n                               <Divider />\n                                <List>\n                                    {[<div>\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Enter Width (feet)</InputLabel>\n                                            <Input\n                                                id=\"width\"\n                                                type=\"number\"\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                        <SwapHorizontalCircleIcon />\n                                                    </InputAdornment>\n                                                }\n                                            />\n                                                \n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Enter Length (feet)</InputLabel>\n\n                                            <Input\n                                                id=\"height\"\n                                                type=\"number\"\n                                                startAdornment={\n                                                <InputAdornment position=\"start\">\n                                                    <SwapVerticalCircleIcon />\n                                                </InputAdornment>\n                                                }\n                                            />\n                                            <Button value=\"Submit\" onClick={handleSubmit}>\n                                                Submit\n                                            </Button>\n\n                                    </div>, <div>\n\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Your current Marla is : </InputLabel>\n                                            <Input\n                                                id=\"marla\"\n                                                type=\"number\"\n                                                step=\"any\"\n                                                readOnly\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                    </InputAdornment>\n                                                }\n                                            />\n\n                                    </div>,\n\n                                    <div>\n\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Enter Text </InputLabel>\n                                            <Input\n\n                                                id=\"write\"\n                                                type=\"text\"\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                    </InputAdornment>\n                                                }\n                                            />\n\n                                            <Button onClick={handleWrite} >Write</Button>\n\n                                    </div>, <div>\n\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Enter Area (Sq. feet)</InputLabel>\n                                            <Input\n                                                id=\"area\"\n                                                type=\"number\"\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                        <SwapHorizontalCircleIcon /> <h2>*</h2>\n                                                        <SwapVerticalCircleIcon />\n                                                    </InputAdornment>\n                                                }\n                                            />\n\n                                        \n\n                                    </div>,\n\n                                    <Button value=\"calculate\" onClick={scrapMe}>\n                                            Select Material\n                                        </Button>,\n\n                                        \n\n                                    <Button id = \"est\" \n                                        value=\"calculate\" \n                                        onClick={handleCalculate2}>\n                                        Estimate\n                                    </Button>\n,\n<div>\n\n<InputLabel htmlFor=\"input-with-icon-adornment\">Total Bricks Count for Current Layer is : </InputLabel>\n    <Input\n        id=\"bricksCount\"\n        step=\"any\"\n        readOnly\n        startAdornment={\n            <InputAdornment position=\"start\">\n            </InputAdornment>\n        }\n    />\n\n</div>,\n<div>\n\n<InputLabel htmlFor=\"input-with-icon-adornment\">Total Bricks Count is : </InputLabel>\n    <Input\n        id=\"bricksCountTotal\"\n        step=\"any\"\n        readOnly\n        startAdornment={\n            <InputAdornment position=\"start\">\n            </InputAdornment>\n        }\n    />\n\n</div>,\n\n<div>\n\n<InputLabel htmlFor=\"input-with-icon-adornment\">Total Cement for this layer (Bags) Count is : </InputLabel>\n    <Input\n        id=\"cementCount\"\n        type=\"number\"\n        step=\"any\"\n        readOnly\n        startAdornment={\n            <InputAdornment position=\"start\">\n            </InputAdornment>\n        }\n    />\n\n</div>,<div>\n\n<InputLabel htmlFor=\"input-with-icon-adornment\">Total Cement (Bags) Count is : </InputLabel>\n    <Input\n        id=\"cementCountTotal\"\n        type=\"number\"\n        step=\"any\"\n        readOnly\n        startAdornment={\n            <InputAdornment position=\"start\">\n            </InputAdornment>\n        }\n    />\n\n</div>,\n\n<div>\n\n<InputLabel htmlFor=\"input-with-icon-adornment\">Total Sand Count for this Layer (cubic ft) is : </InputLabel>\n    <Input\n        id=\"sandCount\"\n        type=\"number\"\n        step=\"any\"\n        readOnly\n        startAdornment={\n            <InputAdornment position=\"start\">\n            </InputAdornment>\n        }\n    />\n\n</div>,\n<div>\n\n<InputLabel htmlFor=\"input-with-icon-adornment\">Total Sand Count (cubic ft) is : </InputLabel>\n    <Input\n        id=\"sandCountTotal\"\n        type=\"number\"\n        step=\"any\"\n        readOnly\n        startAdornment={\n            <InputAdornment position=\"start\">\n            </InputAdornment>\n        }\n    />\n\n</div>,\n<div>\n\n<InputLabel htmlFor=\"input-with-icon-adornment\">Total Cement Count for this Layer ( Kg ) is : </InputLabel>\n    <Input\n        id=\"cementKg\"\n        type=\"number\"\n        step=\"any\"\n        readOnly\n        startAdornment={\n            <InputAdornment position=\"start\">\n            </InputAdornment>\n        }\n    />\n\n</div>,<div>\n\n<InputLabel htmlFor=\"input-with-icon-adornment\">Total Cement Count ( Kg ) is : </InputLabel>\n    <Input\n        id=\"cementKgTotal\"\n        type=\"number\"\n        step=\"any\"\n        readOnly\n        startAdornment={\n            <InputAdornment position=\"start\">\n            </InputAdornment>\n        }\n    />\n\n</div>,\n                                        \n\n                                    ].map((text, index) => (\n                                        <ListItem button key={text}>\n                                            <ListItemIcon>{index % 2 === 0 ? < BuildIcon /> : <LandscapeIcon />}</ListItemIcon>\n                                            <ListItemText primary={text} />\n                                        </ListItem>\n                                    ))}\n\n                                </List>\n\n                                <List>\n\n                                    {[<div>\n\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Total Labour Cost of one floor area </InputLabel>\n\n                                            <Input\n                                                id=\"myArea\"\n                                                type=\"number\"\n                                                step=\"any\"\n                                                readOnly\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                    </InputAdornment>\n                                                }\n                        \n                                            />\n                                    </div>, <div>\n\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Total Cost of Entered Area </InputLabel>\n\n                                            <Input\n                                                id=\"eArea\"\n                                                type=\"number\"\n                                                step=\"any\"\n                                                readOnly\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                    </InputAdornment>\n                                                }\n                                            />\n                                     </div>, \n                                    <div>\n                                        <InputLabel \n                                        hidden\n                                        htmlFor=\"input-with-icon-adornment\">Total Labour Cost of Current Layer With Furnishing </InputLabel>\n                                            <Input\n                                                hidden\n                                                id=\"cArea\"\n                                                // value = {cArea}\n                                                step=\"any\"\n                                                readOnly\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                    </InputAdornment>\n                                                }\n                                            />\n\n                                    </div>,\n                                    <div>\n                                    <InputLabel htmlFor=\"input-with-icon-adornment\">Total Labour Cost </InputLabel>\n                                        <Input\n                                            id=\"c2Area\"\n                                            // value = {cArea}\n                                            step=\"any\"\n                                            readOnly\n                                            startAdornment={\n                                                <InputAdornment position=\"start\">\n                                                </InputAdornment>\n                                            }\n                                        />\n\n                                </div>,\n                                    <div>\n                                    <InputLabel htmlFor=\"input-with-icon-adornment\"> Total Material Cost (Without Steel)  </InputLabel>\n                                        <Input\n                                            id=\"cAreaMat\"\n                                            // value = {cArea}\n                                            step=\"any\"\n                                            readOnly\n                                            startAdornment={\n                                                <InputAdornment position=\"start\">\n                                                </InputAdornment>\n                                            }\n                                        />\n\n                                </div>,\n                                    <div>\n                                    <InputLabel htmlFor=\"input-with-icon-adornment\">Total Cost (Without Steel)</InputLabel>\n                                        <Input\n                                            id=\"c2AreaMat\"\n                                            // value = {cArea}\n                                            step=\"any\"\n                                            readOnly\n                                            startAdornment={\n                                                <InputAdornment position=\"start\">\n                                                </InputAdornment>\n                                            }\n                                        />\n\n                                </div>].map((text, index) => (\n\n                                        <ListItem button key={text}>\n                                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                                            <ListItemText primary={text} />\n                                        </ListItem>\n                                    ))}\n                                </List>\n                            </Drawer>\n\n\n{isMobile === 1 ? (<div className = \"row\">\n                                    <div className = \"col-xs-12\">\n\n                                    \n                                \n                                    <div className={classes.root}>\n                                        <ButtonGroup\n                                        \n                                            orientation=\"vertical\"\n                                            value={view}\n                                            exclusive\n                                            onChange={handleChange}\n                                            className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                            >\n\n                                            <IconButton\n                                                color=\"#ffffff\"\n                                                aria-label=\"open drawer\"\n                                                edge=\"end\"\n                                                onClick={handleDrawerOpen}\n                                                className={clsx(open && classes.hide)}\n                                                className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                            size = \"sm\"\n                                                >\n                                            \n                                               <MenuIcon />\n                                            </IconButton>\n\n                                            <input type=\"color\" id=\"c\" onChange={(e) => {\n                                                                         setBGColor(e.target.value);\n                                                                        }} \n                                                    style = {{\n                                                    position: \"absolute\",\n                                                    left: \"-10000px\",\n                                                    top: \" auto\",\n                                                    width: \"1px\",\n                                                    height: \"1px\",\n                                                    overflow: \"hidden\"\n                                                  \n                                            }}/>\n                                           \n\n                                            <Button\n                                            size = \"sm\"\n                                            id = \"colors\"\n                                            className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                            onClick={ ()=> { \n\n                                                document.getElementById(\"c\").focus();\n                                                \n                                                document.getElementById(\"c\").click();\n                                                \n                                            }}\n                                            title = \"Set Background Color\">\n\n                                                    <FontAwesomeIcon icon={faPalette} />\n                                                   \n                                                \n                                                \n                                            </Button>\n\n                                            {UserServices.isLoggedin ?\n\n                                                (<>\n\n                                            <Button \n                                            size = \"sm\"\n                                            className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                            onClick={getData} title = \"Get Data\">\n\n                                                    <FontAwesomeIcon icon={faGetPocket} />\n                                                   \n                                                \n                                                \n                                            </Button>\n\n                                                <Button\n                                                size = \"sm\" title=\"save sketch on server\"  onClick={(e) => {\n\n                                                    saveLayer();\n\n                                                     name = prompt(\"Please Enter name of your Sketch\")\n                                                    if(name){\n                                                    UserServices.save(name , myVar ,widthh , heightt, totalLayer , UserServices.getLoggedinfo().id)\n                                                    .then((data) => {\n                                                        console.log(data);\n                                                        toast.success(data, {\n                                                            position: \"bottom-right\",\n                                                            autoClose: 5000,\n                                                            hideProgressBar: false,\n                                                            closeOnClick: true,\n                                                            pauseOnHover: true,\n                                                            draggable: true,\n                                                            progress: undefined,\n                                                        });\n                                                    })\n                                                    .catch((err) => {\n                                                        toast.error(err.response.data, {\n                                                            position: \"bottom-right\",\n                                                            autoClose: 5000,\n                                                            hideProgressBar: false,\n                                                            closeOnClick: true,\n                                                            pauseOnHover: true,\n                                                            draggable: true,\n                                                            progress: undefined,\n                                                        });\n                                                    });\n                                                }}} className = \"btn\"  \n                                                style={{backgroundColor:\"none\"}} >\n                                                \n                                                <FontAwesomeIcon icon={faSave} />\n                                                \n                                                </Button>\n                                                <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n            onClick={HandleSave} title= \"Download File\">\n            \n\n            <FontAwesomeIcon icon={faFileDownload} />\n\n\n            </Button>\n                                                </>) : \n                                                (<>\n                                                    <Button \n                                                        size = \"sm\"\n                                                        className = \"btn\"  \n                                                        style={{backgroundColor:\"none\"}} \n                                                        onClick={()=> {\n                                                            toast.error(\"We are sorry... This service is available for only Subscribed Users!\", {\n                                                                position: \"bottom-right\",\n                                                                autoClose: 5000,\n                                                                hideProgressBar: false,\n                                                                closeOnClick: true,\n                                                                pauseOnHover: true,\n                                                                draggable: true,\n                                                                progress: undefined,\n                                                                    });\n                                                        }} title = \"Get Data\">\n                                \n                                                        <FontAwesomeIcon icon={faGetPocket} />\n                                                   \n                                                    </Button>\n                                \n                                                    <Button\n                                                        size = \"sm\" title=\"save sketch on server\"  onClick={()=> {\n                                                            toast.error(\"We are sorry... This service is available for only Subscribed Users!\", {\n                                                                position: \"bottom-right\",\n                                                                autoClose: 5000,\n                                                                hideProgressBar: false,\n                                                                closeOnClick: true,\n                                                                pauseOnHover: true,\n                                                                draggable: true,\n                                                                progress: undefined,\n                                                                    });\n                                                        }} className = \"btn\"  \n                                                            style={{backgroundColor:\"none\"}} >\n                                                \n                                                                <FontAwesomeIcon icon={faSave} />\n                                                \n                                                        </Button>\n                                                        <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n            onClick={()=> {\n                toast.error(\"We are sorry... This service is available for only Subscribed Users!\", {\n                    position: \"bottom-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                        });\n            }} title= \"Download File\">\n            \n\n            <FontAwesomeIcon icon={faFileDownload} />\n\n\n            </Button>\n                                                        </>)\n                                            }  \n\n\n                                            \n\n                                            <Button\n                                            size = \"sm\" className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                onClick={addLayer} title = \"Add Layer\">\n\n\n                                                <FontAwesomeIcon icon={faPlus} />\n\n                                            </Button>\n                                            <Button\n                                            size = \"sm\" className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                id = \"selection\" \n                                                onClick={() => setTool(\"selection\")}   \n                                                aria-label=\"left aligned\"\n                                                title = \"Selection\">\n                                                \n\n                                                <FontAwesomeIcon icon={faVoteYea} />\n\n                                            </Button>\n    \n                                            <Button\n                                            size = \"sm\" className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                id = \"selection\" \n                                                onClick={() => setTool(\"sizes\")}   \n                                                aria-label=\"left aligned\"\n                                                title = \"Get Size\">\n                                            \n\n                                                <FontAwesomeIcon icon={faJoget} />\n                                                \n                                            </Button>\n                                            \n                                            <Button\n                                            size = \"sm\" className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                id = \"resize\" \n                                                onClick={() => setTool(\"resize\")}\n                                                title = \"Re - Factor\">\n\n                                                <FontAwesomeIcon icon={faIndustry} />\n\n                                            </Button>\n                                            <Button\n                                            size = \"sm\" className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                id = \"line\" \n                                                onClick={() => {\n                                                    var myWall = prompt(\"Please Enter Width of Wall\")\n                                                    setWall(myWall)\n                                                    \n                                                    setTool(\"line\")}}\n                                                title = \"Wall\">\n                                                \n                                                <FontAwesomeIcon icon={faGripLinesVertical} />\n\n\n                                            </Button>\n                                            <Button\n                                            size = \"sm\" className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                id = \"rectangle\" \n                                                onClick={() => {setTool(\"rectangle\")\n                                                                var myWall = prompt(\"Please Enter Width of Wall\")\n                                                                setWall(myWall)\n                                                                }}\n                                                title = \"Room \">\n                                               \n\n                                                <FontAwesomeIcon icon={faSquare} />\n\n\n                                            </Button>\n                                            <Button\n                                            size = \"sm\" className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                id = \"ellipse\" \n                                                onClick={() => {\n                                                setTool(\"ellipse\")\n                                                var myWall = prompt(\"Please Enter Width of Wall\")\n                                                setWall(myWall)}}\n                                                title = \"Ellipse Shape Room\">\n                                                \n\n                                                <FontAwesomeIcon icon={faCircleNotch} />\n\n                                            </Button>\n                                    \n\n                                            <Button\n                                            size = \"sm\" className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                aria-controls=\"simple-menu\" \n                                                aria-haspopup=\"true\" \n                                                onClick={handleClick}\n                                                title = \"Door\">\n                                                \n\n                                                <FontAwesomeIcon icon={faDoorOpen} />\n\n                                            </Button>\n \n                                                <Menu\n                                                    id=\"simple-menu\"\n                                                    anchorEl={anchorEl}\n                                                    keepMounted\n                                                    open={Boolean(anchorEl)}\n                                                    onClose={handleClose}\n                                                    >\n             \n                                                    <MenuItem \n                                                        id = \"arcL\" \n                                                        onClick={() => {setTool(\"arcL\")\n                                                                        setAnchorEl(null);}  }>\n                                                        Door Left\n                                                    </MenuItem>\n                                                    <MenuItem \n                                                        id = \"arcR\" \n                                                        onClick={() => {setTool(\"arcR\") \n                                                                        setAnchorEl(null);} }>\n                                                        Door Right\n                                                    </MenuItem>\n                                                    <MenuItem \n                                                        id = \"arcR\" \n                                                        onClick={() => {setTool(\"arcLB\") \n                                                                        setAnchorEl(null);} }>\n                                                        Door Left Bottom\n                                                    </MenuItem>\n                                                    <MenuItem \n                                                        id = \"arcR\" \n                                                        onClick={() => {setTool(\"arcRB\") \n                                                                        setAnchorEl(null);} }>\n                                                        Door Right Bottom\n                                                    </MenuItem>\n\n                                                </Menu>\n\n\n                                            <Button\n                                            size = \"sm\" className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                id = \"circle\" \n                                                onClick={() => {setTool(\"circle\")\n                                                var myWall = prompt(\"Please Enter Width of Wall\")\n                                                setWall(myWall)}}\n                                                title = \"Circular Room\">\n                                              \n                                                <FontAwesomeIcon icon={faCircle} />\n                                            </Button>\n                                            <Button\n                                            size = \"sm\" className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                id = \"eraser\" \n                                                onClick={() => setTool(\"eraser\")}\n                                                title = \"Eraser\">\n                                    \n\n                                                <FontAwesomeIcon icon={faEraser} />\n\n\n                                            </Button>\n                                            <Button\n                                            size = \"sm\"  className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                onClick={lessItem} \n                                                title = \"Go lower Floor\">\n                                                <ExpandLessIcon/> \n                                            </Button>\n\n                                            <Typography style={{color: \"black\"}}>{item} / {totalLayer}</Typography>\n\n                                            <Button\n                                            size = \"sm\" className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                onClick={upItem} \n                                                title = \"Go Upper Floor\">\n                                                <ExpandMoreIcon/>\n                                            </Button>\n                                            <Button \n                                                onClick={saveLayer} \n                                                className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                title = \"Save Layer\">\n                                                \n                                                <FontAwesomeIcon icon={faLayerGroup} />\n                                            </Button>\n                                            {/* <Button\n                                            size = \"sm\" className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                            onClick={HandleSave} title= \"Download File\">\n                                            \n\n                                            <FontAwesomeIcon icon={faFileDownload} />\n\n\n                                            </Button> */}\n                                           \n                    \n                                            <Button\n                                            size = \"sm\" className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}}  onClick={()=>{\n                                                if(widthh === null)\n                                                {\n                                                    alert(\"Please Enter Width and Length First\")\n                                                }\n                                                else{\n                                                const canv = document.getElementById(\"canvas\");\n                                                const ctx = canv.getContext('2d')\n                                                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                                                setElements([]);\n                                                setMyVar([]);\n                                                item = 0;\n                                                totalLayer = 0;\n                                                }}} \n                                                title = \"Clear All\">\n                                                \n                                                <FontAwesomeIcon icon={faTrashAlt}/>\n                                            </Button>\n                    \n                                            \n                                        </ButtonGroup>\n\n                                    </div>\n                                    </div>\n                                    </div>):\n                                    \n    isMobile === 2 ? ( \n        <div className=\"container\" ><center>\n            <div className = \"row\">\n            <div className = \"col-xs-12\">\n\n    \n\n                <div className={classes.root}>\n                    <ButtonGroup\n        \n                            orientation=\"vertical\"\n                            value={view}\n                            exclusive\n                            onChange={handleChange}\n                            className = \"btn\"  \n                        >\n\n                    <IconButton\n                        color=\"#ffffff\"\n                        aria-label=\"open drawer\"\n                        edge=\"end\"\n                        onClick={handleDrawerOpen}\n                        className={clsx(open && classes.hide)}\n                        className = \"btn\"  \n                        style={{backgroundColor:\"none\"}} \n                        size = \"sm\"\n                        >\n            \n                                <MenuIcon />\n                    </IconButton>\n\n                    <input type=\"color\" id=\"c\" onChange={(e) => {\n                                                                setBGColor(e.target.value);\n                                                                    }} \n                            style = {{\n                                position: \"absolute\",\n                                left: \"-10000px\",\n                                top: \" auto\",\n                                width: \"1px\",\n                                height: \"1px\",\n                                overflow: \"hidden\"\n                  \n                            }}/>\n           \n\n                    <Button\n                        size = \"sm\"\n                        id = \"colors\"\n                        className = \"btn\"  \n                        style={{backgroundColor:\"none\"}} \n                            onClick={ ()=> { \n\n                                document.getElementById(\"c\").focus();\n                \n                                document.getElementById(\"c\").click();\n                \n                            }}\n                        title = \"Set Background Color\">\n\n                        <FontAwesomeIcon icon={faPalette} />\n                   \n                </Button>\n\n                {UserServices.isLoggedin ?\n\n                    (<>\n\n                    <Button \n                        size = \"sm\"\n                        className = \"btn\"  \n                        style={{backgroundColor:\"none\"}} \n                        onClick={getData} title = \"Get Data\">\n\n                        <FontAwesomeIcon icon={faGetPocket} />\n                   \n                    </Button>\n\n                    <Button\n                        size = \"sm\" title=\"save sketch on server\"  onClick={(e) => {\n                        name = prompt(\"Please Enter name of your Sketch\")\n                            if(name){\n                                UserServices.save(name , myVar ,widthh , heightt, totalLayer , UserServices.getLoggedinfo().id)\n                                .then((data) => {\n                                console.log(data);\n                                toast.success(data, {\n                                position: \"bottom-right\",\n                                autoClose: 5000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                                progress: undefined,\n                                    });\n                                })\n                                .catch((err) => {\n                                    toast.error(err.response.data, {\n                                    position: \"bottom-right\",\n                                    autoClose: 5000,\n                                    hideProgressBar: false,\n                                    closeOnClick: true,\n                                    pauseOnHover: true,\n                                    draggable: true,\n                                    progress: undefined,\n                                    });\n                                });\n                            }}} className = \"btn\"  \n                            style={{backgroundColor:\"none\"}} >\n                \n                                <FontAwesomeIcon icon={faSave} />\n                \n                        </Button>\n                        <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n            onClick={HandleSave} title= \"Download File\">\n            \n\n            <FontAwesomeIcon icon={faFileDownload} />\n\n\n            </Button>\n                    </>) : \n                        (<>\n                            <Button \n                                size = \"sm\"\n                                className = \"btn\"  \n                                style={{backgroundColor:\"none\"}} \n                                onClick={()=> {\n                                    toast.error(\"We are sorry... This service is available for only Subscribed Users!\", {\n                                        position: \"bottom-right\",\n                                        autoClose: 5000,\n                                        hideProgressBar: false,\n                                        closeOnClick: true,\n                                        pauseOnHover: true,\n                                        draggable: true,\n                                        progress: undefined,\n                                            });\n                                }} title = \"Get Data\">\n        \n                                <FontAwesomeIcon icon={faGetPocket} />\n                           \n                            </Button>\n        \n                            <Button\n                                size = \"sm\" title=\"save sketch on server\"  onClick={()=> {\n                                    toast.error(\"We are sorry... This service is available for only Subscribed Users!\", {\n                                        position: \"bottom-right\",\n                                        autoClose: 5000,\n                                        hideProgressBar: false,\n                                        closeOnClick: true,\n                                        pauseOnHover: true,\n                                        draggable: true,\n                                        progress: undefined,\n                                            });\n                                }} className = \"btn\"  \n                                    style={{backgroundColor:\"none\"}} >\n                        \n                                        <FontAwesomeIcon icon={faSave} />\n                        \n                                </Button>\n                                <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n            onClick={()=> {\n                toast.error(\"We are sorry... This service is available for only Subscribed Users!\", {\n                    position: \"bottom-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                        });\n            }} title= \"Download File\">\n            \n\n            <FontAwesomeIcon icon={faFileDownload} />\n\n\n            </Button>\n                                </>\n                                )\n                    }  \n\n            \n\n            \n\n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                onClick={addLayer} title = \"Add Layer\">\n\n\n                <FontAwesomeIcon icon={faPlus} />\n\n            </Button>\n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                id = \"selection\" \n                onClick={() => setTool(\"selection\")}   \n                aria-label=\"left aligned\"\n                title = \"Selection\">\n                \n\n                <FontAwesomeIcon icon={faVoteYea} />\n\n            </Button>\n\n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                id = \"selection\" \n                onClick={() => setTool(\"sizes\")}   \n                aria-label=\"left aligned\"\n                title = \"Get Size\">\n            \n\n                <FontAwesomeIcon icon={faJoget} />\n                \n            </Button>\n            \n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                id = \"resize\" \n                onClick={() => setTool(\"resize\")}\n                title = \"Re - Factor\">\n\n                <FontAwesomeIcon icon={faIndustry} />\n\n            </Button>\n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                id = \"line\" \n                onClick={() => {\n                    var myWall = prompt(\"Please Enter Width of Wall\")\n                    setWall(myWall)\n                    \n                    setTool(\"line\")}}\n                title = \"Wall\">\n                \n                <FontAwesomeIcon icon={faGripLinesVertical} />\n\n\n            </Button>\n            </ButtonGroup>\n            </div></div>                <div className={classes.root}>\n\n            <div className = \"row\">\n            <div className = \"col-xs-12\">\n                \n            <ButtonGroup\n            \n            orientation=\"vertical\"\n            value={view}\n            exclusive\n            onChange={handleChange}\n            className = \"btn\"  \n            style={{paddingRight : \"0.99em\"}} >\n            \n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                id = \"rectangle\" \n                onClick={() => {setTool(\"rectangle\")\n                                var myWall = prompt(\"Please Enter Width of Wall\")\n                                setWall(myWall)\n                                }}\n                title = \"Room \">\n               \n\n                <FontAwesomeIcon icon={faSquare} />\n\n\n            </Button>\n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                id = \"ellipse\" \n                onClick={() => {\n                setTool(\"ellipse\")\n                var myWall = prompt(\"Please Enter Width of Wall\")\n                setWall(myWall)}}\n                title = \"Ellipse Shape Room\">\n                \n\n                <FontAwesomeIcon icon={faCircleNotch} />\n\n            </Button>\n    \n\n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                aria-controls=\"simple-menu\" \n                aria-haspopup=\"true\" \n                onClick={handleClick}\n                title = \"Door\">\n                \n\n                <FontAwesomeIcon icon={faDoorOpen} />\n\n            </Button>\n\n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                    >\n\n                    <MenuItem \n                        id = \"arcL\" \n                        onClick={() => {setTool(\"arcL\")\n                                        setAnchorEl(null);}  }>\n                        Door Left\n                    </MenuItem>\n                    <MenuItem \n                        id = \"arcR\" \n                        onClick={() => {setTool(\"arcR\") \n                                        setAnchorEl(null);} }>\n                        Door Right\n                    </MenuItem>\n                    <MenuItem \n                        id = \"arcR\" \n                        onClick={() => {setTool(\"arcLB\") \n                                        setAnchorEl(null);} }>\n                        Door Left Bottom\n                    </MenuItem>\n                    <MenuItem \n                        id = \"arcR\" \n                        onClick={() => {setTool(\"arcRB\") \n                                        setAnchorEl(null);} }>\n                        Door Right Bottom\n                    </MenuItem>\n\n                </Menu>\n\n\n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                id = \"circle\" \n                onClick={() => {setTool(\"circle\")\n                var myWall = prompt(\"Please Enter Width of Wall\")\n                setWall(myWall)}}\n                title = \"Circular Room\">\n              \n                <FontAwesomeIcon icon={faCircle} />\n            </Button>\n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                id = \"eraser\" \n                onClick={() => setTool(\"eraser\")}\n                title = \"Eraser\">\n    \n\n                <FontAwesomeIcon icon={faEraser} />\n\n\n            </Button>\n            <Button\n            size = \"sm\"  className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                onClick={lessItem} \n                title = \"Go lower Floor\">\n                <ExpandLessIcon/> \n            </Button>\n\n            <Typography style={{color: \"black\"}}>{item} / {totalLayer}</Typography>\n\n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                onClick={upItem} \n                title = \"Go Upper Floor\">\n                <ExpandMoreIcon/>\n            </Button>\n            <Button \n                                                onClick={saveLayer} \n                                                className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                title = \"Save Layer\">\n                                                \n                                                <FontAwesomeIcon icon={faLayerGroup} />\n                                            </Button>\n            {/* <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n            onClick={HandleSave} title= \"Download File\">\n            \n\n            <FontAwesomeIcon icon={faFileDownload} />\n\n\n            </Button> */}\n           \n\n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}}  onClick={()=>{\n                if(widthh === null)\n                {\n                    alert(\"Please Enter Width and Length First\")\n                }\n                else{\n                const canv = document.getElementById(\"canvas\");\n                const ctx = canv.getContext('2d')\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                setElements([]);\n                setMyVar([]);\n                item = 0;\n                totalLayer = 0;\n                }}} \n                title = \"Clear All\">\n                \n                <FontAwesomeIcon icon={faTrashAlt}/>\n            </Button>\n\n            \n        </ButtonGroup>\n</div>\n    </div></div>\n    </div></center>\n    </div> ):\n    \n    \n    isMobile === 3 ? ( \n     \n        <div className=\"container\" ><center>\n            <div className = \"row\">\n            <div className = \"col-xs-12\">\n\n    \n\n                <div className={classes.root}>\n                    <ButtonGroup\n        \n                            orientation=\"vertical\"\n                            value={view}\n                            exclusive\n                            onChange={handleChange}\n                            className = \"btn\"  \n                            style={{paddingRight : \"2.5em\"}} \n                        >\n\n                    <IconButton\n                        color=\"#ffffff\"\n                        aria-label=\"open drawer\"\n                        edge=\"end\"\n                        onClick={handleDrawerOpen}\n                        className={clsx(open && classes.hide)}\n                        className = \"btn\"  \n                        style={{backgroundColor:\"none\"}} \n                        size = \"sm\"\n                        >\n            \n                                <MenuIcon />\n                    </IconButton>\n\n                    <input type=\"color\" id=\"c\" onChange={(e) => {\n                                                                setBGColor(e.target.value);\n                                                                    }} \n                            style = {{\n                                position: \"absolute\",\n                                left: \"-10000px\",\n                                top: \" auto\",\n                                width: \"1px\",\n                                height: \"1px\",\n                                overflow: \"hidden\"\n                  \n                            }}/>\n           \n\n                    <Button\n                        size = \"sm\"\n                        id = \"colors\"\n                        className = \"btn\"  \n                        style={{backgroundColor:\"none\"}} \n                            onClick={ ()=> { \n\n                                document.getElementById(\"c\").focus();\n                \n                                document.getElementById(\"c\").click();\n                \n                            }}\n                        title = \"Set Background Color\">\n\n                        <FontAwesomeIcon icon={faPalette} />\n                   \n                </Button>\n\n                {UserServices.isLoggedin ?\n\n                    (<>\n\n                    <Button \n                        size = \"sm\"\n                        className = \"btn\"  \n                        style={{backgroundColor:\"none\"}} \n                        onClick={getData} title = \"Get Data\">\n\n                        <FontAwesomeIcon icon={faGetPocket} />\n                   \n                    </Button>\n\n                    <Button\n                        size = \"sm\" title=\"save sketch on server\"  onClick={(e) => {\n                        name = prompt(\"Please Enter name of your Sketch\")\n                            if(name){\n                                UserServices.save(name , myVar ,widthh , heightt, totalLayer , UserServices.getLoggedinfo().id)\n                                .then((data) => {\n                                console.log(data);\n                                toast.success(data, {\n                                position: \"bottom-right\",\n                                autoClose: 5000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                                progress: undefined,\n                                    });\n                                })\n                                .catch((err) => {\n                                    toast.error(err.response.data, {\n                                    position: \"bottom-right\",\n                                    autoClose: 5000,\n                                    hideProgressBar: false,\n                                    closeOnClick: true,\n                                    pauseOnHover: true,\n                                    draggable: true,\n                                    progress: undefined,\n                                    });\n                                });\n                            }}} className = \"btn\"  \n                            style={{backgroundColor:\"none\"}} >\n                \n                                <FontAwesomeIcon icon={faSave} />\n                \n                        </Button>\n                        <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n            onClick={HandleSave} title= \"Download File\">\n            \n\n            <FontAwesomeIcon icon={faFileDownload} />\n\n\n            </Button>\n                    </>) : \n                        ( <>\n                        <Button \n                            size = \"sm\"\n                            className = \"btn\"  \n                            style={{backgroundColor:\"none\"}} \n                            onClick={()=> {\n                                toast.error(\"We are sorry... This service is available for only Subscribed Users!\", {\n                                    position: \"bottom-right\",\n                                    autoClose: 5000,\n                                    hideProgressBar: false,\n                                    closeOnClick: true,\n                                    pauseOnHover: true,\n                                    draggable: true,\n                                    progress: undefined,\n                                        });\n                            }} title = \"Get Data\">\n    \n                            <FontAwesomeIcon icon={faGetPocket} />\n                       \n                        </Button>\n    \n                        <Button\n                            size = \"sm\" title=\"save sketch on server\"  onClick={()=> {\n                                toast.error(\"We are sorry... This service is available for only Subscribed Users!\", {\n                                    position: \"bottom-right\",\n                                    autoClose: 5000,\n                                    hideProgressBar: false,\n                                    closeOnClick: true,\n                                    pauseOnHover: true,\n                                    draggable: true,\n                                    progress: undefined,\n                                        });\n                            }} className = \"btn\"  \n                                style={{backgroundColor:\"none\"}} >\n                    \n                                    <FontAwesomeIcon icon={faSave} />\n                    \n                            </Button>\n                            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n            onClick={()=> {\n                toast.error(\"We are sorry... This service is available for only Subscribed Users!\", {\n                    position: \"bottom-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                        });\n            }} className = \"btn\"  \n                style={{backgroundColor:\"none\"}} title= \"Download File\">\n            \n\n            <FontAwesomeIcon icon={faFileDownload} />\n\n\n            </Button>\n                            </>)\n                    }  \n\n</ButtonGroup>\n            </div></div></div>\n            <div className = \"row\">\n            <div className = \"col-xs-12\">\n\n    \n\n                <div className={classes.root}>\n                    <ButtonGroup\n        \n                            orientation=\"vertical\"\n                            value={view}\n                            exclusive\n                            onChange={handleChange}\n                            className = \"btn\"  \n                            style={{backgroundColor:\"none\"}} \n                        >\n            \n\n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                onClick={addLayer} title = \"Add Layer\">\n\n\n                <FontAwesomeIcon icon={faPlus} />\n\n            </Button>\n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                id = \"selection\" \n                onClick={() => setTool(\"selection\")}   \n                aria-label=\"left aligned\"\n                title = \"Selection\">\n                \n\n                <FontAwesomeIcon icon={faVoteYea} />\n\n            </Button>\n\n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                id = \"selection\" \n                onClick={() => setTool(\"sizes\")}   \n                aria-label=\"left aligned\"\n                title = \"Get Size\">\n            \n\n                <FontAwesomeIcon icon={faJoget} />\n                \n            </Button>\n            \n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                id = \"resize\" \n                onClick={() => setTool(\"resize\")}\n                title = \"Re - Factor\">\n\n                <FontAwesomeIcon icon={faIndustry} />\n\n            </Button>\n            \n            \n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                id = \"line\" \n                onClick={() => {\n                    var myWall = prompt(\"Please Enter Width of Wall\")\n                    setWall(myWall)\n                    \n                    setTool(\"line\")}}\n                title = \"Wall\">\n                \n                <FontAwesomeIcon icon={faGripLinesVertical} />\n\n\n            </Button>\n</ButtonGroup>\n</div></div></div>\n            <div className = \"row\">\n            <div className = \"col-xs-12\">\n\n    \n\n                <div className={classes.root}>\n                    <ButtonGroup\n        \n                            orientation=\"vertical\"\n                            value={view}\n                            exclusive\n                            onChange={handleChange}\n                            className = \"btn\"  \n                            style={{backgroundColor:\"none\"}} \n                        >\n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                id = \"rectangle\" \n                onClick={() => {setTool(\"rectangle\")\n                                var myWall = prompt(\"Please Enter Width of Wall\")\n                                setWall(myWall)\n                                }}\n                title = \"Room \">\n               \n\n                <FontAwesomeIcon icon={faSquare} />\n\n\n            </Button>\n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                id = \"ellipse\" \n                onClick={() => {\n                setTool(\"ellipse\")\n                var myWall = prompt(\"Please Enter Width of Wall\")\n                setWall(myWall)}}\n                title = \"Ellipse Shape Room\">\n                \n\n                <FontAwesomeIcon icon={faCircleNotch} />\n\n            </Button>\n    \n\n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                aria-controls=\"simple-menu\" \n                aria-haspopup=\"true\" \n                onClick={handleClick}\n                title = \"Door\">\n                \n\n                <FontAwesomeIcon icon={faDoorOpen} />\n\n            </Button>\n\n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                    >\n\n                    <MenuItem \n                        id = \"arcL\" \n                        onClick={() => {setTool(\"arcL\")\n                                        setAnchorEl(null);}  }>\n                        Door Left\n                    </MenuItem>\n                    <MenuItem \n                        id = \"arcR\" \n                        onClick={() => {setTool(\"arcR\") \n                                        setAnchorEl(null);} }>\n                        Door Right\n                    </MenuItem>\n                    <MenuItem \n                        id = \"arcR\" \n                        onClick={() => {setTool(\"arcLB\") \n                                        setAnchorEl(null);} }>\n                        Door Left Bottom\n                    </MenuItem>\n                    <MenuItem \n                        id = \"arcR\" \n                        onClick={() => {setTool(\"arcRB\") \n                                        setAnchorEl(null);} }>\n                        Door Right Bottom\n                    </MenuItem>\n\n                </Menu>\n\n\n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                id = \"circle\" \n                onClick={() => {setTool(\"circle\")\n                var myWall = prompt(\"Please Enter Width of Wall\")\n                setWall(myWall)}}\n                title = \"Circular Room\">\n              \n                <FontAwesomeIcon icon={faCircle} />\n            </Button>\n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                id = \"eraser\" \n                onClick={() => setTool(\"eraser\")}\n                title = \"Eraser\">\n    \n\n                <FontAwesomeIcon icon={faEraser} />\n\n\n            </Button>\n            </ButtonGroup>\n            </div></div></div>\n\n            <div className = \"row\">\n            <div className = \"col-xs-12\">\n\n    \n\n                <div className={classes.root}>\n                    <ButtonGroup\n        \n                            orientation=\"vertical\"\n                            value={view}\n                            exclusive\n                            onChange={handleChange}\n                            className = \"btn\"  \n                            style={{paddingRight : \"2.7em\"}} \n                        >\n            <Button\n            size = \"sm\"  className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                onClick={lessItem} \n                title = \"Go lower Floor\">\n                <ExpandLessIcon/> \n            </Button>\n\n            <Typography style={{color: \"black\"}}>{item} / {totalLayer}</Typography>\n\n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n                onClick={upItem} \n                title = \"Go Upper Floor\">\n                <ExpandMoreIcon/>\n            </Button>\n            <Button \n                                                onClick={saveLayer} \n                                                className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                title = \"Save Layer\">\n                                                \n                                                <FontAwesomeIcon icon={faLayerGroup} />\n                                            </Button>\n            {/* <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n            onClick={HandleSave} title= \"Download File\">\n            \n\n            <FontAwesomeIcon icon={faFileDownload} />\n\n\n            </Button> */}\n           \n\n            <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}}  onClick={()=>{\n                if(widthh === null)\n                {\n                    alert(\"Please Enter Width and Length First\")\n                }\n                else{\n                const canv = document.getElementById(\"canvas\");\n                const ctx = canv.getContext('2d')\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                setElements([]);\n                setMyVar([]);\n                item = 0;\n                totalLayer = 0;\n                }}} \n                title = \"Clear All\">\n                \n                <FontAwesomeIcon icon={faTrashAlt}/>\n            </Button>\n\n            \n        </ButtonGroup>\n</div>\n    </div>\n    </div></center>\n    </div>):(\n\n                            \n                                <div className = \"row\" style={{paddingLeft : '5em'}}>\n                                    <div className = \"col-xs-12\" >\n\n                                    \n                                \n                                    <div className={classes.root} >\n                                        <ButtonGroup\n                                            orientation=\"vertical\"\n                                            value={view}\n                                            exclusive\n                                            onChange={handleChange}\n                                            className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                            >\n\n                                            <IconButton\n                                                color=\"#ffffff\"\n                                                aria-label=\"open drawer\"\n                                                edge=\"end\"\n                                                onClick={handleDrawerOpen}\n                                                className={clsx(open && classes.hide)}\n                                                className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                >\n                                            \n                                               <MenuIcon />\n                                            </IconButton>\n\n                                            <input type=\"color\" id=\"c\" onChange={(e) => {\n                                                                         setBGColor(e.target.value);\n                                                                        }} \n                                                    style = {{\n                                                    position: \"absolute\",\n                                                    left: \"-10000px\",\n                                                    top: \" auto\",\n                                                    width: \"1px\",\n                                                    height: \"1px\",\n                                                    overflow: \"hidden\"\n                                                  \n                                            }}/>\n                                           \n\n                                            <Button\n                                            \n                                            id = \"colors\"\n                                            className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                            onClick={ ()=> { \n\n                                                document.getElementById(\"c\").focus();\n                                                \n                                                document.getElementById(\"c\").click();\n                                                \n                                            }}\n                                            title = \"Set Background Color\">\n\n                                                    <FontAwesomeIcon icon={faPalette} />\n                                                   \n                                                \n                                                \n                                            </Button>\n\n                                            {UserServices.isLoggedin ?\n\n                                                (<>\n\n                                            <Button \n                                            \n                                            className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                            onClick={getData} title = \"Get Data\">\n\n                                                    <FontAwesomeIcon icon={faGetPocket} />\n                                                   \n                                                \n                                                \n                                            </Button>\n\n                                                <Button title=\"save sketch on server\"  onClick={(e) => {\n                                                     name = prompt(\"Please Enter name of your Sketch\")\n                                                    if(name){\n                                                    UserServices.save(name , myVar ,widthh , heightt, totalLayer , UserServices.getLoggedinfo().id)\n                                                    .then((data) => {\n                                                        console.log(data);\n                                                        toast.success(data, {\n                                                            position: \"bottom-right\",\n                                                            autoClose: 5000,\n                                                            hideProgressBar: false,\n                                                            closeOnClick: true,\n                                                            pauseOnHover: true,\n                                                            draggable: true,\n                                                            progress: undefined,\n                                                        });\n                                                    })\n                                                    .catch((err) => {\n                                                        toast.error(err.response.data, {\n                                                            position: \"bottom-right\",\n                                                            autoClose: 5000,\n                                                            hideProgressBar: false,\n                                                            closeOnClick: true,\n                                                            pauseOnHover: true,\n                                                            draggable: true,\n                                                            progress: undefined,\n                                                        });\n                                                    });\n                                                }}} className = \"btn\"  \n                                                style={{backgroundColor:\"none\"}} >\n                                                \n                                                <FontAwesomeIcon icon={faSave} />\n                                                \n                                                </Button>\n                                                <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n            onClick={HandleSave} title= \"Download File\">\n            \n\n            <FontAwesomeIcon icon={faFileDownload} />\n\n\n            </Button>\n                                                </>) : \n                                                (<>\n                                                    <Button \n                                                        size = \"sm\"\n                                                        className = \"btn\"  \n                                                        style={{backgroundColor:\"none\"}} \n                                                        onClick={()=> {\n                                                            toast.error(\"We are sorry... This service is available for only Subscribed Users!\", {\n                                                                position: \"bottom-right\",\n                                                                autoClose: 5000,\n                                                                hideProgressBar: false,\n                                                                closeOnClick: true,\n                                                                pauseOnHover: true,\n                                                                draggable: true,\n                                                                progress: undefined,\n                                                                    });\n                                                        }} title = \"Get Data\">\n                                \n                                                        <FontAwesomeIcon icon={faGetPocket} />\n                                                   \n                                                    </Button>\n                                \n                                                    <Button\n                                                        size = \"sm\" title=\"save sketch on server\"  onClick={()=> {\n                                                            toast.error(\"We are sorry... This service is available for only Subscribed Users!\", {\n                                                                position: \"bottom-right\",\n                                                                autoClose: 5000,\n                                                                hideProgressBar: false,\n                                                                closeOnClick: true,\n                                                                pauseOnHover: true,\n                                                                draggable: true,\n                                                                progress: undefined,\n                                                                    });\n                                                        }} className = \"btn\"  \n                                                            style={{backgroundColor:\"none\"}} >\n                                                \n                                                                <FontAwesomeIcon icon={faSave} />\n                                                \n                                                        </Button>\n                                                        \n                                                        <Button\n            size = \"sm\" className = \"btn\"  \n            style={{backgroundColor:\"none\"}} \n            onClick={()=> {\n                toast.error(\"We are sorry... This service is available for only Subscribed Users!\", {\n                    position: \"bottom-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                        });\n            }} title= \"Download File\">\n            \n\n            <FontAwesomeIcon icon={faFileDownload} />\n\n\n            </Button>\n                                                        </>\n                                                        \n                                                        )\n                                            }  \n\n                                            \n\n                                            \n\n                                            <Button className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                onClick={addLayer} title = \"Add Layer\">\n\n\n                                                <FontAwesomeIcon icon={faPlus} />\n\n                                            </Button>\n                                            <Button className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                id = \"selection\" \n                                                onClick={() => setTool(\"selection\")}   \n                                                aria-label=\"left aligned\"\n                                                title = \"Selection\">\n                                                \n\n                                                <FontAwesomeIcon icon={faVoteYea} />\n\n                                            </Button>\n    \n                                            <Button className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                id = \"selection\" \n                                                onClick={() => setTool(\"sizes\")}   \n                                                aria-label=\"left aligned\"\n                                                title = \"Get Size\">\n                                            \n\n                                                <FontAwesomeIcon icon={faJoget} />\n                                                \n                                            </Button>\n                                            \n                                            <Button className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                id = \"resize\" \n                                                onClick={() => setTool(\"resize\")}\n                                                title = \"Re - Factor\">\n\n                                                <FontAwesomeIcon icon={faIndustry} />\n\n                                            </Button>\n                                            <Button className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                id = \"line\" \n                                                onClick={() => {\n                                                    var myWall = prompt(\"Please Enter Width of Wall\")\n                                                    setWall(myWall)\n                                                    \n                                                    setTool(\"line\")}}\n                                                title = \"Wall\">\n                                                \n                                                <FontAwesomeIcon icon={faGripLinesVertical} />\n\n\n                                            </Button>\n                                            <Button className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                id = \"rectangle\" \n                                                onClick={() => {setTool(\"rectangle\")\n                                                                var myWall = prompt(\"Please Enter Width of Wall\")\n                                                                setWall(myWall)\n                                                                }}\n                                                title = \"Room \">\n                                               \n\n                                                <FontAwesomeIcon icon={faSquare} />\n\n\n                                            </Button>\n                                            <Button className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                id = \"ellipse\" \n                                                onClick={() => {\n                                                setTool(\"ellipse\")\n                                                var myWall = prompt(\"Please Enter Width of Wall\")\n                                                setWall(myWall)}}\n                                                title = \"Ellipse Shape Room\">\n                                                \n\n                                                <FontAwesomeIcon icon={faCircleNotch} />\n\n                                            </Button>\n                                    \n\n                                            <Button className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                aria-controls=\"simple-menu\" \n                                                aria-haspopup=\"true\" \n                                                onClick={handleClick}\n                                                title = \"Door\">\n                                                \n\n                                                <FontAwesomeIcon icon={faDoorOpen} />\n\n                                            </Button>\n \n                                                <Menu\n                                                    id=\"simple-menu\"\n                                                    anchorEl={anchorEl}\n                                                    keepMounted\n                                                    open={Boolean(anchorEl)}\n                                                    onClose={handleClose}\n                                                    >\n             \n                                                    <MenuItem \n                                                        id = \"arcL\" \n                                                        onClick={() => {setTool(\"arcL\")\n                                                                        setAnchorEl(null);}  }>\n                                                        Door Left\n                                                    </MenuItem>\n                                                    <MenuItem \n                                                        id = \"arcR\" \n                                                        onClick={() => {setTool(\"arcR\") \n                                                                        setAnchorEl(null);} }>\n                                                        Door Right\n                                                    </MenuItem>\n                                                    <MenuItem \n                                                        id = \"arcR\" \n                                                        onClick={() => {setTool(\"arcLB\") \n                                                                        setAnchorEl(null);} }>\n                                                        Door Left Bottom\n                                                    </MenuItem>\n                                                    <MenuItem \n                                                        id = \"arcR\" \n                                                        onClick={() => {setTool(\"arcRB\") \n                                                                        setAnchorEl(null);} }>\n                                                        Door Right Bottom\n                                                    </MenuItem>\n\n                                                </Menu>\n\n\n                                            <Button className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                id = \"circle\" \n                                                onClick={() => {setTool(\"circle\")\n                                                var myWall = prompt(\"Please Enter Width of Wall\")\n                                                setWall(myWall)}}\n                                                title = \"Circular Room\">\n                                              \n                                                <FontAwesomeIcon icon={faCircle} />\n                                            </Button>\n                                            <Button className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                id = \"eraser\" \n                                                onClick={() => setTool(\"eraser\")}\n                                                title = \"Eraser\">\n                                    \n\n                                                <FontAwesomeIcon icon={faEraser} />\n\n\n                                            </Button>\n                                            <Button  className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                onClick={lessItem} \n                                                title = \"Go lower Floor\">\n                                                <ExpandLessIcon/> \n                                            </Button>\n\n                                            <Typography style={{color: \"black\"}}>{item} / {totalLayer}</Typography>\n\n                                            <Button className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                onClick={upItem} \n                                                title = \"Go Upper Floor\">\n                                                <ExpandMoreIcon/>\n                                            </Button>\n                                            <Button \n                                                onClick={saveLayer} \n                                                className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                                title = \"Save Layer\">\n                                                \n                                                <FontAwesomeIcon icon={faLayerGroup} />\n                                            </Button>\n                                            {/* <Button className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}} \n                                            onClick={HandleSave} title= \"Download File\">\n                                            \n\n                                            <FontAwesomeIcon icon={faFileDownload} />\n\n\n                                            </Button> */}\n                                           \n                    \n                                            <Button className = \"btn\"  \n                                            style={{backgroundColor:\"none\"}}  onClick={()=>{\n                                                if(widthh === null)\n                                                {\n                                                    alert(\"Please Enter Width and Length First\")\n                                                }\n                                                else{\n                                                const canv = document.getElementById(\"canvas\");\n                                                const ctx = canv.getContext('2d')\n                                                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                                                setElements([]);\n                                                setMyVar([]);\n                                                item = 0;\n                                                totalLayer = 0;\n                                                }}} \n                                                title = \"Clear All\">\n                                                \n                                                <FontAwesomeIcon icon={faTrashAlt}/>\n                                            </Button>\n                    \n                                            \n                                        </ButtonGroup>\n\n                                    </div>\n                                    </div>\n                                    </div>\n)}\n\n\n    <div className=\"row\">\n\n    <div class=\"col-md-4\" style ={{padding:\"2em\"}}>\n    \n\n        {selectedElement === null ? (\n\n            <div>\n                <InputLabel htmlFor=\"input-with-icon-adornment\">Current selected element is : </InputLabel>\n                    <Input\n                        value  = \"No element is selected\"\n                        readOnly\n                        startAdornment={\n                        <InputAdornment position=\"start\">\n                        </InputAdornment>\n                        }\n                        />\n            </div>\n    ) : \n\n    <div>\n        <InputLabel htmlFor=\"input-with-icon-adornment\">Current selected element is : </InputLabel>\n\n        <Input\n\n            value  =  {selectedElement.type === \"rectangle\" ? (\n                \"Room\"            \n                ) : \n            selectedElement.type === \"line\" ? (\n                \"Wall\"\n                ) : \n            selectedElement.type === \"ellipse\" ? (\n                \"Ellipse Shape Room\"\n                ) :\n            selectedElement.type === \"arcL\" ? (\n                \"Door Left\"\n                ) : \n            selectedElement.type === \"arcR\" ? (\n                \"Door Right\"\n                ) : \n            selectedElement.type === \"circle\" ? (\n                \"Circular Room\"\n                ) : (\"\")\n\n            }  \n            \n            readOnly\n            startAdornment={\n                <InputAdornment position=\"start\">\n\n                </InputAdornment>\n                }\n        />\n    </div>\n\n}\n\n<InputLabel htmlFor=\"input-with-icon-adornment\">Your current Width is : </InputLabel>\n    <Input\n        value  = {canvWidth / 15.36 } \n        type=\"number\"\n        step=\".01\"\n        readOnly\n        startAdornment={\n            <InputAdornment position=\"start\">\n\n            </InputAdornment>\n        }\n    />\n\n\n<InputLabel htmlFor=\"input-with-icon-adornment\">Your current Length is : </InputLabel>\n    <Input\n        value  = {canvHeight / 15.36 } \n        type=\"number\"\n        step=\".01\"\n        readOnly\n        startAdornment={\n            <InputAdornment position=\"start\">\n\n            </InputAdornment>\n        }\n    />\n\n\n<div>\n    <InputLabel htmlFor=\"input-with-icon-adornment\">Element current Width is : </InputLabel>\n        <Input\n            value  = {  Math.abs(ElementWidth)   / 15.36 } \n            type=\"number\"\n            step=\".01\"\n            readOnly\n            startAdornment={\n            <InputAdornment position=\"start\">\n\n            </InputAdornment>\n            }\n        />\n</div>\n\n\n\n<div>\n    <InputLabel htmlFor=\"input-with-icon-adornment\">Element current Length is : </InputLabel>\n        <Input\n            value  = {\n                (   Math.abs(ElementLength)   )   /   15.36 }\n                type=\"number\"\n                step=\".01\"\n                readOnly\n                startAdornment={\n                <InputAdornment position=\"start\">\n\n                </InputAdornment>\n                }\n        />\n</div>\n\n<div>\n    <InputLabel htmlFor=\"input-with-icon-adornment\">Element's Wall current width is : </InputLabel>\n        <Input\n            value  = {\n                (   Math.abs(ElementStrokeWidth)   )   }\n                type=\"number\"\n                step=\".01\"\n                readOnly\n                startAdornment={\n                <InputAdornment position=\"start\">\n\n                </InputAdornment>\n                }\n        />\n</div>\n\n\n\n{error ? (\n\n<div>\n   <h3>Values must be valid</h3>\n\n</div>\n) :  \n\n(\"\")\n\n}\n\n{/* <Button onClick={()=>setState2({ ...state2, [\"right\"]: true })}>Open</Button> */}\n\n\n{loading ? (\n\n<div className=\"container\">\n  \n   <Spin style={{width:'100%' , marginTop: '20%' , marginBottom:'20%'}} />\n\n</div>\n) :  \n\n(\"\")\n\n}        \n</div>\n\n\n\n\n                                \n                            <div className = \"col-md-8\">\n\n                                <div\n                                    >\n                                        \n                                        <canvas\n                                            style = {{\n                                                background:bgColor , \n                                                border : \"5px solid darkslategrey\" , \n                                                marginTop : \"3%\" , marginBottom : \"3%\"}}\n                    \n                                            width = {canvWidth}\n                                            height = {canvHeight}\n                                            id = \"canvas\"\n                                            onMouseDown={handleMouseDown}\n                                            onMouseUp={handleMouseUp}\n                                            onMouseMove={handleMouseMove}\n\n                                            onTouchStart={handleMouseDown}\n                                            onTouchEnd={handleMouseUp}\n                                            onTouchMove={handleMouseMove}\n\n                                            >\n                                            Canvas\n                                        </canvas>\n\n\n                                        <canvas\n                                        hidden\n                                            style = {{\n                                                background:bgColor , \n                                                border : \"5px solid darkslategrey\" , \n                                                marginTop : \"3%\" , marginBottom : \"3%\"}}\n                    \n                                            width = {canvWidth}\n                                            height = {canvHeight}\n                                            id = \"canvas2\"\n\n                                            >\n                                            Canvas\n                                        </canvas>\n                \n                                </div>\n                            </div>\n                            </div>\n                            </div>\n                            \n                    );\n            }\n\nexport default App;","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\contact.js",["699","700","701","702","703","704"],"C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\submitted.js",[],"C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\About.js",["705","706","707","708","709","710","711","712"],"C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\helper\\responsive.js",[],"C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\helper\\nav.js",["713","714","715","716","717","718","719","720","721","722","723"],"\nimport { useHistory } from 'react-router'\nimport '../css/App.css';\nimport { Button, withStyles } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Badge from \"@material-ui/core/Badge\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\n// import Cookie from \"js-cookie\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport UserServices from \"../services/UserServices\";\n// import searchProduct from \"./actions/search\";\nimport logo from '../img/logo2.png'\n\n\n\nconst StyledBadge = withStyles((theme) => ({\n    badge: {\n        right: -3,\n        top: 13,\n\n        padding: \"0 4px\",\n    },\n}))(Badge);\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        display: \"none\",\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"block\",\n        },\n    },\n\n    link: {\n        color: \"white\",\n        paddingRight: \"1rem\",\n\n        textDecoration: \"none\",\n        marginTop: \".5rem\",\n        fontFamily: \"ubuntu\",\n    },\n    search: {\n        position: \"relative\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n            marginLeft: theme.spacing(3),\n            width: \"auto\",\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    inputRoot: {\n        color: \"inherit\",\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: \"20ch\",\n        },\n    },\n    sectionDesktop: {\n        display: \"none\",\n        [theme.breakpoints.up(\"md\")]: {\n            display: \"flex\",\n        },\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    sectionMobile: {\n        display: \"flex\",\n        [theme.breakpoints.up(\"md\")]: {\n            display: \"none\",\n        },\n    },\n}));\n\nexport default function TopMenu() {\n\n    \n    const history = useHistory();\n\n    const reRender = (e) => {\n\n        history.go(0);\n    }\n\n\n    const [search, setSearch] = React.useState(\"\");\n    // const cart = useSelector((state) => state.cart);\n    // const { cartItems } = cart;\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n    // const dispatch = useDispatch();\n\n    // const searchHandler = () => {\n    //     dispatch(searchProduct(search));\n    // };\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const [anchorE2, setAnchorE2] = React.useState(null);\n                    const handleClick = (event) => {\n\n                        setAnchorE2(event.currentTarget);\n\n                    };\n\n                    const handleClose = () => {\n                        setAnchorE2(null);\n                    };\n\n    const menuId = \"primary-search-account-menu\";\n\n    const mobileMenuId = \"primary-search-account-menu-mobile\";\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                {\" \"}\n                <Typography variant=\"h6\">\n                    <Link to=\"/\" className={classes.link} style={{ color: \"black\" }} onClick={reRender}>\n                        Home\n                    </Link>\n                </Typography>\n            </MenuItem>\n            <MenuItem>\n                <Typography variant=\"h6\">\n                    <Link\n                        to=\"/sketch\"\n                        className={classes.link}\n                        style={{ color: \"black\" }}\n                        // onClick={reRender} \n                        >\n                        Sketch App\n                    </Link>\n                </Typography>\n            </MenuItem>\n\n            <MenuItem>\n                {\" \"}\n                <Typography variant=\"h6\">\n                    <Link\n                        to=\"/contact-us\"\n                        className={classes.link}\n                        style={{ color: \"black\" }}\n                        // onClick={reRender}\n                        >\n                        Contact us\n                    </Link>\n                </Typography>\n            </MenuItem>\n\n            <MenuItem>\n                {\" \"}\n                <Typography variant=\"h6\">\n                    <Link\n                        to=\"/about\"\n                        className={classes.link}\n                        style={{ color: \"black\" }}\n                        // onClick={reRender}\n                        >\n                        About us\n                    </Link>\n                </Typography>\n            </MenuItem>\n\n           \n\n            {UserServices.isLoggedin\n                ? UserServices.getLoggedinfo().role === \"admin\" && (\n                <MenuItem>\n                    <Link to=\"/dashboardA\" className={classes.link}> \n                        <Button\n                            color=\"secondary\"\n                            style={{\n                                color: \"black\",\n                                backgroundColor: \"#FEBD69\",\n                                textDecoration: \"none\",\n                                paddingLeft: \"1rem\",\n                                paddingRight: \"1rem\",\n                            }}\n                        >\n                            Admin\n                        </Button>\n                    </Link>\n                </MenuItem>\n            )\n                : \"\"}\n\n            {!UserServices.isLoggedin ? (\n                <>\n                    <MenuItem>\n                        <Link to=\"/login\" className={classes.link}>\n                            <Button\n                                color=\"secondary\"\n                                style={{\n                                    color: \"black\",\n                                    backgroundColor: \"#FEBD69\",                                    textDecoration: \"none\",\n                                    paddingLeft: \"1rem\",\n                                    paddingRight: \"1rem\",\n                                }}\n                            >\n                                Login\n                            </Button>\n                        </Link>\n                    </MenuItem>\n                    <MenuItem>\n                        <Link to=\"/signup\" className={classes.link}>\n                            <Button\n                                color=\"secondary\"\n                                style={{\n                                    color: \"black\",\n                                    backgroundColor: \"#FEBD69\",\n                                    textDecoration: \"none\",\n                                    paddingLeft: \"1rem\",\n                                    paddingRight: \"1rem\",\n\n                                    marginLeft: \"0.1rem\",\n                                }}\n                            >\n                                Sign up\n                            </Button>\n                        </Link>\n                    </MenuItem>\n                </>\n            ) : (\n                <MenuItem>\n                    <Link className={classes.link}>\n                        <Button\n                            color=\"secondary\"\n                            style={{\n                                color: \"black\",\n                                backgroundColor: \"#FEBD69\",\n                                textDecoration: \"none\",\n                                paddingLeft: \"1rem\",\n                                paddingRight: \"1rem\",\n\n                                marginLeft: \"0.1rem\",\n                            }}\n                            onClick={UserServices.logout}\n                        >\n                            Logout\n                        </Button>\n                    </Link>\n                </MenuItem>\n            )}\n\n{UserServices.isLoggedin && ( \n                                <>\n                                {/*  */}\n                           \n                                <Button \n                                aria-controls=\"simple-menu\" \n                                aria-haspopup=\"true\" \n                                onClick={handleClick}>\n                                <Typography style = {{color : \"black\"}}> {UserServices.getLoggedinfo().name} <AccountCircle /> </Typography>\n                            </Button>\n\n                                <Menu\n                                    id=\"simple-menu\"\n                                    anchorEl={anchorEl}\n                                    keepMounted\n                                    open={Boolean(anchorE2)}\n                                    onClose={handleClose}\n                                    >\n<Link to='/dashboardB' style={{ textDecoration: 'none' }}>\n                                    <MenuItem  \n                                        onClick={() => { \n                                                        setAnchorE2(null);} }\n                                        >\n                                        Dashboard\n                                    </MenuItem>\n                                    </Link>\n                                   \n\n                                    <MenuItem \n                                        onClick={UserServices.logout}>\n                                        Logout\n                                    </MenuItem>\n\n                                </Menu>\n                                </>\n                           ) }\n\n        </Menu>\n    );\n\n    return (\n        <div className={classes.grow}>\n\n            <AppBar\n                position=\"static\"\n                style={{\n                    backgroundColor: \"#232F3E\",\n                    textAlign: \"center\",\n                    justifyContent: \"center\",\n                }}\n            >\n                <Toolbar>\n                    {/*<Typography className={classes.title} variant=\"h6\" noWrap>*/}\n                    {/*    <Link className={classes.link} to=\"/\" style={{ color: \"#FEBD69\" }}>*/}\n                    {/*        Expotech*/}\n                    {/*    </Link>*/}\n                    {/*</Typography>*/}\n                    {/*<div className={classes.search}>*/}\n                    {/*    <InputBase*/}\n                    {/*        placeholder=\"Search the Store\"*/}\n                    {/*        classes={{*/}\n                    {/*            root: classes.inputRoot,*/}\n                    {/*            input: classes.inputInput,*/}\n                    {/*        }}*/}\n                    {/*        inputProps={{ \"aria-label\": \"search\" }}*/}\n                    {/*        onChange={(e) => {*/}\n                    {/*            setSearch(e.target.value);*/}\n                    {/*        }}*/}\n                    {/*    />*/}\n                    {/*</div>*/}\n                    {/*/!*<Button*!/*/}\n                    {/*    style={{*/}\n                    {/*        backgroundColor: \"#FEBD69\",*/}\n                    {/*        borderRadius: \"0rem .5rem .5rem 0rem\",*/}\n                    {/*        padding: \".3rem\",*/}\n                    {/*        marginLeft: \"-15px\",*/}\n                    {/*    }}*/}\n                    {/*    onClick={() => {*/}\n                    {/*        searchHandler();*/}\n                    {/*    }}*/}\n                    {/*>*/}\n                    {/*    <SearchIcon />*/}\n                    {/*</Button>*/}\n                    <Link to=\"/\" className={classes.link}>\n                    <img src = {logo} width=\"auto\" height = \"5%\" className = \"App-logo\"/>\n                    </Link>\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        <Typography variant=\"h6\">\n                            <Link to=\"/\" className={classes.link}>\n                              Home\n                            </Link>\n                        </Typography>\n                        <Typography variant=\"h6\">\n                            <Link to=\"/sketch\" className={classes.link} \n                            // onClick={reRender}\n                            >\n                                Sketch App\n                            </Link>\n                        </Typography>\n\n                        <Typography variant=\"h6\">\n                            <Link to=\"/contact-us\" className={classes.link} \n                            // onClick={reRender}\n                            >\n                                Contact us\n                            </Link>\n                        </Typography>\n\n                        <Typography variant=\"h6\">\n                            <Link to=\"/about\" className={classes.link} \n                            // onClick={reRender}\n                            >\n                                About us\n                            </Link>\n                        </Typography>\n\n                        {UserServices.isLoggedin\n                            ? \n                            UserServices.getLoggedinfo().role === \"admin\" && \n                            (\n                            <Link to=\"/dashboardA\" className={classes.link}>\n                                <Button\n                                    color=\"secondary\"\n                                    style={{\n                                        color: \"black\",\n                                        backgroundColor: \"#C0C0C0\",\n                                        textDecoration: \"none\",\n                                        paddingLeft: \"1rem\",\n                                        paddingRight: \"1rem\",\n                                    }}\n                                >\n                                    Admin\n                                </Button>\n                            </Link>\n                        )\n                            : \"\"}\n\n                        {!UserServices.isLoggedin ? (\n                            <>\n                                <Link to=\"/login\" className={classes.link}>\n                                    <Button\n                                        color=\"secondary\"\n                                        style={{\n                                            color: \"black\",\n                                            backgroundColor: \"#C0C0C0\",\n                                            textDecoration: \"none\",\n                                            paddingLeft: \"1rem\",\n                                            paddingRight: \"1rem\",\n                                        }}\n                                    >\n                                        Login\n                                    </Button>\n                                </Link>\n\n                                <Link to=\"/signup\" className={classes.link}>\n                                    <Button\n                                        color=\"secondary\"\n                                        style={{\n                                            color: \"black\",\n                                            backgroundColor: \"#C0C0C0\",\n                                            textDecoration: \"none\",\n                                            paddingLeft: \"1rem\",\n                                            paddingRight: \"1rem\",\n\n                                            marginLeft: \"0.1rem\",\n                                        }}\n                                    >\n                                        Subscribe\n                                    </Button>\n                                </Link>\n                            </>\n                        ) : (\n                            <Link className={classes.link}>\n                                <Button\n                                    color=\"secondary\"\n                                    style={{\n                                        color: \"black\",\n                                        backgroundColor: \"#C0C0C0\",\n                                        textDecoration: \"none\",\n                                        paddingLeft: \"1rem\",\n                                        paddingRight: \"1rem\",\n                                        marginLeft: \"0.1rem\",\n\n                                    }}\n                                    onClick={UserServices.logout}\n                                    \n                                >\n                                    Logout\n                                </Button>\n                            </Link>\n                        )}\n\n                        {/* <IconButton\n                            aria-label=\"cart\"\n                            color=\"inherit\"\n                            onClick={() => {\n                                window.location.href = \"/cart/\";\n                            }}\n                        >\n                            <StyledBadge\n                                badgeContent={cartItems.reduce((a, c) => a + Number(c.qty), 0)}\n                                color=\"secondary\"\n                            >\n                                <ShoppingCartIcon />\n                            </StyledBadge>\n                        </IconButton> */}\n\n                        <IconButton\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            {UserServices.isLoggedin && ( \n                                <>\n                                {/*  */}\n                           \n                                <Button \n                                aria-controls=\"simple-menu\" \n                                aria-haspopup=\"true\" \n                                onClick={handleClick}>\n                                <Typography> {UserServices.getLoggedinfo().name} <AccountCircle /> </Typography>\n                            </Button>\n\n                                <Menu\n                                    id=\"simple-menu\"\n                                    anchorEl={anchorEl}\n                                    keepMounted\n                                    open={Boolean(anchorE2)}\n                                    onClose={handleClose}\n                                    >\n<Link to='/dashboardB' style={{ textDecoration: 'none' }}>\n                                    <MenuItem  \n                                        onClick={() => { \n                                                        setAnchorE2(null);} }\n                                        >\n                                        Dashboard\n                                    </MenuItem>\n                                    </Link>\n                                    \n\n                                    <MenuItem \n                                        onClick={UserServices.logout}>\n                                        Logout\n                                    </MenuItem>\n\n                                </Menu>\n                                </>\n                           ) }\n\n                             \n                        </IconButton> \n                    </div>\n\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu} \n        </div>\n\n    );\n}","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\admin\\Dashboard.js",["724","725","726","727","728","729","730","731","732","733","734"],"C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\helper\\footer.jsx",["735","736","737","738","739","740","741"],"import {makeStyles} from \"@material-ui/core/styles\";\nimport {BrowserRouter as Router, Link, Route, Switch} from \"react-router-dom\";\nimport AnimatedButton from '@bit/tabinda.react-button-animation.animated.button';\nimport '../css/footer.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery/dist/jquery.min.js'\nimport 'bootstrap/dist/js/bootstrap.min.js'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faFacebook } from \"@fortawesome/free-brands-svg-icons\";\nimport {faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport {faInstagram } from \"@fortawesome/free-brands-svg-icons\";\nimport {faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\nimport {faMap } from \"@fortawesome/free-solid-svg-icons\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ScrollToTop from \"react-scroll-up\"\n\nfunction Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"inherit\" align=\"center\">\n        {\"Copyright © \"}\n        <Link color=\"inherit\" to=\"https://uol.edu.pk/\">\n        Aoo Ghr Bnain (Built by Students of UOL)\n        </Link>{\" \"}\n        {new Date().getFullYear()}\n        {\".\"}\n      </Typography>\n    );\n  }\n\nfunction Footer (){\n\n\n    return(\n\n\n<footer id=\"dk-footer\" class=\"dk-footer\">\n\n{/* <script crossorigin src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script> */}\n\n        <div class=\"container\">\n            <div class=\"row\">\n\n                <div class=\"col-md-12 col-lg-4\" style={{marginTop : \"15%\"}}>\n                    <div class=\"dk-footer-box-info\">\n                    <Link to=\"/\" style={{textDecoration: 'none' }} >\n                            <img src=\"https://cdn.pixabay.com/photo/2016/11/07/13/04/yoga-1805784_960_720.png\" alt=\"footer_logo\" class=\"img-fluid\"/>\n                        </Link>\n                        <p class=\"footer-info-text\">\n                        We are here for you 24/7 , 24 hours and 7 days a week.\n                        We will be glad to know from you about our product.\n                        Simply give us your feed back. \n                        </p>\n                        <div class=\"footer-social-link\">\n                            <h3 style={{textDecoration : 'underline'}}>Connect</h3>\n                            <ul>\n                                <li>\n                                    <a>\n                                        <FontAwesomeIcon icon={faFacebook} style={{fontSize:24 , margin : 10 , color: '#3B5998'}}\n                                        onClick={() =>    window.location.href = 'https://www.facebook.com/University.Lahore/'\n                                    }/>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a>\n                                    <FontAwesomeIcon icon={faTwitter} style={{fontSize:24, margin : 10 , color: '#55ACEE'}}\n                                    onClick={() =>    window.location.href = 'https://twitter.com/ULahore?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor'\n                                }/>\n                                    </a>\n                                </li>\n                                \n                                <li>\n                                    <a>\n                                    <FontAwesomeIcon icon={faInstagram} style={{fontSize:24, margin : 10 , color: '#B7242A' }}\n                                    onClick={() =>    window.location.href = 'https://www.instagram.com/ulahore/?hl=en'\n                                      }/>\n                                    </a>\n                                </li>\n                            </ul>\n                        </div>\n                        \n                    </div>\n                \n                    <div class=\"footer-awarad\">\n                        \n                        <p>The University of Lahore</p>\n                </div>\n                </div>\n                \n                <div class=\"col-md-12 col-lg-8\" style={{marginTop: '10%' }}>\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <div class=\"contact-us\">\n                                <div class=\"contact-icon\">\n                                    <FontAwesomeIcon icon={faMap} />\n                                </div>\n                            \n                                <div class=\"contact-info\">\n                                    <h3>The University of Lahore (Students)</h3>\n                                    <p>Defence Road Campus</p>\n                                </div>\n                                \n                            </div>\n                        \n                        </div>\n                        \n                        {/* <div class=\"col-md-6\">\n                            <div class=\"contact-us contact-us-last\">\n                                <div class=\"contact-icon\">                                   \n                                    <FontAwesomeIcon icon={faEnvelope}/>\n                                </div>\n                            \n                                <div class=\"contact-info\">\n                                    <h3>95 711 9 5353</h3>\n                                    <p>Give us a call</p>\n                                </div>\n                                \n                            </div>\n                        \n                        </div> */}\n                        \n                    </div>\n                    \n                    <div class=\"row\">\n                        <div class=\"col-md-12 col-lg-6\">\n                            <div class=\"footer-widget footer-left-widget\">\n                                <div class=\"section-heading\">\n                                    <h3>Useful Links</h3>\n                                    <span class=\"animate-border border-black\"></span>\n                                </div>\n                                <ul>\n                                    <li>\n                                    <Link to=\"/about\" style={{textDecoration: 'none' }} >About us</Link>\n                                    </li>\n                                    <li>\n                                    <Link to=\"/sketch\" style={{textDecoration: 'none' }} >Services</Link>\n                                    </li>\n                                   \n                                </ul>\n                                <ul>\n                                <li>\n                                    <Link to=\"/contact-us\" style={{textDecoration: 'none' }} >Contact Us</Link>\n                                    </li>\n                                    \n                                </ul>\n                            </div>\n                            \n                        </div>\n                        \n                        <div class=\"col-md-12 col-lg-6\">\n                            <div class=\"footer-widget\">\n                                <div class=\"section-heading\">\n                                    <h3>Subscribe</h3>\n                                    <span class=\"animate-border border-black\"></span>\n                                </div>\n                                <p>\n                                We are offering features which will be valuable to you. Please subscribe to enjoy them.</p>\n                                \n                                    <div class=\"form-row\">\n                                        <div class=\"col dk-footer-form\">\n                                            <Link to=\"/signup\" style={{textDecoration: 'none' }} >\n                                                <AnimatedButton style={{ marginTop: '20%' , align : 'center' }} label =    \"Subscribe\"/>\n                                                    </Link>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n        \n\n\n        <div class=\"copyright\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <span><Copyright /></span>\n                    </div>\n                    \n                    <div class=\"col-md-6\">\n                        <div class=\"copyright-menu\">\n                            <ul>\n                                <li>\n                                <Link to=\"/\" style={{textDecoration: 'none' }} >Home</Link>\n                                </li>          \n                                <li>\n                                <Link to=\"/contact-us\" style={{textDecoration: 'none' }} >Contact</Link>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                    \n                </div>\n                \n            </div>\n        \n        </div>\n\n        <ScrollToTop showUnder={200}>\n                \n        <div id=\"back-to-top\" class=\"back-to-top\">\n            <button class=\"btn btn-dark\" title=\"Back to Top\" style={{display: 'block'}}\n                  onClick={() =>    window.scroll({\n                    top: 0, \n                    left: 0, \n                    behavior: 'smooth'\n                  })\n                  }>\n                <FontAwesomeIcon icon={faAngleUp} />\n            </button>\n        </div>\n\n        </ScrollToTop>\n        \n</footer>\n\n\n\n)\n}\n\nexport default Footer;","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\services\\UserServices.js",[],"C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\sketchHelper\\TabPanel.js",[],"C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\services\\GenericServices.js",[],"C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\sketchHelper\\toggleDrawer.js",[],"C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\sketchHelper\\isWithinElement.js",[],"C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\sketchHelper\\handleSave.js",["742","743","744","745","746","747","748","749","750"],"import {saveAs} from 'file-saver';\nimport {saveLayer} from '../sketch';\nimport {myVar} from '../sketch'\nimport { jsPDF } from \"jspdf\";\nimport {marla , totalLayer} from \"../sketch\"\n\nimport {canvWidth , canvHeight} from \"../sketch\"\n\nimport rough from 'roughjs/bundled/rough.esm';\nimport 'jspdf-autotable'\nimport foundation from \"../img/1.jpg\";\n\n\n\nexport function HandleSave() {\n\n    saveLayer();\n\n    const canvas = document.getElementById(\"canvas\");\n    const context = canvas.getContext('2d');\n\n    const canvas2 = document.getElementById(\"canvas2\");\n    const ctx  = canvas2.getContext('2d');\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    ctx.fillStyle = \"black\";\n    ctx.font = \"bold 16px Arial\";\n    ctx.fillText(\"Aoo Ghr Bnain\" , (canvas2.width / 2) - 17, (canvas2.height / 2) + 8);\n\n    // canvas.toBlob(function (blob) {\n    //     saveAs(blob, \"pretty image.png\")\n\n    // });\n\n    console.log(myVar.length)\n\n    \n    var doc = new jsPDF('l', 'mm', [420, 297]);\n\n    var title = prompt(\"House Plot No.\").toString()\n    var title1 = prompt(\"Khasr No.\").toString()\n    var title2 = prompt(\"Khewat No.\").toString()\n    var title3 = prompt(\"Khatoni No.\").toString()\n    var title4 = prompt(\"Town\").toString()\n    var title5 = prompt(\"Address\").toString()\n    var title6 = prompt(\"Owner\").toString()\n    var title7 = prompt(\"S/O or D/O or W/O\").toString()\n    \n    var north = prompt(\"North... Only Enter U for upper, L for lower, R for right, Le for left\").toString()\n    \n    var title8 = \"Scale : 1\\\" = 15.32 ... This is computer generated Scale. Don't worry about it.\"\n    \n    doc.setFont(\"san-serif\", 'bold')\n    doc.setFont(\"san-serif\", 'underline')\n\n    doc.text(\"PROPOSED PLAN OF HOUSE PLOT NO. \" + title+ \"\\n\" +\"KHASR NO. \"+ title1+ \"\\n\" +\"KHEWAT NO. \"+ title2 + \"        KHATONI NO. \" +title3+ \"\\n\" + title4+ \"\\n\" + title5 + \"\\n\" + title6+ \"\\n\" +\"S/O OR D/O OR W/O \"+ title7+ \"\\n\" + title8+ \"\\n\" , 10, 10);\n    \n    if(north == \"U\"){\n        doc.setFont(\"san-serif\", 'bold','25')\n        doc.text(\" ^ North is Up ^ \",50, 70)\n\n    }\n    else if(north == \"L\"){\n        doc.setFont(\"san-serif\", 'bold','25')\n        doc.text(\" __ North is Down __ \",50, 70)\n    }\n    else if(north == \"R\"){\n        doc.setFont(\"san-serif\", 'bold','25')\n        doc.text(\"North is Right  -->\",50, 70)\n    }\n    else if(north == \"Le\"){\n        doc.setFont(\"san-serif\", 'bold','25')\n        doc.text(\"<-- North is Left\" ,50, 70)\n    }\n    \n   \n    \n    let estimatess1totall = 0;\n    let estimatess2totall = 0;\n\n    \n\n            for(var k = 0; k < myVar.length; k++) {\n\n                var Data = myVar[k];\n\n                // for(var m = 0; m < Data.length; m++) {\n\n                    // ctx.clearRect(0, 0, canvas.width, canvas.height);\n                    ctx.beginPath();\n                    ctx.rect(0, 0, canvas2.width, canvas2.height);\n                    ctx.stroke();\n                \n                    const roughCanvas2 = rough.canvas(canvas2);\n                    Data.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n\n                    var imgData =  canvas2.toDataURL(\n                        'image/png');      \n                        \n                        canvas2.toBlob(function (blob) {\n                            saveAs(blob, \"pretty image.png\")\n    \n                        });\n                    \n                    doc.addImage(imgData, 'PNG', 10, 80);\n                    ctx.clearRect(0, 0, canvas.width, canvas.height);\n                    doc.addPage();\n\n                    for(var m = 0; m < Data.length; m++) {\n\n                    estimatess1totall = estimatess1totall + (Math.abs((Data[m].x2-Data[m].x1))  / 15.36);\n                    estimatess2totall = estimatess2totall + (Math.abs((Data[m].y2-Data[m].y1))  / 15.36);\n\n                }\n\n            }\n\n            var myWid = (canvWidth / 15.36).toString();\n\n            var myHt = (canvHeight / 15.36).toString();\n            \n\n            // const roughCanvas2 = rough.canvas(canvas2);\n            // elements.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n\n            // var imgData =  canvas2.toDataURL(\n            //     'image/png');          \n            \n            // doc.addImage(imgData, 'PNG', 10, 10);\n\n            \n\n            var covered = estimatess2totall * estimatess1totall\n            var floor = totalLayer + 1;\n            var total = parseInt(myWid) * parseInt(myHt) * floor\n\n            console.log(total)\n\n            doc.text(\"Area Detail (As you have created \" + floor + \" Floors. The total area will be calculated as ...)\", 10, 10)\n\n            if(total - covered < 0){\n              var body = [[\"You\" , \"Have Created\" , \"Maximum\"]]\n            }\n            else{\n\n            var body = [[covered , total - covered , total]]\n            }\n            doc.autoTable({\n              margin : {\n                right : 200\n           }\t,\n              head: [['Covered Area Feet', 'Open Feet', 'Total Feet']],\n              body: \n                body  ,\n            \n            })\n            doc.text(\"Land : \", 250, 50)\n\n            var myMarla = marla.toString()\n            \n            // console.log(myMarla)\n\n            // myWid.toString();\n            // myHt.toString();\n\n            doc.text(myMarla + \"  Marla \" + myWid + \" * \" + myHt + \" Feet \", 270, 50)\n\n          //   doc.autoTable({\n\n             \n\n          //     margin : {\n          //       right : 100\n          //  }\t,\n              \n          //     body: [\n          //       ['Floor', '10', 'Sweden'],\n          //       ['Castille', '10', 'Spain'],\n                \n          //     ],\n          //   })\n\n\n            doc.text(\"Foundation\", 230, 210)\n\n            doc.addImage(foundation, 'JPEG', 230, 220, 150, 76);\n            \n            doc.save('sample-file.pdf');\n\n\n            // doc.text(\"Hello world!\", 10, 10);\n            // doc.save(\"a4.pdf\");\n\n    alert(\"File Save Successfully\");\n    // //\n    //\n    // const writeJsonFile = require('write-json-file');\n    // const jsonFile = \"/tmp/exampleFile.json\";\n    // writeJsonFile(jsonFile,{canvas:true}).catch(err => console.log(err));\n    //\n\n\n\n\n}\n","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\sketchHelper\\handleMouseUp.js",[],"C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\sketchHelper\\handleMouseMove.js",["751","752","753","754","755","756"],"import {action, \n        setAction ,\n        elements, \n        getElementAtPosition, \n        mouse, \n        selectedElement, \n        tool,\n        setElementWidth , \n        setElementLength ,\n        wall,\n        setElementStrokeWidth } from \"../sketch\";\nimport {updateElement} from \"./updateElement\";\n\nexport const handleMouseMove = (event) => {\n    // const {clientX, clientY} = event;\n\n    let bounds = event.target.getBoundingClientRect();\n    mouse.x = event.pageX - bounds.left - window.scrollX;  // is window.scrollX same for Y\n    mouse.y = event.pageY - bounds.top - window.scrollY;\n\n    if(tool === \"selection\")\n    {\n        event.target.style.cursor = getElementAtPosition(mouse.x, mouse.y, elements)\n            ? \"move\" : \"default\";\n    }\n\n    if(tool === \"text\")\n    {\n        event.target.style.cursor = getElementAtPosition(mouse.x, mouse.y, elements)\n            ? \"text\" : \"default\";\n    }\n\n    if(tool === \"eraser\")\n    {\n        event.target.style.cursor = getElementAtPosition(mouse.x, mouse.y, elements)\n            ? \"move\" : \"default\";\n    }\n    if(tool === \"resize\")\n    {\n        event.target.style.cursor = getElementAtPosition(mouse.x, mouse.y, elements)\n            ? \"resize\" : \"default\";\n    }\n    // if(tool === \"rectangle\" || tool ===\"circle\" || tool ===\"wall\" || tool ===\"arcL\" ||\n    //     tool ===\"arcR\" || tool ===\"ellipse\"){\n    //\n    //     event.target.style.cursor = getCvsAtPosition(canvas.getBoundingClientRect().width , canvas.getBoundingClientRect().height, elements)\n    //         ? \"crosshair\" : \"default\";\n    // }\n\n    if(action === \"drawing\") {\n        const index = elements.length - 1;\n        const {x1,y1} = elements[index];\n        const sWidth = wall\n        updateElement(index, x1 , y1 , mouse.x, mouse.y , tool , sWidth);\n\n    }\n    else if (action === \"moving\")\n    {\n        const {id , x1, x2, y1, y2 , type , offsetX, offsetY} = selectedElement;\n        const sWidth = selectedElement.roughElement.options.strokeWidth\n        const width = x2-x1;\n        const height = y2-y1;\n        const nexX1 = mouse.x- offsetX;\n        const nexY1 = mouse.y - offsetY;\n\n        // type.scale(mouse.x , mouse.y);\n\n        updateElement(id, nexX1, nexY1, nexX1 + width, nexY1 + height, type , sWidth);\n        \n    }\n    else if (action === \"eraser\")\n    {\n        const {id , x1, x2, y1, y2 , type , offsetX, offsetY} = selectedElement;\n        const width = x2-x1;\n        const height = y2-y1;\n        const nexX1 = mouse.x- offsetX;\n        const nexY1 = mouse.y - offsetY;\n\n        // type.scale(mouse.x , mouse.y);\n\n        updateElement(id, nexX1, nexY1, nexX1 + width, nexY1 + height, null);\n    }\n\n    else if (action === \"resize\")\n    {\n        const {id , x1, x2, y1, y2 , type , offsetX, offsetY} = selectedElement;\n        const sWidth = selectedElement.roughElement.options.strokeWidth\n        const width = x2-x1;\n        const height = y2-y1;\n        const nexX1 = mouse.x- offsetX;\n        const nexY1 = mouse.y - offsetY;\n\n        alert(\"Your previous Width was \" + width / 15.36)\n\n        alert(\"Your previous length was \" + height / 15.36)\n        \n        alert(\"Please Note that this will be your Internal Dimensions. We will minus walls area automatically. Thanks For your inconvenience !!!\")\n\n        const newx1 = prompt(\"Your previous x-axis was \" + x1 + \" Enter x-axis \")\n        // const newx2 = prompt(\"Your previous width was \" + x2 + \" Enter x2 \")\n        let newWidth = prompt(\"Your previous width was \" + width / 15.36 + \"Feet. Enter new Width in feet \")\n        newWidth = newWidth * 15.45\n        // newWidth = newWidth - newx1\n        \n        const newy1 = prompt(\"Your previous y-axis was \" + y1 + \" Enter y-axis \")\n        // const newy2 = prompt(\"Your previous y2 was \" + y2 + \" Enter y2 \")\n        let newHeight = prompt(\"Your previous height was \" + height / 15.36 + \"Feet. Enter new height in feet \")\n        newHeight = newHeight * 15.45\n        // newHeight = newHeight - newy1\n       \n        // type.scale(mouse.x , mouse.y);\n\n        if(newx1 && newWidth && newy1 && newHeight)\n        {\n        // updateElement(id, newx1, newy1, newx2, newy2, type, sWidth);\n        updateElement(id, newx1, newy1, newWidth , newHeight, type, sWidth);\n\n        }\n        else{\n            updateElement(id, nexX1, nexY1, nexX1 + width, nexY1 + height, type, sWidth);\n        }\n        setAction(\"selection\")\n\n        alert(\"Now Consider clicking on selection tool and then the line which is shown to draw your re - factor sketch and think to move your cursor slightly\")\n    }\n\n    else if (action === \"sizes\")\n    {\n        const {id , x1, x2, y1, y2 , type , offsetX, offsetY, strokeWidth} = selectedElement;\n        const width = x2-x1;\n        const height = y2-y1;\n        const nexX1 = mouse.x- offsetX;\n        const nexY1 = mouse.y - offsetY;\n\n        // type.scale(mouse.x , mouse.y);\n\n        setElementWidth(width);\n        setElementLength(height); \n        \n        // console.log(selectedElement)\n        setElementStrokeWidth(selectedElement.roughElement.options.strokeWidth)\n    }\n\n};","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\sketchHelper\\handleMouseDown.js",["757","758","759"],"C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\sketchHelper\\useStyles.js",[],"C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\scrapMe.jsx",["760","761"],"import React from 'react';\nimport axios from 'axios';\nimport {state , \n        setState  , \n        setPrice , \n        setTitle ,\n        setImage ,\n        setPrice2 , \n        setTitle2 ,\n        setImage2 ,\n        setPrice3 , \n        setTitle3 ,\n        setImage3 ,\n        setSteelPrice , \n        setSteelTitle ,\n        setSteelImage ,\n        setSteelPrice2 , \n        setSteelTitle2 ,\n        setSteelImage2 ,\n        setSteelPrice3 , \n        setSteelTitle3 ,\n        setSteelImage3 ,\n        setLoading,\n         } from \"./sketch\"\n\nexport const scrapMe = () => {\n\n    setLoading(true);\n    \n\n        axios.get('http://localhost:5000/scrap')\n            .then((res) => {\n\n                setLoading(false);\n                console.log(res.data)\n\n                setImage(res.data.products[0].image);\n                setPrice(res.data.products[0].price);\n                setTitle(res.data.products[0].title);\n\n                setImage2(res.data.products[1].image);\n                setPrice2(res.data.products[1].price);\n                setTitle2(res.data.products[1].title);\n\n                setImage3(res.data.products[2].image);\n                setPrice3(res.data.products[2].price);\n                setTitle3(res.data.products[2].title);\n\n            })\n                        \n            .catch(err => {\n                console.error(err.status);\n                alert(err.status);\n            },{\n                withCredentials: true,\n                headers: {'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json'\n            }});\n\n            axios.get('http://localhost:5000/scrapSteel')\n            .then((res) => {\n\n                // setLoading(false);\n                console.log(res)\n\n                setSteelImage(res.data.products[0].image);\n                setSteelPrice(res.data.products[0].price);\n                setSteelTitle(res.data.products[0].title);\n\n                setSteelImage2(res.data.products[1].image);\n                setSteelPrice2(res.data.products[1].price);\n                setSteelTitle2(res.data.products[1].title);\n\n                setSteelImage3(res.data.products[2].image);\n                setSteelPrice3(res.data.products[2].price);\n                setSteelTitle3(res.data.products[2].title);\n\n                console.log(res.data.products[0].image);\n                console.log(res.data.products[0].price);\n                console.log(res.data.products[0].title);\n\n                console.log(res.data.products[1].image);\n                console.log(res.data.products[1].price);\n                console.log(res.data.products[1].title);\n\n                console.log(res.data.products[2].image);\n                console.log(res.data.products[2].price);\n                console.log(res.data.products[2].title);\n\n            })\n                        \n            .catch(err => {\n                console.error(err.status);\n                alert(err.status);\n                \n            },{\n                withCredentials: true,\n                headers: {'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json'\n            }});\n\n            setState({ ...state, [\"bottom\"]: true });\n            document.getElementById(\"est\").click() ;\n\n        }\n","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\sketchHelper\\updateElement.js",[],"C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\sketchHelper\\createElement.js",["762"],"import rough from 'roughjs/bundled/rough.esm';\nimport {wall, setWall} from \"../sketch\";\n\nconst generator = rough.generator();\n\nexport function createElement(id, x1, y1, x2, y2 , type , sWidth){\n    const roughElement = type === \"line\"\n        ? generator.line(x1,y1,x2,y2, { roughness: 0 , strokeWidth: wall})\n\n        : type === \"rectangle\" ? generator.rectangle(x1, y1, x2-x1, y2-y1 , { roughness: 0 , strokeWidth: sWidth })\n\n            : type === \"ellipse\" ? generator.ellipse(x1, y1, x2-x1, y2-y1 , { roughness: 0 , strokeWidth: sWidth})\n\n                : type === \"arcL\" ? generator.arc(x1, y1, x2-x1, x2-x1 , Math.PI , Math.PI * 1.5, true ,  { roughness: 0 , strokeWidth: 3})\n\n                    : type === \"arcLB\" ? generator.arc(x1, y1, x2-x1, x2-x1 , Math.PI * 2.5 , Math.PI * 3.0 , true ,  { roughness: 0 , strokeWidth: 3})\n\n                        : type === \"arcR\" ? generator.arc(x1, y1, x2-x1, x2-x1 ,  Math.PI * 1.5 , Math.PI * 2.0, true ,  { roughness: 0 , strokeWidth: 3})\n\n                            : type === \"arcRB\" ? generator.arc(x1, y1, x2-x1, x2-x1 , Math.PI * 2.0 , Math.PI * 2.5, true ,  { roughness: 0 , strokeWidth: 3})\n                            \n                                : type === \"circle\" ? generator.circle(x1, y1, x2-x1,   { roughness: 0 , strokeWidth: sWidth}) :\n\n                                    \"\" ;\n\n\n    return {id, x1, y1, x2, y2, type , roughElement};\n\n}","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\auth\\addByAdmin.js",["763","764","765","766","767","768"],"import Avatar from \"@material-ui/core/Avatar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport UserServices from \"../services/UserServices\";\r\nimport PasswordStrengthBar from 'react-password-strength-bar';\r\nimport notAllowed from \"../img/not_allowed.jpg\"\r\nimport onlyAdmins from \"../img/only_admins.jpg\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const [name, setName] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n\r\n  return (\r\n    <>\r\n    {UserServices.isLoggedin\r\n                       ? UserServices.getLoggedinfo().role === \"admin\" && (\r\n    \r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n        Create Account\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"name\"\r\n                name=\"name\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"Full Name\"\r\n                autoFocus\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n                onKeyPress={event => {\r\n                  if (event.key === 'Enter') {\r\n                document.getElementById('save').click();\r\n                  }\r\n              }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                value={email}\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n                onKeyPress={event => {\r\n                  if (event.key === 'Enter') {\r\n                document.getElementById('save').click();\r\n                  }\r\n              }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={password}\r\n                onChange={(e) => {\r\n                  setPassword(e.target.value);\r\n\r\n                  \r\n                }}\r\n                onKeyPress={event => {\r\n                  if (event.key === 'Enter') {\r\n                document.getElementById('save').click();\r\n                  }\r\n              }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n                  <br></br>\r\n          <PasswordStrengthBar password={password} />\r\n\r\n          <Button\r\n          id = \"save\"\r\n            fullWidth\r\n            className={classes.submit}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={(e) => {\r\n              UserServices.register(name, email, password , \"admin\")\r\n                .then((data) => {\r\n                  console.log(data);\r\n                  toast.success(data, {\r\n                    position: \"bottom-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                  });\r\n                  window.location.href = \"/login\";\r\n                })\r\n                .catch((err) => {\r\n                  toast.error(err.response.data, {\r\n                    position: \"bottom-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                  });\r\n                });\r\n            }}\r\n          >\r\n            Create Account\r\n          </Button>\r\n          \r\n        </form>\r\n      </div>\r\n      \r\n    </Container>\r\n\r\n)\r\n: \" \"}\r\n{UserServices.isLoggedin ? UserServices.getLoggedinfo().role === \"user\" && (\r\n   \r\n   <div className=\"container\">\r\n   <h1>Only Admins</h1>\r\n    <img src={onlyAdmins} width=\"100%\" height = \"auto\" style ={{marginBottom : '10%'}}/>\r\n    </div>\r\n) : (\r\n<div className=\"container\"> \r\n<h1>Please login first</h1>\r\n<img src={notAllowed} width=\"100%\" height = \"auto\" style = {{ marginBottom : '10%'}}/>\r\n</div>\r\n)}\r\n</>\r\n  );\r\n}\r\n","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\users\\userDashboard.js",["769","770","771","772","773","774","775","776","777","778","779","780","781"],"import UserServices from \"../services/UserServices\";\nimport welcome from \"../img/welcome.jpg\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport notAllowed from \"../img/not_allowed.jpg\"\nimport mySketch from \"../img/mySketch.jpg\"\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {BrowserRouter as Router, Link, Route, Switch} from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport AnimatedButton from '@bit/tabinda.react-button-animation.animated.button';\nimport {widthh , setWidthh} from '../sketch'\nimport {heightt , setHeightt} from '../sketch'\nimport setMyVar from '../sketch'\nimport totalLayer from '../sketch'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n    paper: {\n      marginTop: theme.spacing(8),\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: \"100%\", // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n\n  let sketchData , setSketchData;\n\n  export {sketchData, setSketchData};\n \n\nexport default function Welcome(){\n\n    const classes = useStyles();\n\n    const [password, setPassword] = React.useState(\"\");\n\n    const [myData, setMyData] = React.useState([]);\n\n    [sketchData , setSketchData] = React.useState([]);\n\n    return(\n    \n        <>\n        \n        {UserServices.isLoggedin\n                            ? UserServices.getLoggedinfo().added_By === \"admin\" && (\n                            \n\n<Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Change Password\n        </Typography>\n        <p style={{color : 'blue'}}>\n          As you were registered by admin, please change your password\n        </p>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                onChange={(e) => {\n                  setPassword(e.target.value);\n\n                  \n                }}\n                onKeyPress={event => {\n                  if (event.key === 'Enter') {\n                document.getElementById('save').click();\n                  }\n              }}\n              />\n            </Grid>\n          </Grid>\n                  <br></br>\n          <PasswordStrengthBar password={password} />\n\n          <Button\n          id = \"save\"\n            fullWidth\n            className={classes.submit}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => {\n              UserServices.updatePass(UserServices.getLoggedinfo().email , password , \"user\")\n                .then((data) => {\n                  console.log(data);\n                  toast.success(data, {\n                    position: \"bottom-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                  });\n                  window.location.href = \"/login\";\n                })\n                .catch((err) => {\n                  toast.error(err.response.data, {\n                    position: \"bottom-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                  });\n                });\n            }}\n          >\nChange Password          </Button>\n          \n        </form>\n      </div>\n      \n    </Container>\n                            \n                        ) : (\"\")}\n                        \n                            {UserServices.isLoggedin ? UserServices.getLoggedinfo().added_By === \"user\" && (\n\n                            <div className=\"container\" style = {{margin : \"5%\"}}> \n                            <div className=\"row\">\n                              <div className=\"col-xs-12\">\n\n                              <AnimatedButton style = {{margin : \"5%\"}}\n                              id = \"getData\"\n                              label = \"Get Data\"\n                               onClick={(e) => {\n                                        UserServices.getSketch(UserServices.getLoggedinfo().id)\n                                        .then((data) => {\n                                          \n                                        \n                                          setMyData(data);\n\n                                          \n                                        toast.success(\"Your Data is being Loaded\", { \n                                        position: \"bottom-right\",\n                                        autoClose: 5000,\n                                        hideProgressBar: false,\n                                        closeOnClick: true,\n                                        pauseOnHover: true,\n                                       draggable: true,\n                                       progress: undefined,\n                                        });\n                                     })\n                                      .catch((err) => {\n                                     toast.error(err.response.data, {\n                                     position: \"bottom-right\",\n                                     autoClose: 5000,\n                                     hideProgressBar: false,\n                                      closeOnClick: true,\n                                        pauseOnHover: true,\n                                        draggable: true,\n                                        progress: undefined,\n                                                        });\n                                                    });\n                                                }} >Get Data</AnimatedButton>\n\n                                              \n                                </div>\n\n                                </div>\n                                <div className=\"row\" style={{margin : '3%'}}>\n      { myData.map ( data =>\n<>\n\n\n      <div className=\"col-md-4\">\n      <Card className={classes.root} style = {{marginTop : \"4%\"}}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={mySketch}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{textTransform: \"uppercase\"}}>\n          {data.name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n           Select Appropriate option for your Sketch\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n      <Button size=\"small\" color=\"primary\" \n          \n          onClick={()=>{setSketchData(data)\n                        alert(\"Now click on edit for view or editing purpose\")}}>\n            Ready                                \n        </Button>\n\n        <Button size=\"small\" color=\"primary\" \n          \n          onClick={()=> {\n            \n            if(sketchData.id === undefined){\n              alert(\"It is recommended to click on ready first\")\n            }\n          else(\n            alert(\"Redirecting ...\")\n            \n          )}}\n                    >\n          \n          <Link to=\"/sketch\" style={{textDecoration: 'none' }} >                     \n            Edit                                \n               </Link>\n          \n        </Button>\n        <Button size=\"small\" color=\"primary\"\n        \n        onClick={(e) => {\n          var answer = window.confirm(\"Are you sure, You want to delete this sketch? \");\n          if (!answer) {\n            // Save it!\n            console.log('Thing was saved to the database.');\n          } else {\n            // Do nothing!\n            console.log('Thing was not saved to the database.');\n          \n          UserServices.delSketch(data.id)\n          .then((res) => {\n            \n          toast.success(\"Successfully Deleted\", { \n          position: \"bottom-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n         draggable: true,\n         progress: undefined,\n          });\n       })\n        .catch((err) => {\n       toast.error(err.response.data, {\n       position: \"bottom-right\",\n       autoClose: 5000,\n       hideProgressBar: false,\n        closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n                          });\n                      });\n                  }}}\n        >\n          Delete\n        </Button>\n      </CardActions>\n    </Card></div>\n\n\n   </> )}\n          </div>\n        </div>\n                            ): (\n                            <div className=\"container\"> \n                            <h1>Please Login first</h1> \n                            <img src={notAllowed} width=\"100%\" height = \"auto\" style = {{ marginBottom : '10%'}}/>\n                            </div>)}\n        </>\n    );\n    \n    }\n    ","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\services\\payment.js",["782","783"],"import React from \"react\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./styles.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport axios from \"axios\";\r\naxios.defaults.baseURL = \"https://localhost:5000/\";\r\naxios.defaults.headers.common[\"x-auth-token\"] = localStorage.getItem(\"token\");\r\n\r\n\r\n\r\ntoast.configure();\r\n\r\nexport default function App() {\r\n  const [product] = React.useState({\r\n    name: \"Tesla Roadster\",\r\n    price: 64998.67,\r\n    description: \"Cool car\"\r\n  });\r\n\r\n  const [token , setToken] = React.useState([]);\r\n\r\n  function handleToken(token, addresses) {\r\n\r\n    new Promise((resolve, reject) => {\r\n\r\n      console.log(token)\r\n\r\n    axios.post(\r\n      \"https://localhost:5000/mycheckout\",\r\n      { token, product }\r\n    ).then((res)=>{\r\n      resolve(res)\r\n    })\r\n    .catch((err)=>{\r\n      reject(err)\r\n    });\r\n  });\r\n    // this.post(\"http://localhost:5000/register\", { username, email, password , role})\r\n    //     .then((res) => {\r\n    //       resolve(res);\r\n    //     })  \r\n    //     .catch((err) => {\r\n    //       reject(err);\r\n    //     });\r\n\r\n    // console.log(handleToken)\r\n\r\n\r\n\r\n    // const { status } = response.data;\r\n    // console.log(\"Response:\", response.data);\r\n    // if (status === \"success\") {\r\n    //   toast(\"Success! Check email for details\", { type: \"success\" });\r\n    // } else {\r\n    //   toast(\"Something went wrong\", { type: \"error\" });\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"product\">\r\n        <h1>{product.name}</h1>\r\n        <h3>On Sale · ${product.price}</h3>\r\n      </div>\r\n      <StripeCheckout \r\n        stripeKey=\"pk_test_51IorIIJmpNZTNdrVSyS2DzXf6i1NSsowyVHM90rIurlyXK9SXfLKq8rMb4ppoc0zPhcnLff6kUKuOXB90Uy9FyG100kml35YcH\"\r\n        token={handleToken}\r\n        amount={product.price * 100}\r\n        name=\"Tesla Roadster\"\r\n        // billingAddress\r\n        // shippingAddress\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n// const rootElement = document.getElementById(\"root\");\r\n// ReactDOM.render(<App />, rootElement);\r\n","C:\\Users\\alpha\\OneDrive\\myapp\\client\\src\\components\\PaymentForm.js",["784","785"],"import React from \"react\";\r\nimport {CardElement , useElements , useStripe } from \"@stripe/react-stripe-js\"\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {ids , setId} from \"../auth/signup\"\r\n\r\n\r\nconst CARD_OPTIONS = {\r\n    iconStyle: \"solid\",\r\n    style: {\r\n      base: {\r\n        iconColor: \"#c4f0ff\",\r\n        color: \"#fff\",\r\n        fontWeight: 500,\r\n        fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\r\n        fontSize: \"16px\",\r\n        fontSmoothing: \"antialiased\",\r\n        \":-webkit-autofill\" : {color : \"#fce883\"},\r\n        \"::placeholder\" : {color : \"#87bbfd\"}\r\n  \r\n       },\r\n       invalid: {\r\n         iconColor: \"#ffc7ee\",\r\n         color: \"#ffc7ee\"\r\n       }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  export default function PaymentForm(){\r\n    const [success , setSuccess] = React.useState(false);\r\n    \r\n\r\n    const stripe = useStripe();\r\n    const element = useElements();\r\n\r\n    const handleSubmit  = async (e) =>{\r\n        e.preventDefault();\r\n        const {error, paymentMethod} = await stripe.createPaymentMethod({\r\n            type: \"card\",\r\n            card: element.getElement(CardElement)\r\n          })\r\n          \r\n        \r\n        \r\n      if(!error) {\r\n        try{\r\n          const {id} = paymentMethod\r\n          setId(id);\r\n           console.log(id)\r\n           console.log(ids)\r\n\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n      }\r\n    }\r\n        \r\nreturn (\r\n    <>\r\n    {!success ?\r\n    <form onSubmit={handleSubmit}>\r\n        <fieldset className=\"FormGroup\">\r\n    <div className=\"FormRow\">\r\n      <CardElement options={CARD_OPTIONS}/>\r\n\r\n    </div>\r\n\r\n</fieldset>\r\n\r\n<button onClick={handleSubmit}>PAY</button>\r\n</form> \r\n : \r\n\r\n    <div>\r\n        <>Subscribed</>\r\n        </div>} \r\n    </>\r\n)\r\n\r\n}\r\n","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\index.js",[],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\App.js",["786","787","788"],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\reportWebVitals.js",[],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\home.jsx",["789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808"],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\auth\\signup.js",["809","810","811","812","813","814"],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\auth\\login.js",["815","816","817","818","819"],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\helper\\notfound.js",["820"],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\postForm.js",[],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\About.js",["821","822","823","824","825","826","827","828"],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\contact.js",["829","830","831","832","833","834"],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\submitted.js",[],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\sketch.js",["835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862"],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\helper\\nav.js",["863","864","865","866","867","868","869","870","871","872","873"],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\helper\\responsive.js",[],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\auth\\addByAdmin.js",["874","875","876","877","878","879"],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\admin\\Dashboard.js",["880","881","882","883","884","885","886","887","888","889","890"],"import UserServices from \"../services/UserServices\";\nimport welcome from \"../img/welcome.jpg\"\nimport add from \"../img/add_user.png\"\nimport change from \"../img/change.jpg\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport notAllowed from \"../img/not_allowed.jpg\"\nimport onlyAdmins from \"../img/only_admins.jpg\"\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { toast } from \"react-toastify\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {BrowserRouter as Router, Link, Route, Switch} from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 345,\n    },\n  });\nexport default function Dashboard() {\n\n    const classes = useStyles();\n    \n    const [sub, setSub] = React.useState(\"\");\n\n    return (\n        <>\n         {UserServices.isLoggedin\n                            ? UserServices.getLoggedinfo().role === \"admin\" && (\n                            \n                                <div className=\"container\" style={{marginTop:\"10%\" , marginBottom:\"10%\"}}>\n\n<div className=\"row\">\n    {/* <div className=\"col-md-6\">\n<Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Change Subscription Charges\"\n          height=\"140\"\n          image={change}\n          title=\"Change Subscription Charges\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          Change Subscription Charges\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            The Admins can change Subscription Charges on their own will\n\n            <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"sub\"\n            label=\"Subscription Charges\"\n            name=\"sub\"\n            autoComplete=\"sub\"\n            autoFocus\n            value={sub}\n            onChange={(e) => {\n              setSub(e.target.value);\n            }}\n            onKeyPress={event => {\n              if (event.key === 'Enter') {\n            document.getElementById('change').click();\n              }\n          }}\n          />\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        \n        <Button size=\"small\" color=\"primary\"  id = \"change\"\n            \n            onClick={(e) => {\n\n                // console.log({userName}, {password})\n                UserServices.change( sub , UserServices.getLoggedinfo().role)\n                  .then((data) => {\n                    console.log(data);\n                    toast.success(data, {\n                        position: \"bottom-right\",\n                        autoClose: 5000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                      });\n                    \n                  })\n                  .catch((err) => {\n                    toast.error(err.response.data, {\n                      position: \"bottom-right\",\n                      autoClose: 5000,\n                      hideProgressBar: false,\n                      closeOnClick: true,\n                      pauseOnHover: true,\n                      draggable: true,\n                      progress: undefined,\n                    });\n                  });\n              }}>\n       Change Subscription Charges\n        </Button>\n      </CardActions>\n    </Card>\n</div> */}\n<div className=\"col-md-12\">\n\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Add User\"\n          height=\"160\"\n          image={add}\n          title=\"Add user\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          Add User\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            The Admins can add user without subsciption charges\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        \n      <Link to=\"/addByAdmin\" style={{textDecoration: 'none' }} >\n        <Button size=\"small\" color=\"primary\">\n       Add User\n        </Button>\n        </Link>\n                 \n                         \n      </CardActions>\n    </Card>\n    </div>\n</div>\n                            </div>\n                            \n                        )\n                            : \" \"}\n                            {UserServices.isLoggedin ? UserServices.getLoggedinfo().role === \"user\" && (\n                               \n                               <div className=\"container\">\n                               <h1>Only Admins</h1>\n                                <img src={onlyAdmins} width=\"100%\" height = \"auto\" style ={{marginBottom : '10%'}}/>\n                                </div>\n                            ) : (\n                            <div className=\"container\"> \n                            <h1>Please login first</h1>\n                            <img src={notAllowed} width=\"100%\" height = \"auto\" style = {{ marginBottom : '10%'}}/>\n                            </div>\n                            )}\n        </>\n    )\n}","F:\\Aoo-Ghr-Bnain-Final\\client\\src\\services\\payment.js",["891","892"],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\users\\userDashboard.js",["893","894","895","896","897","898","899","900","901","902","903","904","905"],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\helper\\footer.jsx",["906","907","908","909","910","911","912"],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\services\\UserServices.js",[],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\components\\PaymentForm.js",["913","914"],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\services\\GenericServices.js",[],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\sketchHelper\\isWithinElement.js",[],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\sketchHelper\\toggleDrawer.js",[],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\sketchHelper\\handleSave.js",["915","916","917","918","919","920","921","922","923"],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\sketchHelper\\handleMouseUp.js",[],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\sketchHelper\\handleMouseMove.js",["924","925","926","927","928","929"],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\scrapMe.jsx",["930","931"],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\sketchHelper\\handleMouseDown.js",["932","933","934"],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\sketchHelper\\useStyles.js",[],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\sketchHelper\\updateElement.js",[],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\sketchHelper\\createElement.js",["935"],"F:\\Aoo-Ghr-Bnain-Final\\client\\src\\sketchHelper\\TabPanel.js",[],"F:\\Aoo-Ghr-Bnain-Client\\src\\index.js",[],"F:\\Aoo-Ghr-Bnain-Client\\src\\App.js",["936","937","938"],"F:\\Aoo-Ghr-Bnain-Client\\src\\reportWebVitals.js",[],"F:\\Aoo-Ghr-Bnain-Client\\src\\home.jsx",["939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958"],"F:\\Aoo-Ghr-Bnain-Client\\src\\helper\\notfound.js",["959"],"F:\\Aoo-Ghr-Bnain-Client\\src\\auth\\login.js",["960","961","962","963","964"],"F:\\Aoo-Ghr-Bnain-Client\\src\\auth\\signup.js",["965","966","967","968","969","970"],"F:\\Aoo-Ghr-Bnain-Client\\src\\postForm.js",[],"F:\\Aoo-Ghr-Bnain-Client\\src\\submitted.js",[],"F:\\Aoo-Ghr-Bnain-Client\\src\\contact.js",["971","972","973","974","975","976"],"F:\\Aoo-Ghr-Bnain-Client\\src\\About.js",["977","978","979","980","981","982","983","984"],"F:\\Aoo-Ghr-Bnain-Client\\src\\sketch.js",["985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012"],"F:\\Aoo-Ghr-Bnain-Client\\src\\helper\\responsive.js",[],"F:\\Aoo-Ghr-Bnain-Client\\src\\helper\\nav.js",["1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023"],"F:\\Aoo-Ghr-Bnain-Client\\src\\auth\\addByAdmin.js",["1024","1025","1026","1027","1028","1029"],"F:\\Aoo-Ghr-Bnain-Client\\src\\admin\\Dashboard.js",["1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040"],"F:\\Aoo-Ghr-Bnain-Client\\src\\users\\userDashboard.js",["1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053"],"F:\\Aoo-Ghr-Bnain-Client\\src\\services\\payment.js",["1054","1055"],"F:\\Aoo-Ghr-Bnain-Client\\src\\helper\\footer.jsx",["1056","1057","1058","1059","1060","1061","1062"],"F:\\Aoo-Ghr-Bnain-Client\\src\\services\\UserServices.js",[],"F:\\Aoo-Ghr-Bnain-Client\\src\\components\\PaymentForm.js",["1063","1064"],"F:\\Aoo-Ghr-Bnain-Client\\src\\services\\GenericServices.js",[],"F:\\Aoo-Ghr-Bnain-Client\\src\\scrapMe.jsx",["1065","1066"],"F:\\Aoo-Ghr-Bnain-Client\\src\\sketchHelper\\toggleDrawer.js",[],"F:\\Aoo-Ghr-Bnain-Client\\src\\sketchHelper\\isWithinElement.js",[],"F:\\Aoo-Ghr-Bnain-Client\\src\\sketchHelper\\handleSave.js",["1067","1068","1069","1070","1071","1072","1073","1074","1075"],"F:\\Aoo-Ghr-Bnain-Client\\src\\sketchHelper\\handleMouseUp.js",[],"F:\\Aoo-Ghr-Bnain-Client\\src\\sketchHelper\\handleMouseMove.js",["1076","1077","1078","1079","1080","1081"],"F:\\Aoo-Ghr-Bnain-Client\\src\\sketchHelper\\handleMouseDown.js",["1082","1083","1084"],"F:\\Aoo-Ghr-Bnain-Client\\src\\sketchHelper\\useStyles.js",[],"F:\\Aoo-Ghr-Bnain-Client\\src\\sketchHelper\\updateElement.js",[],"F:\\Aoo-Ghr-Bnain-Client\\src\\sketchHelper\\createElement.js",["1085"],"F:\\Aoo-Ghr-Bnain-Client\\src\\sketchHelper\\TabPanel.js",[],{"ruleId":"1086","replacedBy":"1087"},{"ruleId":"1088","replacedBy":"1089"},{"ruleId":"1090","severity":1,"message":"1091","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1094","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1095","line":30,"column":14,"nodeType":"1092","messageId":"1093","endLine":30,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1096","line":11,"column":17,"nodeType":"1092","messageId":"1093","endLine":11,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1097","line":12,"column":10,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1098","line":13,"column":10,"nodeType":"1092","messageId":"1093","endLine":13,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1099","line":15,"column":9,"nodeType":"1092","messageId":"1093","endLine":15,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1100","line":15,"column":17,"nodeType":"1092","messageId":"1093","endLine":15,"endColumn":27},{"ruleId":"1090","severity":1,"message":"1101","line":16,"column":26,"nodeType":"1092","messageId":"1093","endLine":16,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1102","line":16,"column":40,"nodeType":"1092","messageId":"1093","endLine":16,"endColumn":45},{"ruleId":"1090","severity":1,"message":"1103","line":16,"column":47,"nodeType":"1092","messageId":"1093","endLine":16,"endColumn":53},{"ruleId":"1090","severity":1,"message":"1104","line":21,"column":10,"nodeType":"1092","messageId":"1093","endLine":21,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1105","line":22,"column":10,"nodeType":"1092","messageId":"1093","endLine":22,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1106","line":99,"column":7,"nodeType":"1092","messageId":"1093","endLine":99,"endColumn":13},{"ruleId":"1107","severity":1,"message":"1108","line":110,"column":1,"nodeType":"1109","endLine":115,"endColumn":24},{"ruleId":"1110","severity":1,"message":"1111","line":118,"column":22,"nodeType":"1109","endLine":118,"endColumn":69},{"ruleId":"1107","severity":1,"message":"1108","line":133,"column":5,"nodeType":"1109","endLine":135,"endColumn":36},{"ruleId":"1107","severity":1,"message":"1108","line":151,"column":5,"nodeType":"1109","endLine":154,"endColumn":36},{"ruleId":"1107","severity":1,"message":"1108","line":175,"column":21,"nodeType":"1109","endLine":178,"endColumn":32},{"ruleId":"1107","severity":1,"message":"1108","line":187,"column":9,"nodeType":"1109","endLine":190,"endColumn":32},{"ruleId":"1107","severity":1,"message":"1108","line":198,"column":5,"nodeType":"1109","endLine":200,"endColumn":32},{"ruleId":"1107","severity":1,"message":"1108","line":225,"column":1,"nodeType":"1109","endLine":227,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1112","line":101,"column":8,"nodeType":"1092","messageId":"1093","endLine":101,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1113","line":103,"column":8,"nodeType":"1092","messageId":"1093","endLine":103,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1114","line":106,"column":8,"nodeType":"1092","messageId":"1093","endLine":106,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1115","line":116,"column":13,"nodeType":"1092","messageId":"1093","endLine":116,"endColumn":16},{"ruleId":"1116","severity":1,"message":"1117","line":188,"column":13,"nodeType":"1118","endLine":188,"endColumn":21},{"ruleId":"1110","severity":1,"message":"1111","line":8,"column":7,"nodeType":"1109","endLine":8,"endColumn":107},{"ruleId":"1090","severity":1,"message":"1112","line":2,"column":8,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1113","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1114","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1119","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1120","line":304,"column":24,"nodeType":"1092","messageId":"1093","endLine":304,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1121","line":304,"column":34,"nodeType":"1092","messageId":"1093","endLine":304,"endColumn":45},{"ruleId":"1090","severity":1,"message":"1122","line":305,"column":24,"nodeType":"1092","messageId":"1093","endLine":305,"endColumn":33},{"ruleId":"1090","severity":1,"message":"1123","line":305,"column":35,"nodeType":"1092","messageId":"1093","endLine":305,"endColumn":47},{"ruleId":"1090","severity":1,"message":"1124","line":5,"column":8,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1125","line":9,"column":10,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1126","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":20},{"ruleId":"1127","severity":1,"message":"1128","line":58,"column":1,"nodeType":"1092","endLine":58,"endColumn":10,"suggestions":"1129"},{"ruleId":"1110","severity":1,"message":"1111","line":75,"column":21,"nodeType":"1109","endLine":75,"endColumn":99},{"ruleId":"1110","severity":1,"message":"1111","line":89,"column":25,"nodeType":"1109","endLine":89,"endColumn":74},{"ruleId":"1110","severity":1,"message":"1111","line":90,"column":25,"nodeType":"1109","endLine":90,"endColumn":76},{"ruleId":"1130","severity":1,"message":"1131","line":115,"column":13,"nodeType":"1109","endLine":116,"endColumn":99},{"ruleId":"1090","severity":1,"message":"1112","line":2,"column":8,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1113","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1114","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1132","line":9,"column":8,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1133","line":13,"column":8,"nodeType":"1092","messageId":"1093","endLine":13,"endColumn":24},{"ruleId":"1110","severity":1,"message":"1111","line":52,"column":11,"nodeType":"1109","endLine":52,"endColumn":59},{"ruleId":"1090","severity":1,"message":"1134","line":8,"column":8,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1135","line":17,"column":8,"nodeType":"1092","messageId":"1093","endLine":17,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1136","line":18,"column":8,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1137","line":20,"column":10,"nodeType":"1092","messageId":"1093","endLine":20,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1138","line":20,"column":23,"nodeType":"1092","messageId":"1093","endLine":20,"endColumn":34},{"ruleId":"1090","severity":1,"message":"1139","line":28,"column":7,"nodeType":"1092","messageId":"1093","endLine":28,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1140","line":123,"column":12,"nodeType":"1092","messageId":"1093","endLine":123,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1141","line":123,"column":20,"nodeType":"1092","messageId":"1093","endLine":123,"endColumn":29},{"ruleId":"1090","severity":1,"message":"1142","line":135,"column":11,"nodeType":"1092","messageId":"1093","endLine":135,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1143","line":146,"column":11,"nodeType":"1092","messageId":"1093","endLine":146,"endColumn":26},{"ruleId":"1110","severity":1,"message":"1111","line":356,"column":21,"nodeType":"1109","endLine":356,"endColumn":90},{"ruleId":"1110","severity":1,"message":"1111","line":18,"column":29,"nodeType":"1109","endLine":18,"endColumn":113},{"ruleId":"1110","severity":1,"message":"1111","line":27,"column":33,"nodeType":"1109","endLine":27,"endColumn":117},{"ruleId":"1110","severity":1,"message":"1111","line":32,"column":29,"nodeType":"1109","endLine":32,"endColumn":115},{"ruleId":"1090","severity":1,"message":"1144","line":1,"column":9,"nodeType":"1092","messageId":"1093","endLine":1,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1101","line":2,"column":26,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1102","line":2,"column":40,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":45},{"ruleId":"1090","severity":1,"message":"1103","line":2,"column":47,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":53},{"ruleId":"1145","severity":1,"message":"1146","line":57,"column":37,"nodeType":"1109","endLine":57,"endColumn":40},{"ruleId":"1145","severity":1,"message":"1146","line":64,"column":37,"nodeType":"1109","endLine":64,"endColumn":40},{"ruleId":"1145","severity":1,"message":"1146","line":72,"column":37,"nodeType":"1109","endLine":72,"endColumn":40},{"ruleId":"1090","severity":1,"message":"1147","line":1,"column":8,"nodeType":"1092","messageId":"1093","endLine":1,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1148","line":12,"column":10,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":15},{"ruleId":"1149","severity":1,"message":"1150","line":43,"column":34,"nodeType":"1151","messageId":"1152","endLine":43,"endColumn":50,"fix":"1153"},{"ruleId":"1090","severity":1,"message":"1154","line":2,"column":8,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1155","line":67,"column":38,"nodeType":"1092","messageId":"1093","endLine":67,"endColumn":42},{"ruleId":"1090","severity":1,"message":"1156","line":109,"column":16,"nodeType":"1092","messageId":"1093","endLine":109,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1155","line":109,"column":38,"nodeType":"1092","messageId":"1093","endLine":109,"endColumn":42},{"ruleId":"1090","severity":1,"message":"1157","line":112,"column":15,"nodeType":"1092","messageId":"1093","endLine":112,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1158","line":113,"column":15,"nodeType":"1092","messageId":"1093","endLine":113,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1159","line":2,"column":13,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1160","line":3,"column":13,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1161","line":8,"column":13,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":28},{"ruleId":"1090","severity":1,"message":"1162","line":2,"column":8,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":13},{"ruleId":"1086","replacedBy":"1163"},{"ruleId":"1088","replacedBy":"1164"},{"ruleId":"1090","severity":1,"message":"1091","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1094","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1095","line":34,"column":14,"nodeType":"1092","messageId":"1093","endLine":34,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1096","line":20,"column":17,"nodeType":"1092","messageId":"1093","endLine":20,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1097","line":21,"column":10,"nodeType":"1092","messageId":"1093","endLine":21,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1098","line":22,"column":10,"nodeType":"1092","messageId":"1093","endLine":22,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1099","line":24,"column":9,"nodeType":"1092","messageId":"1093","endLine":24,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1100","line":24,"column":17,"nodeType":"1092","messageId":"1093","endLine":24,"endColumn":27},{"ruleId":"1090","severity":1,"message":"1101","line":25,"column":26,"nodeType":"1092","messageId":"1093","endLine":25,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1102","line":25,"column":40,"nodeType":"1092","messageId":"1093","endLine":25,"endColumn":45},{"ruleId":"1090","severity":1,"message":"1103","line":25,"column":47,"nodeType":"1092","messageId":"1093","endLine":25,"endColumn":53},{"ruleId":"1090","severity":1,"message":"1104","line":30,"column":10,"nodeType":"1092","messageId":"1093","endLine":30,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1105","line":31,"column":10,"nodeType":"1092","messageId":"1093","endLine":31,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1106","line":108,"column":7,"nodeType":"1092","messageId":"1093","endLine":108,"endColumn":13},{"ruleId":"1107","severity":1,"message":"1108","line":119,"column":1,"nodeType":"1109","endLine":124,"endColumn":24},{"ruleId":"1110","severity":1,"message":"1111","line":127,"column":22,"nodeType":"1109","endLine":127,"endColumn":69},{"ruleId":"1107","severity":1,"message":"1108","line":156,"column":5,"nodeType":"1109","endLine":159,"endColumn":36},{"ruleId":"1107","severity":1,"message":"1108","line":162,"column":21,"nodeType":"1109","endLine":164,"endColumn":36},{"ruleId":"1107","severity":1,"message":"1108","line":185,"column":21,"nodeType":"1109","endLine":188,"endColumn":32},{"ruleId":"1107","severity":1,"message":"1108","line":197,"column":9,"nodeType":"1109","endLine":200,"endColumn":32},{"ruleId":"1107","severity":1,"message":"1108","line":208,"column":5,"nodeType":"1109","endLine":210,"endColumn":32},{"ruleId":"1107","severity":1,"message":"1108","line":218,"column":1,"nodeType":"1109","endLine":220,"endColumn":32},{"ruleId":"1107","severity":1,"message":"1108","line":242,"column":1,"nodeType":"1109","endLine":244,"endColumn":32},{"ruleId":"1110","severity":1,"message":"1111","line":8,"column":7,"nodeType":"1109","endLine":8,"endColumn":107},{"ruleId":"1090","severity":1,"message":"1112","line":101,"column":8,"nodeType":"1092","messageId":"1093","endLine":101,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1113","line":103,"column":8,"nodeType":"1092","messageId":"1093","endLine":103,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1114","line":106,"column":8,"nodeType":"1092","messageId":"1093","endLine":106,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1115","line":116,"column":13,"nodeType":"1092","messageId":"1093","endLine":116,"endColumn":16},{"ruleId":"1116","severity":1,"message":"1117","line":188,"column":13,"nodeType":"1118","endLine":188,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1112","line":2,"column":8,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1113","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1114","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1165","line":18,"column":8,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":22},{"ruleId":"1090","severity":1,"message":"1166","line":68,"column":10,"nodeType":"1092","messageId":"1093","endLine":68,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1167","line":79,"column":12,"nodeType":"1092","messageId":"1093","endLine":79,"endColumn":23},{"ruleId":"1090","severity":1,"message":"1119","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1168","line":27,"column":24,"nodeType":"1092","messageId":"1093","endLine":27,"endColumn":43},{"ruleId":"1090","severity":1,"message":"1169","line":80,"column":10,"nodeType":"1092","messageId":"1093","endLine":80,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1170","line":85,"column":13,"nodeType":"1092","messageId":"1093","endLine":85,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1171","line":202,"column":18,"nodeType":"1092","messageId":"1093","endLine":202,"endColumn":31},{"ruleId":"1090","severity":1,"message":"1172","line":543,"column":33,"nodeType":"1092","messageId":"1093","endLine":543,"endColumn":44},{"ruleId":"1090","severity":1,"message":"1173","line":561,"column":33,"nodeType":"1092","messageId":"1093","endLine":561,"endColumn":41},{"ruleId":"1090","severity":1,"message":"1174","line":620,"column":33,"nodeType":"1092","messageId":"1093","endLine":620,"endColumn":49},{"ruleId":"1090","severity":1,"message":"1175","line":637,"column":33,"nodeType":"1092","messageId":"1093","endLine":637,"endColumn":46},{"ruleId":"1090","severity":1,"message":"1176","line":942,"column":18,"nodeType":"1092","messageId":"1093","endLine":942,"endColumn":29},{"ruleId":"1090","severity":1,"message":"1177","line":942,"column":32,"nodeType":"1092","messageId":"1093","endLine":942,"endColumn":46},{"ruleId":"1090","severity":1,"message":"1156","line":955,"column":24,"nodeType":"1092","messageId":"1093","endLine":955,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1120","line":959,"column":24,"nodeType":"1092","messageId":"1093","endLine":959,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1121","line":959,"column":34,"nodeType":"1092","messageId":"1093","endLine":959,"endColumn":45},{"ruleId":"1090","severity":1,"message":"1122","line":960,"column":24,"nodeType":"1092","messageId":"1093","endLine":960,"endColumn":33},{"ruleId":"1090","severity":1,"message":"1123","line":960,"column":35,"nodeType":"1092","messageId":"1093","endLine":960,"endColumn":47},{"ruleId":"1127","severity":1,"message":"1178","line":969,"column":17,"nodeType":"1092","endLine":969,"endColumn":26,"suggestions":"1179"},{"ruleId":"1090","severity":1,"message":"1180","line":1135,"column":27,"nodeType":"1092","messageId":"1093","endLine":1135,"endColumn":42},{"ruleId":"1090","severity":1,"message":"1181","line":1139,"column":29,"nodeType":"1092","messageId":"1093","endLine":1139,"endColumn":38},{"ruleId":"1090","severity":1,"message":"1181","line":1207,"column":29,"nodeType":"1092","messageId":"1093","endLine":1207,"endColumn":38},{"ruleId":"1182","severity":1,"message":"1183","line":1291,"column":33,"nodeType":"1092","messageId":"1184","endLine":1291,"endColumn":40},{"ruleId":"1090","severity":1,"message":"1185","line":1324,"column":25,"nodeType":"1092","messageId":"1093","endLine":1324,"endColumn":32},{"ruleId":"1116","severity":1,"message":"1117","line":1809,"column":49,"nodeType":"1118","endLine":1809,"endColumn":66},{"ruleId":"1116","severity":1,"message":"1117","line":2230,"column":25,"nodeType":"1118","endLine":2230,"endColumn":42},{"ruleId":"1116","severity":1,"message":"1117","line":2664,"column":25,"nodeType":"1118","endLine":2664,"endColumn":42},{"ruleId":"1116","severity":1,"message":"1117","line":2814,"column":16,"nodeType":"1118","endLine":2814,"endColumn":33},{"ruleId":"1116","severity":1,"message":"1117","line":2815,"column":17,"nodeType":"1118","endLine":2815,"endColumn":49},{"ruleId":"1116","severity":1,"message":"1117","line":3131,"column":49,"nodeType":"1118","endLine":3131,"endColumn":66},{"ruleId":"1090","severity":1,"message":"1112","line":2,"column":8,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1113","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1114","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1132","line":9,"column":8,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1133","line":13,"column":8,"nodeType":"1092","messageId":"1093","endLine":13,"endColumn":24},{"ruleId":"1110","severity":1,"message":"1111","line":52,"column":11,"nodeType":"1109","endLine":52,"endColumn":59},{"ruleId":"1090","severity":1,"message":"1124","line":5,"column":8,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1125","line":9,"column":10,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1126","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":20},{"ruleId":"1127","severity":1,"message":"1128","line":58,"column":1,"nodeType":"1092","endLine":58,"endColumn":10,"suggestions":"1186"},{"ruleId":"1110","severity":1,"message":"1111","line":75,"column":21,"nodeType":"1109","endLine":75,"endColumn":99},{"ruleId":"1110","severity":1,"message":"1111","line":89,"column":25,"nodeType":"1109","endLine":89,"endColumn":74},{"ruleId":"1110","severity":1,"message":"1111","line":90,"column":25,"nodeType":"1109","endLine":90,"endColumn":76},{"ruleId":"1130","severity":1,"message":"1131","line":115,"column":13,"nodeType":"1109","endLine":116,"endColumn":99},{"ruleId":"1090","severity":1,"message":"1134","line":8,"column":8,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1135","line":17,"column":8,"nodeType":"1092","messageId":"1093","endLine":17,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1136","line":18,"column":8,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1137","line":20,"column":10,"nodeType":"1092","messageId":"1093","endLine":20,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1138","line":20,"column":23,"nodeType":"1092","messageId":"1093","endLine":20,"endColumn":34},{"ruleId":"1090","severity":1,"message":"1139","line":28,"column":7,"nodeType":"1092","messageId":"1093","endLine":28,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1140","line":123,"column":12,"nodeType":"1092","messageId":"1093","endLine":123,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1141","line":123,"column":20,"nodeType":"1092","messageId":"1093","endLine":123,"endColumn":29},{"ruleId":"1090","severity":1,"message":"1142","line":135,"column":11,"nodeType":"1092","messageId":"1093","endLine":135,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1143","line":146,"column":11,"nodeType":"1092","messageId":"1093","endLine":146,"endColumn":26},{"ruleId":"1110","severity":1,"message":"1111","line":393,"column":21,"nodeType":"1109","endLine":393,"endColumn":90},{"ruleId":"1090","severity":1,"message":"1187","line":2,"column":8,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1188","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1148","line":17,"column":10,"nodeType":"1092","messageId":"1093","endLine":17,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1189","line":18,"column":8,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1101","line":19,"column":26,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1102","line":19,"column":40,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":45},{"ruleId":"1090","severity":1,"message":"1103","line":19,"column":47,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":53},{"ruleId":"1090","severity":1,"message":"1190","line":30,"column":12,"nodeType":"1092","messageId":"1093","endLine":30,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1191","line":30,"column":17,"nodeType":"1092","messageId":"1093","endLine":30,"endColumn":23},{"ruleId":"1110","severity":1,"message":"1111","line":159,"column":33,"nodeType":"1109","endLine":159,"endColumn":117},{"ruleId":"1110","severity":1,"message":"1111","line":164,"column":29,"nodeType":"1109","endLine":164,"endColumn":115},{"ruleId":"1090","severity":1,"message":"1144","line":1,"column":9,"nodeType":"1092","messageId":"1093","endLine":1,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1101","line":2,"column":26,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1102","line":2,"column":40,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":45},{"ruleId":"1090","severity":1,"message":"1103","line":2,"column":47,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":53},{"ruleId":"1145","severity":1,"message":"1146","line":57,"column":37,"nodeType":"1109","endLine":57,"endColumn":40},{"ruleId":"1145","severity":1,"message":"1146","line":64,"column":37,"nodeType":"1109","endLine":64,"endColumn":40},{"ruleId":"1145","severity":1,"message":"1146","line":72,"column":37,"nodeType":"1109","endLine":72,"endColumn":40},{"ruleId":"1090","severity":1,"message":"1192","line":20,"column":11,"nodeType":"1092","messageId":"1093","endLine":20,"endColumn":18},{"ruleId":"1193","severity":1,"message":"1194","line":57,"column":63,"nodeType":"1195","messageId":"1196","endLine":57,"endColumn":64},{"ruleId":"1193","severity":1,"message":"1194","line":57,"column":91,"nodeType":"1195","messageId":"1196","endLine":57,"endColumn":92},{"ruleId":"1193","severity":1,"message":"1194","line":57,"column":199,"nodeType":"1195","messageId":"1196","endLine":57,"endColumn":200},{"ruleId":"1197","severity":1,"message":"1198","line":59,"column":14,"nodeType":"1195","messageId":"1199","endLine":59,"endColumn":16},{"ruleId":"1197","severity":1,"message":"1198","line":64,"column":19,"nodeType":"1195","messageId":"1199","endLine":64,"endColumn":21},{"ruleId":"1197","severity":1,"message":"1198","line":68,"column":19,"nodeType":"1195","messageId":"1199","endLine":68,"endColumn":21},{"ruleId":"1197","severity":1,"message":"1198","line":72,"column":19,"nodeType":"1195","messageId":"1199","endLine":72,"endColumn":21},{"ruleId":"1182","severity":1,"message":"1200","line":147,"column":17,"nodeType":"1092","messageId":"1184","endLine":147,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1155","line":73,"column":38,"nodeType":"1092","messageId":"1093","endLine":73,"endColumn":42},{"ruleId":"1090","severity":1,"message":"1156","line":129,"column":16,"nodeType":"1092","messageId":"1093","endLine":129,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1155","line":129,"column":38,"nodeType":"1092","messageId":"1093","endLine":129,"endColumn":42},{"ruleId":"1090","severity":1,"message":"1201","line":129,"column":63,"nodeType":"1092","messageId":"1093","endLine":129,"endColumn":74},{"ruleId":"1090","severity":1,"message":"1157","line":132,"column":15,"nodeType":"1092","messageId":"1093","endLine":132,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1158","line":133,"column":15,"nodeType":"1092","messageId":"1093","endLine":133,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1159","line":2,"column":13,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1160","line":3,"column":13,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1161","line":8,"column":13,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":28},{"ruleId":"1090","severity":1,"message":"1147","line":1,"column":8,"nodeType":"1092","messageId":"1093","endLine":1,"endColumn":13},{"ruleId":"1149","severity":1,"message":"1150","line":100,"column":34,"nodeType":"1151","messageId":"1152","endLine":100,"endColumn":50,"fix":"1202"},{"ruleId":"1090","severity":1,"message":"1203","line":2,"column":15,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":22},{"ruleId":"1090","severity":1,"message":"1112","line":2,"column":8,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1113","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1114","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1132","line":9,"column":8,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":12},{"ruleId":"1110","severity":1,"message":"1111","line":181,"column":5,"nodeType":"1109","endLine":181,"endColumn":89},{"ruleId":"1110","severity":1,"message":"1111","line":186,"column":1,"nodeType":"1109","endLine":186,"endColumn":87},{"ruleId":"1090","severity":1,"message":"1187","line":2,"column":8,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1113","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1114","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1101","line":12,"column":26,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1102","line":12,"column":40,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":45},{"ruleId":"1090","severity":1,"message":"1103","line":12,"column":47,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":53},{"ruleId":"1090","severity":1,"message":"1204","line":27,"column":9,"nodeType":"1092","messageId":"1093","endLine":27,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1205","line":27,"column":18,"nodeType":"1092","messageId":"1093","endLine":27,"endColumn":27},{"ruleId":"1090","severity":1,"message":"1206","line":28,"column":9,"nodeType":"1092","messageId":"1093","endLine":28,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1207","line":28,"column":19,"nodeType":"1092","messageId":"1093","endLine":28,"endColumn":29},{"ruleId":"1090","severity":1,"message":"1208","line":29,"column":8,"nodeType":"1092","messageId":"1093","endLine":29,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1209","line":30,"column":8,"nodeType":"1092","messageId":"1093","endLine":30,"endColumn":18},{"ruleId":"1110","severity":1,"message":"1111","line":307,"column":29,"nodeType":"1109","endLine":307,"endColumn":115},{"ruleId":"1090","severity":1,"message":"1166","line":22,"column":10,"nodeType":"1092","messageId":"1093","endLine":22,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1210","line":22,"column":18,"nodeType":"1092","messageId":"1093","endLine":22,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1099","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1211","line":31,"column":22,"nodeType":"1092","messageId":"1093","endLine":31,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1091","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1094","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1095","line":34,"column":14,"nodeType":"1092","messageId":"1093","endLine":34,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1096","line":20,"column":17,"nodeType":"1092","messageId":"1093","endLine":20,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1097","line":21,"column":10,"nodeType":"1092","messageId":"1093","endLine":21,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1098","line":22,"column":10,"nodeType":"1092","messageId":"1093","endLine":22,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1099","line":24,"column":9,"nodeType":"1092","messageId":"1093","endLine":24,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1100","line":24,"column":17,"nodeType":"1092","messageId":"1093","endLine":24,"endColumn":27},{"ruleId":"1090","severity":1,"message":"1101","line":25,"column":26,"nodeType":"1092","messageId":"1093","endLine":25,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1102","line":25,"column":40,"nodeType":"1092","messageId":"1093","endLine":25,"endColumn":45},{"ruleId":"1090","severity":1,"message":"1103","line":25,"column":47,"nodeType":"1092","messageId":"1093","endLine":25,"endColumn":53},{"ruleId":"1090","severity":1,"message":"1104","line":30,"column":10,"nodeType":"1092","messageId":"1093","endLine":30,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1105","line":31,"column":10,"nodeType":"1092","messageId":"1093","endLine":31,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1106","line":108,"column":7,"nodeType":"1092","messageId":"1093","endLine":108,"endColumn":13},{"ruleId":"1107","severity":1,"message":"1108","line":119,"column":1,"nodeType":"1109","endLine":124,"endColumn":24},{"ruleId":"1110","severity":1,"message":"1111","line":127,"column":22,"nodeType":"1109","endLine":127,"endColumn":69},{"ruleId":"1107","severity":1,"message":"1108","line":156,"column":5,"nodeType":"1109","endLine":159,"endColumn":36},{"ruleId":"1107","severity":1,"message":"1108","line":162,"column":21,"nodeType":"1109","endLine":164,"endColumn":36},{"ruleId":"1107","severity":1,"message":"1108","line":185,"column":21,"nodeType":"1109","endLine":188,"endColumn":32},{"ruleId":"1107","severity":1,"message":"1108","line":197,"column":9,"nodeType":"1109","endLine":200,"endColumn":32},{"ruleId":"1107","severity":1,"message":"1108","line":208,"column":5,"nodeType":"1109","endLine":210,"endColumn":32},{"ruleId":"1107","severity":1,"message":"1108","line":218,"column":1,"nodeType":"1109","endLine":220,"endColumn":32},{"ruleId":"1107","severity":1,"message":"1108","line":242,"column":1,"nodeType":"1109","endLine":244,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1112","line":2,"column":8,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1113","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1114","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1165","line":18,"column":8,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":22},{"ruleId":"1090","severity":1,"message":"1166","line":68,"column":10,"nodeType":"1092","messageId":"1093","endLine":68,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1167","line":79,"column":12,"nodeType":"1092","messageId":"1093","endLine":79,"endColumn":23},{"ruleId":"1090","severity":1,"message":"1112","line":101,"column":8,"nodeType":"1092","messageId":"1093","endLine":101,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1113","line":103,"column":8,"nodeType":"1092","messageId":"1093","endLine":103,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1114","line":106,"column":8,"nodeType":"1092","messageId":"1093","endLine":106,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1115","line":116,"column":13,"nodeType":"1092","messageId":"1093","endLine":116,"endColumn":16},{"ruleId":"1116","severity":1,"message":"1117","line":188,"column":13,"nodeType":"1118","endLine":188,"endColumn":21},{"ruleId":"1110","severity":1,"message":"1111","line":8,"column":7,"nodeType":"1109","endLine":8,"endColumn":107},{"ruleId":"1090","severity":1,"message":"1124","line":5,"column":8,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1125","line":9,"column":10,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1126","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":20},{"ruleId":"1127","severity":1,"message":"1128","line":58,"column":1,"nodeType":"1092","endLine":58,"endColumn":10,"suggestions":"1212"},{"ruleId":"1110","severity":1,"message":"1111","line":75,"column":21,"nodeType":"1109","endLine":75,"endColumn":99},{"ruleId":"1110","severity":1,"message":"1111","line":89,"column":25,"nodeType":"1109","endLine":89,"endColumn":74},{"ruleId":"1110","severity":1,"message":"1111","line":90,"column":25,"nodeType":"1109","endLine":90,"endColumn":76},{"ruleId":"1130","severity":1,"message":"1131","line":115,"column":13,"nodeType":"1109","endLine":116,"endColumn":99},{"ruleId":"1090","severity":1,"message":"1112","line":2,"column":8,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1113","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1114","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1132","line":9,"column":8,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1133","line":13,"column":8,"nodeType":"1092","messageId":"1093","endLine":13,"endColumn":24},{"ruleId":"1110","severity":1,"message":"1111","line":52,"column":11,"nodeType":"1109","endLine":52,"endColumn":59},{"ruleId":"1090","severity":1,"message":"1119","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1168","line":27,"column":24,"nodeType":"1092","messageId":"1093","endLine":27,"endColumn":43},{"ruleId":"1090","severity":1,"message":"1169","line":80,"column":10,"nodeType":"1092","messageId":"1093","endLine":80,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1170","line":85,"column":13,"nodeType":"1092","messageId":"1093","endLine":85,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1171","line":202,"column":18,"nodeType":"1092","messageId":"1093","endLine":202,"endColumn":31},{"ruleId":"1090","severity":1,"message":"1172","line":543,"column":33,"nodeType":"1092","messageId":"1093","endLine":543,"endColumn":44},{"ruleId":"1090","severity":1,"message":"1173","line":561,"column":33,"nodeType":"1092","messageId":"1093","endLine":561,"endColumn":41},{"ruleId":"1090","severity":1,"message":"1174","line":620,"column":33,"nodeType":"1092","messageId":"1093","endLine":620,"endColumn":49},{"ruleId":"1090","severity":1,"message":"1175","line":637,"column":33,"nodeType":"1092","messageId":"1093","endLine":637,"endColumn":46},{"ruleId":"1090","severity":1,"message":"1176","line":942,"column":18,"nodeType":"1092","messageId":"1093","endLine":942,"endColumn":29},{"ruleId":"1090","severity":1,"message":"1177","line":942,"column":32,"nodeType":"1092","messageId":"1093","endLine":942,"endColumn":46},{"ruleId":"1090","severity":1,"message":"1156","line":955,"column":24,"nodeType":"1092","messageId":"1093","endLine":955,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1120","line":959,"column":24,"nodeType":"1092","messageId":"1093","endLine":959,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1121","line":959,"column":34,"nodeType":"1092","messageId":"1093","endLine":959,"endColumn":45},{"ruleId":"1090","severity":1,"message":"1122","line":960,"column":24,"nodeType":"1092","messageId":"1093","endLine":960,"endColumn":33},{"ruleId":"1090","severity":1,"message":"1123","line":960,"column":35,"nodeType":"1092","messageId":"1093","endLine":960,"endColumn":47},{"ruleId":"1127","severity":1,"message":"1178","line":969,"column":17,"nodeType":"1092","endLine":969,"endColumn":26,"suggestions":"1213"},{"ruleId":"1090","severity":1,"message":"1180","line":1135,"column":27,"nodeType":"1092","messageId":"1093","endLine":1135,"endColumn":42},{"ruleId":"1090","severity":1,"message":"1181","line":1139,"column":29,"nodeType":"1092","messageId":"1093","endLine":1139,"endColumn":38},{"ruleId":"1090","severity":1,"message":"1181","line":1207,"column":29,"nodeType":"1092","messageId":"1093","endLine":1207,"endColumn":38},{"ruleId":"1182","severity":1,"message":"1183","line":1291,"column":33,"nodeType":"1092","messageId":"1184","endLine":1291,"endColumn":40},{"ruleId":"1090","severity":1,"message":"1185","line":1324,"column":25,"nodeType":"1092","messageId":"1093","endLine":1324,"endColumn":32},{"ruleId":"1116","severity":1,"message":"1117","line":1809,"column":49,"nodeType":"1118","endLine":1809,"endColumn":66},{"ruleId":"1116","severity":1,"message":"1117","line":2230,"column":25,"nodeType":"1118","endLine":2230,"endColumn":42},{"ruleId":"1116","severity":1,"message":"1117","line":2664,"column":25,"nodeType":"1118","endLine":2664,"endColumn":42},{"ruleId":"1116","severity":1,"message":"1117","line":2814,"column":16,"nodeType":"1118","endLine":2814,"endColumn":33},{"ruleId":"1116","severity":1,"message":"1117","line":2815,"column":17,"nodeType":"1118","endLine":2815,"endColumn":49},{"ruleId":"1116","severity":1,"message":"1117","line":3131,"column":49,"nodeType":"1118","endLine":3131,"endColumn":66},{"ruleId":"1090","severity":1,"message":"1134","line":8,"column":8,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1135","line":17,"column":8,"nodeType":"1092","messageId":"1093","endLine":17,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1136","line":18,"column":8,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1137","line":20,"column":10,"nodeType":"1092","messageId":"1093","endLine":20,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1138","line":20,"column":23,"nodeType":"1092","messageId":"1093","endLine":20,"endColumn":34},{"ruleId":"1090","severity":1,"message":"1139","line":28,"column":7,"nodeType":"1092","messageId":"1093","endLine":28,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1140","line":123,"column":12,"nodeType":"1092","messageId":"1093","endLine":123,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1141","line":123,"column":20,"nodeType":"1092","messageId":"1093","endLine":123,"endColumn":29},{"ruleId":"1090","severity":1,"message":"1142","line":135,"column":11,"nodeType":"1092","messageId":"1093","endLine":135,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1143","line":146,"column":11,"nodeType":"1092","messageId":"1093","endLine":146,"endColumn":26},{"ruleId":"1110","severity":1,"message":"1111","line":393,"column":21,"nodeType":"1109","endLine":393,"endColumn":90},{"ruleId":"1090","severity":1,"message":"1112","line":2,"column":8,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1113","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1114","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1132","line":9,"column":8,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":12},{"ruleId":"1110","severity":1,"message":"1111","line":181,"column":5,"nodeType":"1109","endLine":181,"endColumn":89},{"ruleId":"1110","severity":1,"message":"1111","line":186,"column":1,"nodeType":"1109","endLine":186,"endColumn":87},{"ruleId":"1090","severity":1,"message":"1187","line":2,"column":8,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1188","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1148","line":17,"column":10,"nodeType":"1092","messageId":"1093","endLine":17,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1189","line":18,"column":8,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1101","line":19,"column":26,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1102","line":19,"column":40,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":45},{"ruleId":"1090","severity":1,"message":"1103","line":19,"column":47,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":53},{"ruleId":"1090","severity":1,"message":"1190","line":30,"column":12,"nodeType":"1092","messageId":"1093","endLine":30,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1191","line":30,"column":17,"nodeType":"1092","messageId":"1093","endLine":30,"endColumn":23},{"ruleId":"1110","severity":1,"message":"1111","line":159,"column":33,"nodeType":"1109","endLine":159,"endColumn":117},{"ruleId":"1110","severity":1,"message":"1111","line":164,"column":29,"nodeType":"1109","endLine":164,"endColumn":115},{"ruleId":"1090","severity":1,"message":"1166","line":22,"column":10,"nodeType":"1092","messageId":"1093","endLine":22,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1210","line":22,"column":18,"nodeType":"1092","messageId":"1093","endLine":22,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1187","line":2,"column":8,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1113","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1114","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1101","line":12,"column":26,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1102","line":12,"column":40,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":45},{"ruleId":"1090","severity":1,"message":"1103","line":12,"column":47,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":53},{"ruleId":"1090","severity":1,"message":"1204","line":27,"column":9,"nodeType":"1092","messageId":"1093","endLine":27,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1205","line":27,"column":18,"nodeType":"1092","messageId":"1093","endLine":27,"endColumn":27},{"ruleId":"1090","severity":1,"message":"1206","line":28,"column":9,"nodeType":"1092","messageId":"1093","endLine":28,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1207","line":28,"column":19,"nodeType":"1092","messageId":"1093","endLine":28,"endColumn":29},{"ruleId":"1090","severity":1,"message":"1208","line":29,"column":8,"nodeType":"1092","messageId":"1093","endLine":29,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1209","line":30,"column":8,"nodeType":"1092","messageId":"1093","endLine":30,"endColumn":18},{"ruleId":"1110","severity":1,"message":"1111","line":307,"column":29,"nodeType":"1109","endLine":307,"endColumn":115},{"ruleId":"1090","severity":1,"message":"1144","line":1,"column":9,"nodeType":"1092","messageId":"1093","endLine":1,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1101","line":2,"column":26,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1102","line":2,"column":40,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":45},{"ruleId":"1090","severity":1,"message":"1103","line":2,"column":47,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":53},{"ruleId":"1145","severity":1,"message":"1146","line":57,"column":37,"nodeType":"1109","endLine":57,"endColumn":40},{"ruleId":"1145","severity":1,"message":"1146","line":64,"column":37,"nodeType":"1109","endLine":64,"endColumn":40},{"ruleId":"1145","severity":1,"message":"1146","line":72,"column":37,"nodeType":"1109","endLine":72,"endColumn":40},{"ruleId":"1090","severity":1,"message":"1099","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1211","line":31,"column":22,"nodeType":"1092","messageId":"1093","endLine":31,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1192","line":20,"column":11,"nodeType":"1092","messageId":"1093","endLine":20,"endColumn":18},{"ruleId":"1193","severity":1,"message":"1194","line":57,"column":63,"nodeType":"1195","messageId":"1196","endLine":57,"endColumn":64},{"ruleId":"1193","severity":1,"message":"1194","line":57,"column":91,"nodeType":"1195","messageId":"1196","endLine":57,"endColumn":92},{"ruleId":"1193","severity":1,"message":"1194","line":57,"column":199,"nodeType":"1195","messageId":"1196","endLine":57,"endColumn":200},{"ruleId":"1197","severity":1,"message":"1198","line":59,"column":14,"nodeType":"1195","messageId":"1199","endLine":59,"endColumn":16},{"ruleId":"1197","severity":1,"message":"1198","line":64,"column":19,"nodeType":"1195","messageId":"1199","endLine":64,"endColumn":21},{"ruleId":"1197","severity":1,"message":"1198","line":68,"column":19,"nodeType":"1195","messageId":"1199","endLine":68,"endColumn":21},{"ruleId":"1197","severity":1,"message":"1198","line":72,"column":19,"nodeType":"1195","messageId":"1199","endLine":72,"endColumn":21},{"ruleId":"1182","severity":1,"message":"1200","line":147,"column":17,"nodeType":"1092","messageId":"1184","endLine":147,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1155","line":73,"column":38,"nodeType":"1092","messageId":"1093","endLine":73,"endColumn":42},{"ruleId":"1090","severity":1,"message":"1156","line":129,"column":16,"nodeType":"1092","messageId":"1093","endLine":129,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1155","line":129,"column":38,"nodeType":"1092","messageId":"1093","endLine":129,"endColumn":42},{"ruleId":"1090","severity":1,"message":"1201","line":129,"column":63,"nodeType":"1092","messageId":"1093","endLine":129,"endColumn":74},{"ruleId":"1090","severity":1,"message":"1157","line":132,"column":15,"nodeType":"1092","messageId":"1093","endLine":132,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1158","line":133,"column":15,"nodeType":"1092","messageId":"1093","endLine":133,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1147","line":1,"column":8,"nodeType":"1092","messageId":"1093","endLine":1,"endColumn":13},{"ruleId":"1149","severity":1,"message":"1150","line":100,"column":34,"nodeType":"1151","messageId":"1152","endLine":100,"endColumn":50,"fix":"1214"},{"ruleId":"1090","severity":1,"message":"1159","line":2,"column":13,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1160","line":3,"column":13,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1161","line":8,"column":13,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":28},{"ruleId":"1090","severity":1,"message":"1203","line":2,"column":15,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":22},{"ruleId":"1090","severity":1,"message":"1091","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1094","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1095","line":34,"column":14,"nodeType":"1092","messageId":"1093","endLine":34,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1096","line":20,"column":17,"nodeType":"1092","messageId":"1093","endLine":20,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1097","line":21,"column":10,"nodeType":"1092","messageId":"1093","endLine":21,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1098","line":22,"column":10,"nodeType":"1092","messageId":"1093","endLine":22,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1099","line":24,"column":9,"nodeType":"1092","messageId":"1093","endLine":24,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1100","line":24,"column":17,"nodeType":"1092","messageId":"1093","endLine":24,"endColumn":27},{"ruleId":"1090","severity":1,"message":"1101","line":25,"column":26,"nodeType":"1092","messageId":"1093","endLine":25,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1102","line":25,"column":40,"nodeType":"1092","messageId":"1093","endLine":25,"endColumn":45},{"ruleId":"1090","severity":1,"message":"1103","line":25,"column":47,"nodeType":"1092","messageId":"1093","endLine":25,"endColumn":53},{"ruleId":"1090","severity":1,"message":"1104","line":30,"column":10,"nodeType":"1092","messageId":"1093","endLine":30,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1105","line":31,"column":10,"nodeType":"1092","messageId":"1093","endLine":31,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1106","line":108,"column":7,"nodeType":"1092","messageId":"1093","endLine":108,"endColumn":13},{"ruleId":"1107","severity":1,"message":"1108","line":119,"column":1,"nodeType":"1109","endLine":124,"endColumn":24},{"ruleId":"1110","severity":1,"message":"1111","line":127,"column":22,"nodeType":"1109","endLine":127,"endColumn":69},{"ruleId":"1107","severity":1,"message":"1108","line":156,"column":5,"nodeType":"1109","endLine":159,"endColumn":36},{"ruleId":"1107","severity":1,"message":"1108","line":162,"column":21,"nodeType":"1109","endLine":164,"endColumn":36},{"ruleId":"1107","severity":1,"message":"1108","line":185,"column":21,"nodeType":"1109","endLine":188,"endColumn":32},{"ruleId":"1107","severity":1,"message":"1108","line":197,"column":9,"nodeType":"1109","endLine":200,"endColumn":32},{"ruleId":"1107","severity":1,"message":"1108","line":208,"column":5,"nodeType":"1109","endLine":210,"endColumn":32},{"ruleId":"1107","severity":1,"message":"1108","line":218,"column":1,"nodeType":"1109","endLine":220,"endColumn":32},{"ruleId":"1107","severity":1,"message":"1108","line":242,"column":1,"nodeType":"1109","endLine":244,"endColumn":32},{"ruleId":"1110","severity":1,"message":"1111","line":8,"column":7,"nodeType":"1109","endLine":8,"endColumn":107},{"ruleId":"1090","severity":1,"message":"1112","line":101,"column":8,"nodeType":"1092","messageId":"1093","endLine":101,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1113","line":103,"column":8,"nodeType":"1092","messageId":"1093","endLine":103,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1114","line":106,"column":8,"nodeType":"1092","messageId":"1093","endLine":106,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1115","line":116,"column":13,"nodeType":"1092","messageId":"1093","endLine":116,"endColumn":16},{"ruleId":"1116","severity":1,"message":"1117","line":188,"column":13,"nodeType":"1118","endLine":188,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1112","line":2,"column":8,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1113","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1114","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1165","line":18,"column":8,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":22},{"ruleId":"1090","severity":1,"message":"1166","line":68,"column":10,"nodeType":"1092","messageId":"1093","endLine":68,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1167","line":79,"column":12,"nodeType":"1092","messageId":"1093","endLine":79,"endColumn":23},{"ruleId":"1090","severity":1,"message":"1112","line":2,"column":8,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1113","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1114","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1132","line":9,"column":8,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1133","line":13,"column":8,"nodeType":"1092","messageId":"1093","endLine":13,"endColumn":24},{"ruleId":"1110","severity":1,"message":"1111","line":52,"column":11,"nodeType":"1109","endLine":52,"endColumn":59},{"ruleId":"1090","severity":1,"message":"1124","line":5,"column":8,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1125","line":9,"column":10,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1126","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":20},{"ruleId":"1127","severity":1,"message":"1128","line":58,"column":1,"nodeType":"1092","endLine":58,"endColumn":10,"suggestions":"1215"},{"ruleId":"1110","severity":1,"message":"1111","line":75,"column":21,"nodeType":"1109","endLine":75,"endColumn":99},{"ruleId":"1110","severity":1,"message":"1111","line":89,"column":25,"nodeType":"1109","endLine":89,"endColumn":74},{"ruleId":"1110","severity":1,"message":"1111","line":90,"column":25,"nodeType":"1109","endLine":90,"endColumn":76},{"ruleId":"1130","severity":1,"message":"1131","line":115,"column":13,"nodeType":"1109","endLine":116,"endColumn":99},{"ruleId":"1090","severity":1,"message":"1119","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1168","line":27,"column":24,"nodeType":"1092","messageId":"1093","endLine":27,"endColumn":43},{"ruleId":"1090","severity":1,"message":"1169","line":80,"column":10,"nodeType":"1092","messageId":"1093","endLine":80,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1170","line":85,"column":13,"nodeType":"1092","messageId":"1093","endLine":85,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1171","line":202,"column":18,"nodeType":"1092","messageId":"1093","endLine":202,"endColumn":31},{"ruleId":"1090","severity":1,"message":"1172","line":543,"column":33,"nodeType":"1092","messageId":"1093","endLine":543,"endColumn":44},{"ruleId":"1090","severity":1,"message":"1173","line":561,"column":33,"nodeType":"1092","messageId":"1093","endLine":561,"endColumn":41},{"ruleId":"1090","severity":1,"message":"1174","line":620,"column":33,"nodeType":"1092","messageId":"1093","endLine":620,"endColumn":49},{"ruleId":"1090","severity":1,"message":"1175","line":637,"column":33,"nodeType":"1092","messageId":"1093","endLine":637,"endColumn":46},{"ruleId":"1090","severity":1,"message":"1176","line":942,"column":18,"nodeType":"1092","messageId":"1093","endLine":942,"endColumn":29},{"ruleId":"1090","severity":1,"message":"1177","line":942,"column":32,"nodeType":"1092","messageId":"1093","endLine":942,"endColumn":46},{"ruleId":"1090","severity":1,"message":"1156","line":955,"column":24,"nodeType":"1092","messageId":"1093","endLine":955,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1120","line":959,"column":24,"nodeType":"1092","messageId":"1093","endLine":959,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1121","line":959,"column":34,"nodeType":"1092","messageId":"1093","endLine":959,"endColumn":45},{"ruleId":"1090","severity":1,"message":"1122","line":960,"column":24,"nodeType":"1092","messageId":"1093","endLine":960,"endColumn":33},{"ruleId":"1090","severity":1,"message":"1123","line":960,"column":35,"nodeType":"1092","messageId":"1093","endLine":960,"endColumn":47},{"ruleId":"1127","severity":1,"message":"1178","line":969,"column":17,"nodeType":"1092","endLine":969,"endColumn":26,"suggestions":"1216"},{"ruleId":"1090","severity":1,"message":"1180","line":1135,"column":27,"nodeType":"1092","messageId":"1093","endLine":1135,"endColumn":42},{"ruleId":"1090","severity":1,"message":"1181","line":1139,"column":29,"nodeType":"1092","messageId":"1093","endLine":1139,"endColumn":38},{"ruleId":"1090","severity":1,"message":"1181","line":1207,"column":29,"nodeType":"1092","messageId":"1093","endLine":1207,"endColumn":38},{"ruleId":"1182","severity":1,"message":"1183","line":1291,"column":33,"nodeType":"1092","messageId":"1184","endLine":1291,"endColumn":40},{"ruleId":"1090","severity":1,"message":"1185","line":1324,"column":25,"nodeType":"1092","messageId":"1093","endLine":1324,"endColumn":32},{"ruleId":"1116","severity":1,"message":"1117","line":1809,"column":49,"nodeType":"1118","endLine":1809,"endColumn":66},{"ruleId":"1116","severity":1,"message":"1117","line":2230,"column":25,"nodeType":"1118","endLine":2230,"endColumn":42},{"ruleId":"1116","severity":1,"message":"1117","line":2664,"column":25,"nodeType":"1118","endLine":2664,"endColumn":42},{"ruleId":"1116","severity":1,"message":"1117","line":2814,"column":16,"nodeType":"1118","endLine":2814,"endColumn":33},{"ruleId":"1116","severity":1,"message":"1117","line":2815,"column":17,"nodeType":"1118","endLine":2815,"endColumn":49},{"ruleId":"1116","severity":1,"message":"1117","line":3131,"column":49,"nodeType":"1118","endLine":3131,"endColumn":66},{"ruleId":"1090","severity":1,"message":"1134","line":8,"column":8,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1135","line":17,"column":8,"nodeType":"1092","messageId":"1093","endLine":17,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1136","line":18,"column":8,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1137","line":20,"column":10,"nodeType":"1092","messageId":"1093","endLine":20,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1138","line":20,"column":23,"nodeType":"1092","messageId":"1093","endLine":20,"endColumn":34},{"ruleId":"1090","severity":1,"message":"1139","line":28,"column":7,"nodeType":"1092","messageId":"1093","endLine":28,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1140","line":123,"column":12,"nodeType":"1092","messageId":"1093","endLine":123,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1141","line":123,"column":20,"nodeType":"1092","messageId":"1093","endLine":123,"endColumn":29},{"ruleId":"1090","severity":1,"message":"1142","line":135,"column":11,"nodeType":"1092","messageId":"1093","endLine":135,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1143","line":146,"column":11,"nodeType":"1092","messageId":"1093","endLine":146,"endColumn":26},{"ruleId":"1110","severity":1,"message":"1111","line":393,"column":21,"nodeType":"1109","endLine":393,"endColumn":90},{"ruleId":"1090","severity":1,"message":"1112","line":2,"column":8,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1113","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1114","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1132","line":9,"column":8,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":12},{"ruleId":"1110","severity":1,"message":"1111","line":181,"column":5,"nodeType":"1109","endLine":181,"endColumn":89},{"ruleId":"1110","severity":1,"message":"1111","line":186,"column":1,"nodeType":"1109","endLine":186,"endColumn":87},{"ruleId":"1090","severity":1,"message":"1187","line":2,"column":8,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1188","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1148","line":17,"column":10,"nodeType":"1092","messageId":"1093","endLine":17,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1189","line":18,"column":8,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1101","line":19,"column":26,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1102","line":19,"column":40,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":45},{"ruleId":"1090","severity":1,"message":"1103","line":19,"column":47,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":53},{"ruleId":"1090","severity":1,"message":"1190","line":30,"column":12,"nodeType":"1092","messageId":"1093","endLine":30,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1191","line":30,"column":17,"nodeType":"1092","messageId":"1093","endLine":30,"endColumn":23},{"ruleId":"1110","severity":1,"message":"1111","line":159,"column":33,"nodeType":"1109","endLine":159,"endColumn":117},{"ruleId":"1110","severity":1,"message":"1111","line":164,"column":29,"nodeType":"1109","endLine":164,"endColumn":115},{"ruleId":"1090","severity":1,"message":"1187","line":2,"column":8,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1113","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1114","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1101","line":12,"column":26,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1102","line":12,"column":40,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":45},{"ruleId":"1090","severity":1,"message":"1103","line":12,"column":47,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":53},{"ruleId":"1090","severity":1,"message":"1204","line":27,"column":9,"nodeType":"1092","messageId":"1093","endLine":27,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1205","line":27,"column":18,"nodeType":"1092","messageId":"1093","endLine":27,"endColumn":27},{"ruleId":"1090","severity":1,"message":"1206","line":28,"column":9,"nodeType":"1092","messageId":"1093","endLine":28,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1207","line":28,"column":19,"nodeType":"1092","messageId":"1093","endLine":28,"endColumn":29},{"ruleId":"1090","severity":1,"message":"1208","line":29,"column":8,"nodeType":"1092","messageId":"1093","endLine":29,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1209","line":30,"column":8,"nodeType":"1092","messageId":"1093","endLine":30,"endColumn":18},{"ruleId":"1110","severity":1,"message":"1111","line":307,"column":29,"nodeType":"1109","endLine":307,"endColumn":115},{"ruleId":"1090","severity":1,"message":"1166","line":22,"column":10,"nodeType":"1092","messageId":"1093","endLine":22,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1210","line":22,"column":18,"nodeType":"1092","messageId":"1093","endLine":22,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1144","line":1,"column":9,"nodeType":"1092","messageId":"1093","endLine":1,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1101","line":2,"column":26,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1102","line":2,"column":40,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":45},{"ruleId":"1090","severity":1,"message":"1103","line":2,"column":47,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":53},{"ruleId":"1145","severity":1,"message":"1146","line":57,"column":37,"nodeType":"1109","endLine":57,"endColumn":40},{"ruleId":"1145","severity":1,"message":"1146","line":64,"column":37,"nodeType":"1109","endLine":64,"endColumn":40},{"ruleId":"1145","severity":1,"message":"1146","line":72,"column":37,"nodeType":"1109","endLine":72,"endColumn":40},{"ruleId":"1090","severity":1,"message":"1099","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1211","line":31,"column":22,"nodeType":"1092","messageId":"1093","endLine":31,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1147","line":1,"column":8,"nodeType":"1092","messageId":"1093","endLine":1,"endColumn":13},{"ruleId":"1149","severity":1,"message":"1150","line":100,"column":34,"nodeType":"1151","messageId":"1152","endLine":100,"endColumn":50,"fix":"1217"},{"ruleId":"1090","severity":1,"message":"1192","line":20,"column":11,"nodeType":"1092","messageId":"1093","endLine":20,"endColumn":18},{"ruleId":"1193","severity":1,"message":"1194","line":57,"column":63,"nodeType":"1195","messageId":"1196","endLine":57,"endColumn":64},{"ruleId":"1193","severity":1,"message":"1194","line":57,"column":91,"nodeType":"1195","messageId":"1196","endLine":57,"endColumn":92},{"ruleId":"1193","severity":1,"message":"1194","line":57,"column":199,"nodeType":"1195","messageId":"1196","endLine":57,"endColumn":200},{"ruleId":"1197","severity":1,"message":"1198","line":59,"column":14,"nodeType":"1195","messageId":"1199","endLine":59,"endColumn":16},{"ruleId":"1197","severity":1,"message":"1198","line":64,"column":19,"nodeType":"1195","messageId":"1199","endLine":64,"endColumn":21},{"ruleId":"1197","severity":1,"message":"1198","line":68,"column":19,"nodeType":"1195","messageId":"1199","endLine":68,"endColumn":21},{"ruleId":"1197","severity":1,"message":"1198","line":72,"column":19,"nodeType":"1195","messageId":"1199","endLine":72,"endColumn":21},{"ruleId":"1182","severity":1,"message":"1200","line":147,"column":17,"nodeType":"1092","messageId":"1184","endLine":147,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1155","line":73,"column":38,"nodeType":"1092","messageId":"1093","endLine":73,"endColumn":42},{"ruleId":"1090","severity":1,"message":"1156","line":129,"column":16,"nodeType":"1092","messageId":"1093","endLine":129,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1155","line":129,"column":38,"nodeType":"1092","messageId":"1093","endLine":129,"endColumn":42},{"ruleId":"1090","severity":1,"message":"1201","line":129,"column":63,"nodeType":"1092","messageId":"1093","endLine":129,"endColumn":74},{"ruleId":"1090","severity":1,"message":"1157","line":132,"column":15,"nodeType":"1092","messageId":"1093","endLine":132,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1158","line":133,"column":15,"nodeType":"1092","messageId":"1093","endLine":133,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1159","line":2,"column":13,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1160","line":3,"column":13,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1161","line":8,"column":13,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":28},{"ruleId":"1090","severity":1,"message":"1203","line":2,"column":15,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":22},"no-native-reassign",["1218"],"no-negated-in-lhs",["1219"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'PostForm' is defined but never used.","'forceUpdateHandler' is defined but never used.","'useEffect' is defined but never used.","'Spin' is defined but never used.","'check' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'FaBeer' is defined but never used.","'LogoNodejs' is defined but never used.","'Sketch' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Box' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'jwt' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'AppBar' is defined but never used.","'devWidth' is assigned a value but never used.","'setDevWidth' is assigned a value but never used.","'devHeight' is assigned a value but never used.","'setDevHeight' is assigned a value but never used.","'home1' is defined but never used.","'Icon' is defined but never used.","'locationIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setWindowDimensions'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [windowDimensions] as a second argument to the useEffect Hook.",["1220"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Link' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'InputBase' is defined but never used.","'SearchIcon' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'StyledBadge' is assigned a value but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'isMenuOpen' is assigned a value but never used.","'handleMenuClose' is assigned a value but never used.","'makeStyles' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'React' is defined but never used.","'toast' is defined but never used.","no-useless-computed-key","Unnecessarily computed property [\"bottom\"] found.","Property","unnecessarilyComputedProperty",{"range":"1221","text":"1222"},"'elements' is defined but never used.","'type' is assigned a value but never used.","'id' is assigned a value but never used.","'nexX1' is assigned a value but never used.","'nexY1' is assigned a value but never used.","'myArr' is defined but never used.","'setMyArr' is defined but never used.","'selectedElement' is defined but never used.","'Konva' is defined but never used.",["1218"],["1219"],"'StripeCheckout' is defined but never used.","'token' is assigned a value but never used.","'handleToken' is defined but never used.","'MaterialButtonGroup' is defined but never used.","'custom' is defined but never used.","'canv' is assigned a value but never used.","'myColorPicker' is defined but never used.","'totalBricks' is assigned a value but never used.","'Dplaster' is assigned a value but never used.","'totalBricksTotal' is assigned a value but never used.","'DplasterTotal' is assigned a value but never used.","'estimateArr' is assigned a value but never used.","'setEstimateArr' is assigned a value but never used.","React Hook useEffect contains a call to 'setWindowDimensions'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [windowDimensions, isMobile] as a second argument to the useEffect Hook.",["1223"],"'handleCalculate' is assigned a value but never used.","'myElement' is assigned a value but never used.","no-redeclare","'EstCost' is already defined.","redeclared","'getJson' is assigned a value but never used.",["1224"],"'welcome' is defined but never used.","'change' is defined but never used.","'TextField' is defined but never used.","'sub' is assigned a value but never used.","'setSub' is assigned a value but never used.","'context' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'body' is already defined.","'strokeWidth' is assigned a value but never used.",{"range":"1225","text":"1222"},"'setWall' is defined but never used.","'widthh' is defined but never used.","'setWidthh' is defined but never used.","'heightt' is defined but never used.","'setHeightt' is defined but never used.","'setMyVar' is defined but never used.","'totalLayer' is defined but never used.","'setToken' is assigned a value but never used.","'setSuccess' is assigned a value but never used.",["1226"],["1227"],{"range":"1228","text":"1222"},["1229"],["1230"],{"range":"1231","text":"1222"},"no-global-assign","no-unsafe-negation",{"desc":"1232","fix":"1233"},[1162,1172],"\"bottom\"",{"desc":"1234","fix":"1235"},{"desc":"1232","fix":"1236"},[3151,3161],{"desc":"1232","fix":"1237"},{"desc":"1234","fix":"1238"},[3151,3161],{"desc":"1232","fix":"1239"},{"desc":"1234","fix":"1240"},[3187,3197],"Add dependencies array: [windowDimensions]",{"range":"1241","text":"1242"},"Add dependencies array: [windowDimensions, isMobile]",{"range":"1243","text":"1244"},{"range":"1245","text":"1242"},{"range":"1246","text":"1242"},{"range":"1247","text":"1244"},{"range":"1248","text":"1242"},{"range":"1249","text":"1244"},[1691,1691],", [windowDimensions]",[58993,58993],", [windowDimensions, isMobile]",[1691,1691],[1691,1691],[58993,58993],[1691,1691],[58993,58993]]