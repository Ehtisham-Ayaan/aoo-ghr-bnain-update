{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alpha\\\\OneDrive\\\\myapp\\\\client\\\\src\\\\sketch.js\",\n    _s = $RefreshSig$();\n\nimport './css/App.css';\nimport React, { useLayoutEffect, useEffect, useState } from 'react';\nimport rough from 'roughjs/bundled/rough.esm';\nimport Button from '@material-ui/core/Button';\nimport clsx from 'clsx';\nimport TabPanel from \"./sketchHelper/TabPanel\";\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { Avatar, Input, InputAdornment, InputLabel, Menu, MenuItem } from \"@material-ui/core\";\nimport SwapHorizontalCircleIcon from '@material-ui/icons/SwapHorizontalCircle';\nimport BuildIcon from '@material-ui/icons/Build';\nimport LandscapeIcon from '@material-ui/icons/Landscape';\nimport SwapVerticalCircleIcon from '@material-ui/icons/SwapVerticalCircle';\nimport useStyles from \"./sketchHelper/useStyles\";\nimport { handleMouseDown } from \"./sketchHelper/handleMouseDown\";\nimport { handleMouseUp } from \"./sketchHelper/handleMouseUp\";\nimport { handleMouseMove } from \"./sketchHelper/handleMouseMove\";\nimport { handleSave } from \"./sketchHelper/handleSave\";\nimport { isWithinElement } from \"./sketchHelper/isWithinElement\";\nimport { toggleDrawer } from \"./sketchHelper/toggleDrawer\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { scrapMe } from './scrapMe';\nimport { toast } from \"react-toastify\";\nimport UserServices from \"./services/UserServices\";\nimport { Spin } from 'antd';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport surface from './img/surface.jpg';\nimport steel from './img/steel.jpg';\nimport brick from './img/brick.jpg';\nimport sand from './img/sand.jpg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { faVoteYea } from \"@fortawesome/free-solid-svg-icons\";\nimport { faIndustry } from \"@fortawesome/free-solid-svg-icons\";\nimport { faGripLinesVertical } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCircleNotch } from \"@fortawesome/free-solid-svg-icons\";\nimport { faDoorOpen } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { faEraser } from \"@fortawesome/free-solid-svg-icons\";\nimport { faFileDownload } from \"@fortawesome/free-solid-svg-icons\";\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport { sketchData } from './users/userDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet heightt;\nlet widthh;\nlet item = 0;\nlet canv = null;\nlet canvWidth,\n    setCanvWidth = null;\nlet canvHeight,\n    setCanvHeight = null;\nlet ElementWidth,\n    setElementWidth = null;\nlet ElementLength,\n    setElementLength = null;\nlet error, setError;\nlet canvas = null;\nlet totalLayer = 0;\nlet tool, setTool;\nlet elements, setElements;\nlet myElements, setMyElements;\nlet myVar, setMyVar;\nlet selectedElement, setSelectedElement;\nlet action, setAction;\nlet state, setState;\nlet open, setOpen;\nlet myArr, setMyArr;\nlet price, setPrice;\nlet title, setTitle;\nlet image, setImage;\nlet price2, setPrice2;\nlet title2, setTitle2;\nlet image2, setImage2;\nlet price3, setPrice3;\nlet title3, setTitle3;\nlet image3, setImage3;\nlet steelPrice, setSteelPrice;\nlet steelTitle, setSteelTitle;\nlet steelImage, setSteelImage;\nlet steelPrice2, setSteelPrice2;\nlet steelTitle2, setSteelTitle2;\nlet steelImage2, setSteelImage2;\nlet steelPrice3, setSteelPrice3;\nlet steelTitle3, setSteelTitle3;\nlet steelImage3, setSteelImage3;\nlet loading, setLoading;\nlet value, setValue;\nlet steelValue, setSteelValue;\nlet bricksValue, setBricksValue;\nlet sandValue, setSandValue;\nlet marla = 0;\nexport { totalLayer };\nexport { widthh };\nexport { heightt };\nexport { canvWidth, canvHeight };\nexport { ElementWidth, ElementLength, setElementLength, setElementWidth };\nexport { error, setError };\nexport { canvas };\nexport { tool, setTool };\nexport { elements, setElements };\nexport { selectedElement, setSelectedElement };\nexport { action, setAction };\nexport { state, setState };\nexport { open, setOpen };\nexport { myArr, setMyArr };\nexport { price, setPrice };\nexport { title, setTitle };\nexport { image, setImage };\nexport { price2, setPrice2 };\nexport { title2, setTitle2 };\nexport { image2, setImage2 };\nexport { price3, setPrice3 };\nexport { title3, setTitle3 };\nexport { image3, setImage3 };\nexport { steelPrice, setSteelPrice };\nexport { steelTitle, setSteelTitle };\nexport { steelImage, setSteelImage };\nexport { steelPrice2, setSteelPrice2 };\nexport { steelTitle2, setSteelTitle2 };\nexport { steelImage2, setSteelImage2 };\nexport { steelPrice3, setSteelPrice3 };\nexport { steelTitle3, setSteelTitle3 };\nexport { steelImage3, setSteelImage3 };\nexport { loading, setLoading };\nexport { value, setValue };\nexport { steelValue, setSteelValue };\nexport { bricksValue, setBricksValue };\nexport { sandValue, setSandValue };\nexport let mouse = {\n  x: 0,\n  y: 0,\n  events: \"mousemove,mousedown,mouseup\"\n};\nexport const list = anchor => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: clsx(useStyles.list, {\n    [useStyles.fullList]: anchor === 'top' || anchor === 'bottom'\n  }),\n  role: \"presentation\" // onClick={toggleDrawer(anchor, false)}\n  // onKeyDown={toggleDrawer(anchor, false)}\n  ,\n  children: loading ? /*#__PURE__*/_jsxDEV(List, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Spin, {\n      style: {\n        width: '100%',\n        marginTop: '20%',\n        marginBottom: '20%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 34\n    }, this)].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n      button: true,\n      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 40\n      }, this)]\n    }, text, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 36\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 32\n  }, this) : /*#__PURE__*/_jsxDEV(List, {\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"Cement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        \"aria-label\": \"gender\",\n        name: \"cement\",\n        value: value,\n        onChange: event => setValue(event.target.value),\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: price,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 74\n          }, this),\n          label: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 33\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: 'black',\n            marginLeft: '25%'\n          },\n          children: price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 102\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: price2,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 75\n          }, this),\n          label: title2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 33\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: 'black',\n            marginLeft: '25%'\n          },\n          children: price2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 105\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: price3,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 76\n          }, this),\n          label: title3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 34\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: 'black',\n            marginLeft: '25%'\n          },\n          children: price3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 105\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"Steel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        \"aria-label\": \"gender\",\n        name: \"steel\",\n        value: steelValue,\n        onChange: event => setSteelValue(event.target.value),\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"136.9\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 74\n          }, this),\n          label: steelTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 33\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: 'black',\n            marginLeft: '25%'\n          },\n          children: [\"Per Ton ... \", steelPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 107\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"137\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 72\n          }, this),\n          label: steelTitle2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 33\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: 'black',\n            marginLeft: '25%'\n          },\n          children: [\"Per Ton ... \", steelPrice2]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 107\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"137.1\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 75\n          }, this),\n          label: steelTitle3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 34\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: 'black',\n            marginLeft: '25%'\n          },\n          children: [\"Per Ton ... \", steelPrice3]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 109\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"Bricks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        \"aria-label\": \"gender\",\n        name: \"steel\",\n        value: bricksValue,\n        onChange: event => setBricksValue(event.target.value),\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"13.2\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 81\n          }, this),\n          label: \"level 1 Bricks (Awwal A+)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 41\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: 'black',\n            marginLeft: '25%'\n          },\n          children: \"Per 1000 ... PKR 13,200\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 129\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"12.8\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 85\n          }, this),\n          label: \"level 1- Bricks (Awwal A)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 45\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: 'black',\n            marginLeft: '25%'\n          },\n          children: \"Per 1000 ... PKR 12,800\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 134\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"9.2\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 85\n          }, this),\n          label: \"level 2 Bricks (Doam)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 46\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: 'black',\n            marginLeft: '25%'\n          },\n          children: \"Per 1000 ... PKR 9,200\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 129\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"8.8\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 85\n          }, this),\n          label: \"level 3 Bricks (Khangar)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 46\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: 'black',\n            marginLeft: '25%'\n          },\n          children: \"Per 1000 ... PKR 8,800\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 132\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"Sand (Construction)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        \"aria-label\": \"gender\",\n        name: \"steel\",\n        value: sandValue,\n        onChange: event => setSandValue(event.target.value),\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"29500\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 74\n          }, this),\n          label: \"Chanab Sand A+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 33\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: 'black',\n            marginLeft: '25%'\n          },\n          children: \"Per Trolly 900 CFT ... PKR 29,500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 111\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"28000\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 74\n          }, this),\n          label: \"Chanab Sand B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 33\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: 'black',\n            marginLeft: '25%'\n          },\n          children: \"Per Trolly 900 CFT ... PKR 28,000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 111\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"24000\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 75\n          }, this),\n          label: \"Chanab Sand C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 34\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: 'black',\n            marginLeft: '25%'\n          },\n          children: \"Per Trolly 900 CFT ... PKR 24,000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 111\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"12000\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 73\n          }, this),\n          label: \"Ravi Sand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 32\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: 'black',\n            marginLeft: '25%'\n          },\n          children: \"Per Trolly 700 CFT ... PKR 12,000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 105\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        // setState(\"bottom\" , false)\n        console.log(value);\n        console.log(steelValue);\n        console.log(bricksValue);\n        console.log(sandValue);\n      },\n      children: \"Apply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 25\n    }, this)].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n      button: true,\n      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n        children: index === 0 ? /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: \"Remy Sharp\",\n          variant: \"rounded\",\n          src: surface\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 59\n        }, this) : index === 1 ? /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: \"Remy Sharp\",\n          variant: \"rounded\",\n          src: steel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 59\n        }, this) : index === 2 ? /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: \"Remy Sharp\",\n          variant: \"rounded\",\n          src: brick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 59\n        }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: \"Remy Sharp\",\n          variant: \"rounded\",\n          src: sand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 29\n      }, this)]\n    }, text, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 25\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 21\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 157,\n  columnNumber: 13\n}, this);\nexport const distance = (a, b) => Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\nexport const getElementAtPosition = (x, y, elements) => {\n  return elements.find(element => isWithinElement(x, y, element));\n};\nexport const handleDrawerOpen = () => {\n  setOpen(true);\n};\nexport const handleDrawerClose = () => {\n  setOpen(false);\n};\nexport const handleError = () => {\n  setError(false);\n}; // const isWithinCanvas = (x,y, element) => {\n//     const {x1, y1, x2, y2} = element;\n//\n//         const minX = Math.min(x1, x2);\n//         const maxX = Math.max(x1, x2);\n//         const minY = Math.min(y1, y2);\n//         const maxy = Math.max(y1, y2);\n//         return x >= minX && x <= maxX && y <= maxy && y >= minY;\n//\n// }\n// export function putCanvs() {\n//     // for (let item = 0; item < 20; item++) {\n//     //     if (count !== 0 && count%5 === 0) {\n//     //         document.write(\" ||| \");\n//     //     }\n//     // canv.setAttribute('width', window.innerWidth);\n//     if (widthh !== null) {\n//         item = item + 1;\n//         totalLayer = totalLayer + 1;\n//         const texta = document.createElement(\"input\");\n//         texta.setAttribute('id', 'itemNo'\n//         + item\n//         );\n//         texta.textContent = '111';\n//         canv = document.createElement(\"canvas\");\n//         canv.width = canvas.width;\n//         // canv.setAttribute('height', window.innerHeight * heightt/100);\n//         canv.height = canvas.height;\n//         canv.setAttribute('id', 'canv'\n//         + item\n//         );\n//         alert(totalLayer);\n//         canv.style.background = \"#c0c6c5\";\n//         canv.style.border = \"5px solid darkslategrey\";\n//         canv.style.margin = \"14.4%\";\n//         document.body.appendChild(canv);\n//         canv.addEventListener('mousedown' , handleMouseDown , true);\n//         canv.addEventListener('mouseup' , handleMouseUp , true);\n//         canv.addEventListener('mousemove' , handleMouseMove , true);\n//         canv.onmousedown = handleMouseDown;\n//         canv.onmouseup = handleMouseUp;\n//         canv.onmousemove = handleMouseMove;\n//         const C = document.getElementById(canv.getAttribute('id'));\n//         if (C.getContext) {\n//             if (C.getContext) {\n//                 makePlot(C);\n//             }\n//         }\n//     }\n//     else {\n//         alert(\"Please Enter Width and Length First\");\n//         setOpen(true);\n//     }\n// }\n// function makePlot(elem) {\n//     const ctx = elem.getContext(\"2d\");\n//     ctx.fillStyle   = '#00f';\n//     ctx.strokeStyle = 'black';\n//     ctx.lineWidth   = 5;\n//     ctx.borderBlock = 1;\n// }\n\nfunction saveLayer() {\n  console.log(elements);\n  setMyElements(elements); // myVar[totalLayer] = elements\n\n  myVar[item] = elements;\n  console.log(myElements);\n}\n\nfunction addLayer() {\n  console.log(elements);\n  setMyElements(elements);\n  myVar[totalLayer] = elements;\n  console.log(myElements);\n  setElements([]);\n  item = item + 1;\n  totalLayer = totalLayer + 1; // alert(\"Your Current Layer: \" + totalLayer);\n  // alert(\"Your Current Element: \" + item);\n}\n\nfunction App() {\n  _s();\n\n  [tool, setTool] = useState(\"selection\");\n  [elements, setElements] = useState([]);\n  [action, setAction] = useState('none');\n  [canvWidth, setCanvWidth] = useState(null);\n  [canvHeight, setCanvHeight] = useState(null);\n  [myArr, setMyArr] = useState([]);\n  [ElementWidth, setElementWidth] = useState(null);\n  [ElementLength, setElementLength] = useState(null);\n  [selectedElement, setSelectedElement] = useState(null);\n  [error, setError] = useState(false);\n  [price, setPrice] = useState(null);\n  [title, setTitle] = useState(null);\n  [image, setImage] = useState(null);\n  [price2, setPrice2] = useState(null);\n  [title2, setTitle2] = useState(null);\n  [image2, setImage2] = useState(null);\n  [price3, setPrice3] = useState(null);\n  [title3, setTitle3] = useState(null);\n  [image3, setImage3] = useState(null);\n  [steelPrice, setSteelPrice] = useState(null);\n  [steelTitle, setSteelTitle] = useState(null);\n  [steelImage, setSteelImage] = useState(null);\n  [steelPrice2, setSteelPrice2] = useState(null);\n  [steelTitle2, setSteelTitle2] = useState(null);\n  [steelImage2, setSteelImage2] = useState(null);\n  [steelPrice3, setSteelPrice3] = useState(null);\n  [steelTitle3, setSteelTitle3] = useState(null);\n  [steelImage3, setSteelImage3] = useState(null);\n  [loading, setLoading] = useState(false);\n  [value, setValue] = React.useState(null);\n  [steelValue, setSteelValue] = React.useState(null);\n  [bricksValue, setBricksValue] = React.useState(null);\n  [sandValue, setSandValue] = React.useState(null);\n  [myElements, setMyElements] = useState([]);\n  [myVar, setMyVar] = useState([]);\n  let [name, setName] = useState(undefined);\n  const [id, setId] = useState(null);\n  const [devWidth, setDevWidth] = useState(null);\n  const [devHeight, setDevHeight] = useState(null);\n\n  const getData = () => {\n    if (sketchData) {\n      setId(sketchData.id);\n      setName(sketchData.name);\n      alert(sketchData.width);\n      widthh = sketchData.width; // setWidthh( sketchData.width ) \n\n      heightt = sketchData.height;\n      totalLayer = sketchData.layer;\n      setMyVar(JSON.parse(sketchData.sketch));\n      canvas = document.getElementById(\"canvas\");\n      setCanvWidth(window.innerWidth * widthh / 100);\n      setCanvHeight(window.innerWidth * heightt / 100);\n      canvas.width = canvWidth;\n      canvas.height = canvHeight;\n      marla = widthh * heightt / 270;\n      document.getElementById(\"marla\").value = marla;\n      document.getElementById(\"height\").value = heightt;\n      document.getElementById(\"width\").value = widthh;\n    } else {\n      alert(\"No Data Found\");\n    }\n  }; // let canv = null;\n  // }\n\n\n  useLayoutEffect(() => {\n    if (widthh !== null) {\n      canvas = document.getElementById('canvas');\n      const context = canvas.getContext('2d');\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      const roughCanvas = rough.canvas(canvas);\n      elements.forEach(({\n        roughElement\n      }) => roughCanvas.draw(roughElement)); // const roughCanvas222 = rough.canvas(canvas2);\n      // elements.forEach(({roughElement}) => roughCanvas222.draw(roughElement));\n      //\n      //      canv = document.getElementById('canv' + 1);\n      //     const ctx = canv.getContext('2d');\n      //     ctx.clearRect(0,0,canvas.width, canvas.height);\n      //\n      //     const roughCanvas2 = rough.canvas(canv);\n      //     elements.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n      // for(let i = 1 ; i <= item ; i ++) {\n      //     const cnv = document.getElementById('canv' + item);\n      //     const ctx = cnv.getContext('2d');\n      //     ctx.clearRect(0,0,cnv.width, cnv.height);\n      //     const roughCanvas2 = rough.canvas(cnv);\n      //     // let element+item;\n      //     // let\n      //     elements.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n      // }\n    } else {\n      alert(\"Please Enter Width and Length First\");\n      setOpen(true);\n    }\n  } // ,\n  // [\n  //     elements , canvas , item\n  // ]\n  );\n\n  function handleWrite() {\n    const context = canvas.getContext('2d');\n    const wrt = document.getElementById(\"write\").value;\n    context.fillStyle = \"white\";\n    context.font = \"bold 16px Arial\";\n    context.fillText(wrt, canvas.width / 2 - 17, canvas.height / 2 + 8);\n  }\n\n  const classes = useStyles();\n  const theme = useTheme();\n  [open, setOpen] = React.useState(false);\n  [state, setState] = React.useState({\n    bottom: false\n  });\n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired\n  };\n\n  const handleSubmit = () => {\n    heightt = document.getElementById(\"height\").value;\n    widthh = document.getElementById(\"width\").value;\n    alert(\" Length  \" + heightt + \"   width  \" + widthh + \"   was submitted\");\n    canvas = document.getElementById(\"canvas\");\n    setCanvWidth(window.innerWidth * widthh / 100);\n    setCanvHeight(window.innerWidth * heightt / 100);\n    canvas.width = canvWidth;\n    canvas.height = canvHeight;\n    marla = widthh * heightt / 270;\n    document.getElementById(\"marla\").value = marla;\n  };\n\n  const handleCalculate = () => {\n    const totalArea = widthh * heightt;\n    const enteredArea = document.getElementById(\"area\").value;\n    let myElement = 0;\n    const totalCost = totalArea * 250;\n    const cost = enteredArea * 250;\n    let myJs = JSON.stringify(elements);\n    setMyArr(JSON.parse(myJs));\n    let estimatess1 = 0;\n    let estimatess2 = 0;\n\n    for (var i = 0; i < myArr.length; i++) {\n      // console.log( myArr[i].type);\n      // console.log( myArr[i].x1);\n      // console.log( myArr[i].x2);\n      // console.log( myArr[i].y2);\n      // console.log( myArr[i].y1);\n      // console.log( (myArr[i].x2-myArr[i].x1)  / 15.36);\n      // console.log( (myArr[i].y2-myArr[i].y1)  / 15.36);\n      estimatess1 = estimatess1 + (myArr[i].x2 - myArr[i].x1) / 15.36;\n      estimatess2 = estimatess2 + (myArr[i].y2 - myArr[i].y1) / 15.36; // myElement ++ ;\n    }\n\n    if (marla < estimatess1 * estimatess2 / 270) {\n      console.log(\"Total Area Created Feet  \" + widthh * heightt);\n      console.log(\"Total Area Created Marla \" + marla);\n    } else {\n      console.log(\"Total Area Created Feet  \" + estimatess1 * estimatess2);\n      console.log(\"Total Area Created Marla \" + estimatess1 * estimatess2 / 270);\n    }\n\n    document.getElementById(\"myArea\").value = totalCost;\n    document.getElementById(\"eArea\").value = cost;\n\n    if (marla < estimatess1 * estimatess2 / 270) {\n      document.getElementById(\"cArea\").value = widthh * heightt * 250;\n    } else {\n      document.getElementById(\"cArea\").value = estimatess1 * estimatess2 * 250;\n    } // console.log(value)\n\n  };\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const [view, setView] = React.useState('list');\n\n  const handleChange = (event, nextView) => {\n    setView(nextView);\n  };\n\n  let getJson = () => {\n    let myJs = JSON.stringify(elements);\n    setMyArr(JSON.parse(myJs));\n    console.log(myArr);\n  };\n\n  let lessItem = () => {\n    if (myVar[totalLayer] === undefined) {\n      saveLayer();\n    }\n\n    if (item > 0) {\n      item = item - 1;\n      setElements(myVar[item]); // myVar[item] = elements\n      // saveLayer(item)\n    } else {\n      toast.success(\"Already on First\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n  };\n\n  let upItem = () => {\n    if (item < totalLayer) {\n      item = item + 1;\n      setElements(myVar[item]); // myVar[item] = elements\n      // saveLayer(item)\n    } else {\n      toast.success(\"Already on Last\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n  }; // var canvas = document.getElementById(\"canvas\"),\n  //     ctx = canvas.getContext(\"2d\");\n  // var b = ball[i];\n  // b.draw(b.x, b.y, b.color ,b.radius);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflow: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        noWrap: true,\n        className: classes.title,\n        style: {\n          color: \"#4E4141\"\n        },\n        children: ['bottom'].map(anchor => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Drawer, {\n            anchor: anchor,\n            open: state[anchor],\n            onClose: toggleDrawer(anchor, false),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.drawerHeader,\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => {\n                  setState(\"bottom\", false);\n                },\n                children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 785,\n                  columnNumber: 78\n                }, this) : /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 785,\n                  columnNumber: 100\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 784,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 783,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 789,\n              columnNumber: 45\n            }, this), list(anchor)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 45\n          }, this)\n        }, anchor, false, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 41\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"right\",\n      open: open,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.drawerHeader,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 70\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 92\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Enter Width (feet)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"width\",\n            type: \"number\",\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(SwapHorizontalCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 827,\n                columnNumber: 57\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Enter Length (feet)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"height\",\n            type: \"number\",\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(SwapVerticalCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 839,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 838,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            value: \"Submit\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Your current Marla is : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"marla\",\n            type: \"number\",\n            step: \"any\",\n            readOnly: true,\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 850,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Enter Text \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"write\",\n            type: \"text\",\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 871,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleWrite,\n            children: \"Write\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 876,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Enter Area (Sq. feet)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 880,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"area\",\n            type: \"number\",\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: [/*#__PURE__*/_jsxDEV(SwapHorizontalCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 886,\n                columnNumber: 57\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 886,\n                columnNumber: 86\n              }, this), /*#__PURE__*/_jsxDEV(SwapVerticalCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 887,\n                columnNumber: 57\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 885,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 878,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          value: \"calculate\",\n          onClick: scrapMe,\n          children: \"Select Material\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"est\",\n          value: \"calculate\",\n          onClick: handleCalculate,\n          children: \"Estimate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 900,\n          columnNumber: 37\n        }, this)].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(BuildIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 910,\n              columnNumber: 78\n            }, this) : /*#__PURE__*/_jsxDEV(LandscapeIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 910,\n              columnNumber: 95\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 910,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 911,\n            columnNumber: 45\n          }, this)]\n        }, text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 41\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Total Cost of total area \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 921,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"myArea\",\n            type: \"number\",\n            step: \"any\",\n            readOnly: true,\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 929,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 923,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Total Cost of Entered Area \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"eArea\",\n            type: \"number\",\n            step: \"any\",\n            readOnly: true,\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 944,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 938,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 934,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Total Cost of Created Area (Without Material) \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 949,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"cArea\",\n            step: \"any\",\n            readOnly: true,\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 955,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 950,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 45\n        }, this)].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 963,\n              columnNumber: 78\n            }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 963,\n              columnNumber: 94\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 963,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 964,\n            columnNumber: 45\n          }, this)]\n        }, text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 962,\n          columnNumber: 41\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          orientation: \"vertical\",\n          value: view,\n          exclusive: true,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"#ffffff\",\n            \"aria-label\": \"open drawer\",\n            edge: \"end\",\n            onClick: handleDrawerOpen,\n            className: clsx(open && classes.hide),\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 988,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 45\n          }, this), UserServices.isLoggedin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: getData,\n              children: \"get data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 995,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: e => {\n                name = prompt(\"Please Enter name of your Sketch\");\n\n                if (name) {\n                  UserServices.save(name, myVar, widthh, heightt, totalLayer, UserServices.getLoggedinfo().id).then(data => {\n                    console.log(data);\n                    toast.success(data, {\n                      position: \"bottom-right\",\n                      autoClose: 5000,\n                      hideProgressBar: false,\n                      closeOnClick: true,\n                      pauseOnHover: true,\n                      draggable: true,\n                      progress: undefined\n                    });\n                  }).catch(err => {\n                    toast.error(err.response.data, {\n                      position: \"bottom-right\",\n                      autoClose: 5000,\n                      hideProgressBar: false,\n                      closeOnClick: true,\n                      pauseOnHover: true,\n                      draggable: true,\n                      progress: undefined\n                    });\n                  });\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faSave\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1030,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1000,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true) : \"\", /*#__PURE__*/_jsxDEV(Button, {\n            onClick: saveLayer,\n            children: \"Save Layer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1037,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: addLayer,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPlus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1048,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1044,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"selection\",\n            onClick: () => setTool(\"selection\"),\n            \"aria-label\": \"left aligned\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faVoteYea\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1057,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1051,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"selection\",\n            onClick: () => setTool(\"sizes\"),\n            \"aria-label\": \"left aligned\",\n            children: \"Get Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1061,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"text\",\n            onClick: () => setTool(\"text\"),\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1068,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"resize\",\n            onClick: () => setTool(\"resize\"),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faIndustry\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1078,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1073,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"line\",\n            onClick: () => setTool(\"line\"),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faGripLinesVertical\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1085,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1081,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"rectangle\",\n            onClick: () => setTool(\"rectangle\"),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSquare\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1094,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1089,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"ellipse\",\n            onClick: () => setTool(\"ellipse\"),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCircleNotch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1104,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1098,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            \"aria-controls\": \"simple-menu\",\n            \"aria-haspopup\": \"true\",\n            onClick: handleClick,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faDoorOpen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1115,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1109,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            id: \"simple-menu\",\n            anchorEl: anchorEl,\n            keepMounted: true,\n            open: Boolean(anchorEl),\n            onClose: handleClose,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              id: \"arcL\",\n              onClick: () => {\n                setTool(\"arcL\");\n                setAnchorEl(null);\n              },\n              children: \"Door Left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1127,\n              columnNumber: 53\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              id: \"arcR\",\n              onClick: () => {\n                setTool(\"arcR\");\n                setAnchorEl(null);\n              },\n              children: \"Door Right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1133,\n              columnNumber: 53\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              onClick: handleClose,\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1140,\n              columnNumber: 53\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1119,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"circle\",\n            onClick: () => setTool(\"circle\"),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCircle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1152,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1148,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"eraser\",\n            onClick: () => setTool(\"eraser\"),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faEraser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1159,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1154,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: lessItem,\n            children: [\"Change Layer \", /*#__PURE__*/_jsxDEV(ExpandLessIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1165,\n              columnNumber: 62\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1163,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: upItem,\n            children: [\"Change Layer \", /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1169,\n              columnNumber: 62\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1167,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleSave,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faFileDownload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1175,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1171,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: getJson,\n            children: \"JSON\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1179,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              if (widthh === null) {\n                alert(\"Please Enter Width and Length First\");\n              } else {\n                const canv = document.getElementById(\"canvas\");\n                const ctx = canv.getContext('2d');\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                setElements([]);\n                setMyVar([]);\n                item = 0;\n                totalLayer = 0;\n              }\n            },\n            children: \"Clear All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1184,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: scrapMe,\n            children: \"Scrap Me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1201,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 973,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 972,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-md-4\",\n        children: [selectedElement === null ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Current selected element is : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1217,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: \"No element is selected\",\n            readOnly: true,\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1222,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1218,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1216,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Current selected element is : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1230,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: selectedElement.type === \"rectangle\" ? \"Room\" : selectedElement.type === \"line\" ? \"Wall\" : selectedElement.type === \"ellipse\" ? \"Ellipse Shape Room\" : selectedElement.type === \"arcL\" ? \"Door Left\" : selectedElement.type === \"arcR\" ? \"Door Right\" : selectedElement.type === \"circle\" ? \"Circular Room\" : \"\",\n            readOnly: true,\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1257,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1232,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1229,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"input-with-icon-adornment\",\n          children: \"Your current Width is : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1266,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: canvWidth / 15.36,\n          type: \"number\",\n          step: \".01\",\n          readOnly: true,\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1273,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1267,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"input-with-icon-adornment\",\n          children: \"Your current Length is : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1280,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: canvHeight / 15.36,\n          type: \"number\",\n          step: \".01\",\n          readOnly: true,\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1287,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1281,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Element current Width is : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1295,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: ElementWidth / 15.36,\n            type: \"number\",\n            step: \".01\",\n            readOnly: true,\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1302,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1296,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1294,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Element current Length is : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1312,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: ElementLength / 15.36,\n            type: \"number\",\n            step: \".01\",\n            readOnly: true,\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1320,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1313,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1311,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1211,\n        columnNumber: 5\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Values must be valid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1332,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1331,\n        columnNumber: 1\n      }, this) : \"\", loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          style: {\n            width: '100%',\n            marginTop: '20%',\n            marginBottom: '20%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1344,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1342,\n        columnNumber: 1\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 970,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"5%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginLeft: \"15%\"\n          },\n          children: [\"Your Current Floor is : \", item, \" / \", totalLayer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1363,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          style: {\n            background: \"#c0c6c5\",\n            border: \"5px solid darkslategrey\",\n            margin: \"5%\"\n          },\n          width: canvWidth,\n          height: canvHeight,\n          id: \"canvas\",\n          onMouseDown: handleMouseDown,\n          onMouseUp: handleMouseUp,\n          onMouseMove: handleMouseMove,\n          children: \"Canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1365,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1360,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1358,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 774,\n    columnNumber: 25\n  }, this);\n}\n\n_s(App, \"ap48nK10eAlepE6APdiiZDHRZII=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/alpha/OneDrive/myapp/client/src/sketch.js"],"names":["React","useLayoutEffect","useEffect","useState","rough","Button","clsx","TabPanel","PropTypes","useTheme","Drawer","AppBar","Toolbar","List","Typography","Divider","IconButton","ChevronLeftIcon","ChevronRightIcon","ExpandMore","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","Avatar","Input","InputAdornment","InputLabel","Menu","MenuItem","SwapHorizontalCircleIcon","BuildIcon","LandscapeIcon","SwapVerticalCircleIcon","useStyles","handleMouseDown","handleMouseUp","handleMouseMove","handleSave","isWithinElement","toggleDrawer","MenuIcon","ExpandLessIcon","ExpandMoreIcon","scrapMe","toast","UserServices","Spin","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","surface","steel","brick","sand","FontAwesomeIcon","faSave","faPlus","faVoteYea","faIndustry","faGripLinesVertical","faSquare","faCircleNotch","faDoorOpen","faCircle","faEraser","faFileDownload","ButtonGroup","sketchData","heightt","widthh","item","canv","canvWidth","setCanvWidth","canvHeight","setCanvHeight","ElementWidth","setElementWidth","ElementLength","setElementLength","error","setError","canvas","totalLayer","tool","setTool","elements","setElements","myElements","setMyElements","myVar","setMyVar","selectedElement","setSelectedElement","action","setAction","state","setState","open","setOpen","myArr","setMyArr","price","setPrice","title","setTitle","image","setImage","price2","setPrice2","title2","setTitle2","image2","setImage2","price3","setPrice3","title3","setTitle3","image3","setImage3","steelPrice","setSteelPrice","steelTitle","setSteelTitle","steelImage","setSteelImage","steelPrice2","setSteelPrice2","steelTitle2","setSteelTitle2","steelImage2","setSteelImage2","steelPrice3","setSteelPrice3","steelTitle3","setSteelTitle3","steelImage3","setSteelImage3","loading","setLoading","value","setValue","steelValue","setSteelValue","bricksValue","setBricksValue","sandValue","setSandValue","marla","mouse","x","y","events","list","anchor","fullList","display","flexDirection","width","marginTop","marginBottom","map","text","index","event","target","color","marginLeft","console","log","distance","a","b","Math","sqrt","pow","getElementAtPosition","find","element","handleDrawerOpen","handleDrawerClose","handleError","saveLayer","addLayer","App","name","setName","undefined","id","setId","devWidth","setDevWidth","devHeight","setDevHeight","getData","alert","height","layer","JSON","parse","sketch","document","getElementById","window","innerWidth","context","getContext","clearRect","roughCanvas","forEach","roughElement","draw","handleWrite","wrt","fillStyle","font","fillText","classes","theme","bottom","propTypes","children","node","any","isRequired","handleSubmit","handleCalculate","totalArea","enteredArea","myElement","totalCost","cost","myJs","stringify","estimatess1","estimatess2","i","length","x2","x1","y2","y1","anchorEl","setAnchorEl","handleClick","currentTarget","handleClose","view","setView","handleChange","nextView","getJson","lessItem","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","upItem","overflow","drawerHeader","direction","drawer","paper","drawerPaper","root","hide","isLoggedin","e","prompt","save","getLoggedinfo","then","data","catch","err","response","Boolean","ctx","type","background","border","margin"],"mappings":"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","sourcesContent":["import './css/App.css';\nimport React, {useLayoutEffect,useEffect, useState} from 'react';\nimport rough from 'roughjs/bundled/rough.esm';\nimport Button from '@material-ui/core/Button';\nimport clsx from 'clsx';\nimport TabPanel from \"./sketchHelper/TabPanel\";\nimport PropTypes from 'prop-types';\nimport {useTheme} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport {Avatar,  Input, InputAdornment, InputLabel, Menu, MenuItem} from \"@material-ui/core\";\nimport SwapHorizontalCircleIcon from '@material-ui/icons/SwapHorizontalCircle';\nimport BuildIcon from '@material-ui/icons/Build';\nimport LandscapeIcon from '@material-ui/icons/Landscape';\nimport SwapVerticalCircleIcon from '@material-ui/icons/SwapVerticalCircle';\nimport useStyles from \"./sketchHelper/useStyles\";\nimport {handleMouseDown} from \"./sketchHelper/handleMouseDown\";\nimport {handleMouseUp} from \"./sketchHelper/handleMouseUp\";\nimport {handleMouseMove} from \"./sketchHelper/handleMouseMove\";\nimport {handleSave} from \"./sketchHelper/handleSave\";\nimport {isWithinElement} from \"./sketchHelper/isWithinElement\";\nimport {toggleDrawer} from \"./sketchHelper/toggleDrawer\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {scrapMe} from './scrapMe'\nimport { toast } from \"react-toastify\";\nimport UserServices from \"./services/UserServices\";\nimport { Spin } from 'antd';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport surface from './img/surface.jpg'; \nimport steel from './img/steel.jpg'; \nimport brick from './img/brick.jpg'; \nimport sand from './img/sand.jpg';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSave} from \"@fortawesome/free-solid-svg-icons\";\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {faVoteYea} from \"@fortawesome/free-solid-svg-icons\";\nimport {faIndustry} from \"@fortawesome/free-solid-svg-icons\";\nimport {faGripLinesVertical} from \"@fortawesome/free-solid-svg-icons\";\nimport {faSquare} from \"@fortawesome/free-solid-svg-icons\";\nimport {faCircleNotch} from \"@fortawesome/free-solid-svg-icons\";\nimport {faDoorOpen} from \"@fortawesome/free-solid-svg-icons\";\nimport {faCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {faEraser} from \"@fortawesome/free-solid-svg-icons\";\nimport {faFileDownload} from \"@fortawesome/free-solid-svg-icons\";\n\n\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\n\nimport {sketchData} from './users/userDashboard'\n\n        let heightt ;\n        let widthh ;\n        let item = 0;\n        let canv = null;\n        let canvWidth , setCanvWidth = null;\n        let canvHeight , setCanvHeight = null;\n        let ElementWidth , setElementWidth = null;\n        let ElementLength , setElementLength = null;\n        let error , setError ;\n        let canvas = null;\n        let totalLayer = 0;\n        let  tool , setTool ;\n        let elements, setElements;\n        let myElements, setMyElements;\n        let myVar, setMyVar;\n        let selectedElement , setSelectedElement ;        \n        let action , setAction ;\n        let state , setState;\n        let open , setOpen ;\n        let myArr , setMyArr ;\n        let price , setPrice ;\n        let title , setTitle ;\n        let image , setImage ;\n        let price2 , setPrice2 ;\n        let title2 , setTitle2 ;\n        let image2 , setImage2 ;\n        let price3 , setPrice3 ;\n        let title3 , setTitle3 ;\n        let image3 , setImage3 ;\n        let steelPrice , setSteelPrice ;\n        let steelTitle , setSteelTitle ;\n        let steelImage , setSteelImage ;\n        let steelPrice2 , setSteelPrice2 ;\n        let steelTitle2 , setSteelTitle2 ;\n        let steelImage2 , setSteelImage2 ;\n        let steelPrice3 , setSteelPrice3 ;\n        let steelTitle3 , setSteelTitle3 ;\n        let steelImage3 , setSteelImage3 ;\n        let loading , setLoading ;\n        let value, setValue;\n        let steelValue, setSteelValue;\n        let bricksValue, setBricksValue;\n        let sandValue, setSandValue;\n        let marla = 0;\n\n        export {totalLayer};\n        export {widthh};\n        export {heightt};\n        export {canvWidth , canvHeight};\n        export {ElementWidth , ElementLength , setElementLength  , setElementWidth};\n        export {error , setError };\n        export {canvas};\n        export {tool , setTool};\n        export {elements , setElements };\n        export {selectedElement , setSelectedElement};\n        export {action , setAction};\n        export {state , setState};\n        export {open , setOpen};        \n        export {myArr , setMyArr};\n        export {price , setPrice};\n        export {title , setTitle};\n        export {image , setImage};\n        export {price2 , setPrice2};\n        export {title2 , setTitle2};\n        export {image2 , setImage2};\n        export {price3 , setPrice3};\n        export {title3 , setTitle3};\n        export {image3 , setImage3};\n        export {steelPrice , setSteelPrice};\n        export {steelTitle , setSteelTitle};\n        export {steelImage , setSteelImage};\n        export {steelPrice2 , setSteelPrice2};\n        export {steelTitle2 , setSteelTitle2};\n        export {steelImage2 , setSteelImage2};\n        export {steelPrice3 , setSteelPrice3};\n        export {steelTitle3 , setSteelTitle3};\n        export {steelImage3 , setSteelImage3};\n        export {loading , setLoading};\n        export {value, setValue}; \n        export {steelValue, setSteelValue};\n        export {bricksValue, setBricksValue};\n        export {sandValue, setSandValue};\n\n        export let mouse = {x : 0, y : 0, events : \"mousemove,mousedown,mouseup\"};\n            \n        export const list = (anchor) => (\n        \n            <div\n                className={clsx(useStyles.list, {\n                    [useStyles.fullList]: anchor === 'top' || anchor === 'bottom',\n                })}\n                role=\"presentation\"\n                // onClick={toggleDrawer(anchor, false)}\n                // onKeyDown={toggleDrawer(anchor, false)}\n            >\n\n                {loading ? (\n                               \n                               <List\n                               style={{display: 'flex' , flexDirection : 'row'}}\n                   \n                           >\n                   \n                               {[<Spin style={{width:'100%' , marginTop: '20%' , marginBottom:'20%'}} />\n                                   ].map((text, index) => (\n                                   <ListItem button key={text}>\n                                       <ListItemIcon></ListItemIcon>\n                                       <ListItemText primary={text} />\n                                   </ListItem>\n                               ))}\n                           </List>\n                    ) :  \n\n                    <List \n                    style={{display: 'flex' , flexDirection : 'column'}}\n        \n                >\n        \n                    {[\n                  \n\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Cement</FormLabel>\n                            <RadioGroup aria-label=\"gender\" name=\"cement\" value={value} \n                            onChange={(event) => setValue(event.target.value)}\n                            >\n                                <FormControlLabel value={price} control={<Radio />} label={title} /> <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>{price}</Typography>\n                                <FormControlLabel value={price2} control={<Radio />} label={title2} />  <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>{price2}</Typography>\n                                 <FormControlLabel value={price3} control={<Radio />} label={title3} /> <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>{price3}</Typography>\n                                {/* <FormControlLabel value=\"disabled\" disabled control={<Radio />} label=\"(Disabled option)\" /> */}\n                            </RadioGroup>\n                         \n                        </FormControl>\n                        ,\n<FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Steel</FormLabel>\n                            <RadioGroup aria-label=\"gender\" name=\"steel\" value={steelValue} \n                            onChange={(event) => setSteelValue(event.target.value)}\n                            >\n                                <FormControlLabel value=\"136.9\" control={<Radio />} label={steelTitle} /> <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>Per Ton ... {steelPrice}</Typography>\n                                <FormControlLabel value=\"137\" control={<Radio />} label={steelTitle2} />  <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>Per Ton ... {steelPrice2}</Typography>\n                                 <FormControlLabel value=\"137.1\" control={<Radio />} label={steelTitle3} /> <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>Per Ton ... {steelPrice3}</Typography>\n                                {/* <FormControlLabel value=\"disabled\" disabled control={<Radio />} label=\"(Disabled option)\" /> */}\n                            </RadioGroup>\n                         \n                        </FormControl>\n                        ,\n                        <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Bricks</FormLabel>\n                                    <RadioGroup aria-label=\"gender\" name=\"steel\" value={bricksValue} \n                                        onChange={(event) => setBricksValue(event.target.value)}\n                                        >\n                                        <FormControlLabel value=\"13.2\" control={<Radio />} label=\"level 1 Bricks (Awwal A+)\" /> <Typography\n                                                                                                                                style = {{color: 'black',\n                                                                                                                                marginLeft: '25%'}}>Per 1000 ... PKR 13,200</Typography>\n                                            <FormControlLabel value=\"12.8\" control={<Radio />} label=\"level 1- Bricks (Awwal A)\" />  <Typography\n                                                                                                                                style = {{color: 'black',\n                                                                                                                                marginLeft: '25%'}}>Per 1000 ... PKR 12,800</Typography>\n                                             <FormControlLabel value=\"9.2\" control={<Radio />} label=\"level 2 Bricks (Doam)\" /> <Typography\n                                                                                                                                style = {{color: 'black',\n                                                                                                                                marginLeft: '25%'}}>Per 1000 ... PKR 9,200</Typography>\n                                             <FormControlLabel value=\"8.8\" control={<Radio />} label=\"level 3 Bricks (Khangar)\" /> <Typography\n                                                                                                                                style = {{color: 'black',\n                                                                                                                                marginLeft: '25%'}}>Per 1000 ... PKR 8,800</Typography>\n                                                    \n                                        </RadioGroup>\n                                                 \n                                     </FormControl>\n                        ,\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Sand (Construction)</FormLabel>\n                            <RadioGroup aria-label=\"gender\" name=\"steel\" value={sandValue} \n                            onChange={(event) => setSandValue(event.target.value)}\n                            >\n                                <FormControlLabel value=\"29500\" control={<Radio />} label=\"Chanab Sand A+\" /> <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>Per Trolly 900 CFT ... PKR 29,500</Typography>\n                                <FormControlLabel value=\"28000\" control={<Radio />} label=\"Chanab Sand B\" />  <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>Per Trolly 900 CFT ... PKR 28,000</Typography>\n                                 <FormControlLabel value=\"24000\" control={<Radio />} label=\"Chanab Sand C\" /> <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>Per Trolly 900 CFT ... PKR 24,000</Typography>\n                               <FormControlLabel value=\"12000\" control={<Radio />} label=\"Ravi Sand\" /> <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>Per Trolly 700 CFT ... PKR 12,000</Typography>\n                               \n                            </RadioGroup>\n                         \n                        </FormControl>\n                        ,\n                        <Button onClick={()=>{\n                            // setState(\"bottom\" , false)\n                            console.log(value)\n                            console.log(steelValue)\n                            console.log(bricksValue)\n                            console.log(sandValue)\n                        }}>Apply</Button>\n\n                ].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>{index  === 0 ? <Avatar alt=\"Remy Sharp\" variant=\"rounded\" src={surface}/> :\n                                            index === 1 ? <Avatar alt=\"Remy Sharp\" variant=\"rounded\" src={steel}/> :\n                                            index === 2 ? <Avatar alt=\"Remy Sharp\" variant=\"rounded\" src={brick}/> :\n                                            <Avatar alt=\"Remy Sharp\" variant=\"rounded\" src={sand}/>  }</ListItemIcon>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    ))}\n                </List>\n\n\n\n                            \n                }\n        \n        \n            </div>\n        );\n        \n        export const distance = (a,b) => Math.sqrt(Math.pow(a.x - b.x , 2) + Math.pow(a.y - b.y, 2));\n        \n        export const getElementAtPosition = (x,y, elements) => {\n            return elements.find(element => isWithinElement(x,y,element));\n        }\n        \n        export const handleDrawerOpen = () => {\n            setOpen(true);\n        };\n        \n        export const handleDrawerClose = () => {\n            setOpen(false);\n        }; \n        \n        export const handleError = () => {\n            setError(false);\n        }; \n        \n        \n            // const isWithinCanvas = (x,y, element) => {\n            //     const {x1, y1, x2, y2} = element;\n            //\n            //         const minX = Math.min(x1, x2);\n            //         const maxX = Math.max(x1, x2);\n            //         const minY = Math.min(y1, y2);\n            //         const maxy = Math.max(y1, y2);\n            //         return x >= minX && x <= maxX && y <= maxy && y >= minY;\n            //\n            // }\n\n\n            // export function putCanvs() {\n\n\n            //     // for (let item = 0; item < 20; item++) {\n            //     //     if (count !== 0 && count%5 === 0) {\n            //     //         document.write(\" ||| \");\n            //     //     }\n\n\n            //     // canv.setAttribute('width', window.innerWidth);\n            //     if (widthh !== null) {\n\n            //         item = item + 1;\n            //         totalLayer = totalLayer + 1;\n\n\n            //         const texta = document.createElement(\"input\");\n\n            //         texta.setAttribute('id', 'itemNo'\n            //         + item\n            //         );\n\n\n            //         texta.textContent = '111';\n\n            //         canv = document.createElement(\"canvas\");\n\n            //         canv.width = canvas.width;\n            //         // canv.setAttribute('height', window.innerHeight * heightt/100);\n            //         canv.height = canvas.height;\n            //         canv.setAttribute('id', 'canv'\n            //         + item\n            //         );\n\n\n\n            //         alert(totalLayer);\n            //         canv.style.background = \"#c0c6c5\";\n\n            //         canv.style.border = \"5px solid darkslategrey\";\n\n            //         canv.style.margin = \"14.4%\";\n\n            //         document.body.appendChild(canv);\n\n            //         canv.addEventListener('mousedown' , handleMouseDown , true);\n            //         canv.addEventListener('mouseup' , handleMouseUp , true);\n            //         canv.addEventListener('mousemove' , handleMouseMove , true);\n\n            //         canv.onmousedown = handleMouseDown;\n            //         canv.onmouseup = handleMouseUp;\n            //         canv.onmousemove = handleMouseMove;\n            //         const C = document.getElementById(canv.getAttribute('id'));\n            //         if (C.getContext) {\n            //             if (C.getContext) {\n            //                 makePlot(C);\n            //             }\n            //         }\n            //     }\n            //     else {\n            //         alert(\"Please Enter Width and Length First\");\n            //         setOpen(true);\n            //     }\n            // }\n\n            // function makePlot(elem) {\n\n            //     const ctx = elem.getContext(\"2d\");\n            //     ctx.fillStyle   = '#00f';\n            //     ctx.strokeStyle = 'black';\n            //     ctx.lineWidth   = 5;\n            //     ctx.borderBlock = 1;\n\n            // }\n            function saveLayer(){\n                \n\n                console.log(elements)\n\n                setMyElements(elements)\n\n                // myVar[totalLayer] = elements\n\n                myVar[item] = elements\n\n                console.log(myElements)\n\n            }\n\n            function addLayer(){\n                \n\n                console.log(elements)\n\n                setMyElements(elements)\n\n                myVar[totalLayer] = elements\n\n                console.log(myElements)\n\n                setElements([])\n\n                item = item + 1;\n                totalLayer = totalLayer + 1;\n\n                // alert(\"Your Current Layer: \" + totalLayer);\n                // alert(\"Your Current Element: \" + item);\n\n            }\n\n            function App() \n            \n            {\n\n                [tool, setTool] = useState(\"selection\");\n                [elements, setElements] = useState([]);\n                [action , setAction] = useState('none');\n                [canvWidth, setCanvWidth] = useState(null);\n                [canvHeight, setCanvHeight] = useState(null);\n                [myArr , setMyArr] = useState([]);\n                [ElementWidth , setElementWidth] = useState(null);\n                [ElementLength , setElementLength] = useState(null);\n                [selectedElement , setSelectedElement] = useState(null);\n                [error , setError] = useState(false);\n                [price , setPrice] = useState(null);\n                [title , setTitle] = useState(null);\n                [image , setImage] = useState(null);\n                [price2 , setPrice2] = useState(null);\n                [title2 , setTitle2] = useState(null);\n                [image2 , setImage2] = useState(null);\n                [price3 , setPrice3] = useState(null);\n                [title3 , setTitle3] = useState(null);\n                [image3 , setImage3] = useState(null);\n                [steelPrice , setSteelPrice] = useState(null);\n                [steelTitle , setSteelTitle] = useState(null);\n                [steelImage , setSteelImage] = useState(null);\n                [steelPrice2 , setSteelPrice2] = useState(null);\n                [steelTitle2 , setSteelTitle2] = useState(null);\n                [steelImage2 , setSteelImage2] = useState(null);\n                [steelPrice3 , setSteelPrice3] = useState(null);\n                [steelTitle3 , setSteelTitle3] = useState(null);\n                [steelImage3 , setSteelImage3] = useState(null);\n                [loading , setLoading] = useState(false);\n                [value, setValue] = React.useState(null);\n                [steelValue, setSteelValue] = React.useState(null);\n                [bricksValue, setBricksValue] = React.useState(null);\n                [sandValue, setSandValue] = React.useState(null);\n                [myElements , setMyElements] = useState([]);\n                [myVar , setMyVar] = useState([]);\n\n                let [name , setName] = useState(undefined);\n                const [id, setId] = useState(null);\n\n                const [devWidth, setDevWidth] = useState(null);\n                const [devHeight, setDevHeight] = useState(null);\n\n                const getData = () => {\n                    \n                    if(sketchData)\n                    {\n                        setId( sketchData.id )\n                        setName( sketchData.name )\n                        alert(sketchData.width)\n                        widthh = sketchData.width \n                        // setWidthh( sketchData.width ) \n                        heightt = sketchData.height\n                        totalLayer = sketchData.layer\n                        setMyVar( JSON.parse(sketchData.sketch))\n\n                        canvas = document.getElementById(\"canvas\");\n                        setCanvWidth( window.innerWidth * widthh/100 );\n                        setCanvHeight(window.innerWidth * heightt/100);\n                        canvas.width = canvWidth ;\n                        canvas.height = canvHeight;\n\n                        marla = (widthh * heightt)/270;\n\n                        document.getElementById(\"marla\").value = marla ;\n                        document.getElementById(\"height\").value = heightt;\n                        document.getElementById(\"width\").value = widthh;\n    \n                    }\n    \n                    else{\n\n                        alert(\"No Data Found\")\n    \n                    }\n                  }\n\n                \n\n\n                // let canv = null;\n    \n                // }\n\n                useLayoutEffect(() => {\n\n                    if(widthh !== null)\n                    {\n\n                        canvas = document.getElementById('canvas');\n                        const context = canvas.getContext('2d');\n                        context.clearRect(0, 0, canvas.width, canvas.height);\n\n                        const roughCanvas = rough.canvas(canvas);\n                        elements.forEach(({roughElement}) => roughCanvas.draw(roughElement));\n\n\n                        // const roughCanvas222 = rough.canvas(canvas2);\n                        // elements.forEach(({roughElement}) => roughCanvas222.draw(roughElement));\n                        //\n                        //      canv = document.getElementById('canv' + 1);\n                        //     const ctx = canv.getContext('2d');\n                        //     ctx.clearRect(0,0,canvas.width, canvas.height);\n                        //\n                        //     const roughCanvas2 = rough.canvas(canv);\n                        //     elements.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n\n\n                        // for(let i = 1 ; i <= item ; i ++) {\n                        //     const cnv = document.getElementById('canv' + item);\n                        //     const ctx = cnv.getContext('2d');\n\n                        //     ctx.clearRect(0,0,cnv.width, cnv.height);\n                        //     const roughCanvas2 = rough.canvas(cnv);\n                        //     // let element+item;\n                        //     // let\n                        //     elements.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n                        // }\n\n                    }\n                            \n                    else {\n                        alert(\"Please Enter Width and Length First\");\n                        setOpen(true);\n                    }\n                }\n                    // ,\n                    // [\n                    //     elements , canvas , item\n                    // ]\n    \n                    );\n\n                    function handleWrite(){\n\n                        const context = canvas.getContext('2d');\n\n                        const wrt = document.getElementById(\"write\").value;\n                        context.fillStyle = \"white\";\n                        context.font = \"bold 16px Arial\";\n                        context.fillText(wrt , (canvas.width / 2) - 17, (canvas.height / 2) + 8);\n\n                    }\n\n                    const classes = useStyles();\n                    const theme = useTheme();\n                    [open, setOpen] = React.useState(false);\n                    \n                    [state, setState] = React.useState({\n                        bottom: false,\n           \n                    });\n\n                    TabPanel.propTypes = {\n                        children: PropTypes.node,\n                        index: PropTypes.any.isRequired,\n                        value: PropTypes.any.isRequired,\n                    };\n\n                    const handleSubmit = () => {\n                        heightt = document.getElementById(\"height\").value;\n                        widthh = document.getElementById(\"width\").value;\n                        alert(\" Length  \" + heightt + \"   width  \" + widthh + \"   was submitted\");\n                        canvas = document.getElementById(\"canvas\");\n                        setCanvWidth( window.innerWidth * widthh/100 );\n                        setCanvHeight(window.innerWidth * heightt/100);\n                        canvas.width = canvWidth ;\n                        canvas.height = canvHeight;\n\n                        marla = (widthh * heightt)/270;\n\n                        document.getElementById(\"marla\").value = marla ;\n\n                    }\n\n\n\n                    const handleCalculate = () => {\n\n                        const totalArea = widthh * heightt;\n                        const enteredArea = document.getElementById(\"area\").value ;\n                        let myElement = 0;\n\n                        \n                        const totalCost = totalArea * 250;\n                        const cost = enteredArea * 250;\n                        let myJs = JSON.stringify(elements);\n                        setMyArr(JSON.parse(myJs))\n                        let estimatess1 = 0;\n                        let estimatess2 = 0;\n\n                        for(var i = 0; i < myArr.length ; i++)\n                        {\n                            // console.log( myArr[i].type);\n                            // console.log( myArr[i].x1);\n                            // console.log( myArr[i].x2);\n                            // console.log( myArr[i].y2);\n                            // console.log( myArr[i].y1);\n                            // console.log( (myArr[i].x2-myArr[i].x1)  / 15.36);\n                            // console.log( (myArr[i].y2-myArr[i].y1)  / 15.36);\n                            \n                            estimatess1 = estimatess1 + ((myArr[i].x2-myArr[i].x1)  / 15.36);\n                            estimatess2 = estimatess2 + ((myArr[i].y2-myArr[i].y1)  / 15.36);\n                           \n                            // myElement ++ ;\n\n                        }\n\n                        if(marla < ((estimatess1*estimatess2) / 270))\n                        {\n                            console.log(\"Total Area Created Feet  \" + (widthh*heightt));\n                            console.log(\"Total Area Created Marla \" + marla);\n                        }\n                        else{\n                        console.log(\"Total Area Created Feet  \" + (estimatess1*estimatess2));\n\n                        \n                        console.log(\"Total Area Created Marla \" + ((estimatess1*estimatess2) / 270)); \n                        }\n                        document.getElementById(\"myArea\").value = totalCost ;\n                        document.getElementById(\"eArea\").value = cost ;\n\n                        if(marla < ((estimatess1*estimatess2) / 270))\n                        {\n                            document.getElementById(\"cArea\").value =  (widthh*heightt) * 250 ;\n                        }\n                        else{\n                            document.getElementById(\"cArea\").value =  (estimatess1*estimatess2) * 250 ;\n                        }\n                        \n\n                        // console.log(value)\n\n                        \n\n                    }\n\n                    const [anchorEl, setAnchorEl] = React.useState(null);\n                    const handleClick = (event) => {\n\n                        setAnchorEl(event.currentTarget);\n\n                    };\n\n                    const handleClose = () => {\n                        setAnchorEl(null);\n                    };\n                    \n                    const [view, setView] = React.useState('list');\n                    const handleChange = (event, nextView) => {\n                        setView(nextView);\n                    };\n\n\n\n\n                    let getJson = () => {\n                        let myJs = JSON.stringify(elements);\n                        setMyArr(JSON.parse(myJs))\n                        console.log( myArr );\n                    }\n                    \n                    let lessItem = () => {\n                        if(myVar[totalLayer] === undefined)\n                            {\n                                saveLayer()\n                            }\n                        if(item > 0) {\n                            item = item - 1;\n                            setElements(myVar[item])\n                            // myVar[item] = elements\n                            // saveLayer(item)\n                            \n                        }\n                        else {\n                            toast.success(\"Already on First\", {\n                                position: \"top-right\",\n                                autoClose: 5000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                                progress: undefined,\n                            });\n                    }}\n\n                    let upItem = () => {\n                        if(item < totalLayer){\n                            item = item + 1;\n                            setElements(myVar[item])\n                            // myVar[item] = elements\n                            // saveLayer(item)\n                            \n                        }\n                        else {\n                            toast.success(\"Already on Last\", {\n                                position: \"top-right\",\n                                autoClose: 5000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                                progress: undefined,\n                            });\n                        }\n                    }\n\n                    // var canvas = document.getElementById(\"canvas\"),\n                    //     ctx = canvas.getContext(\"2d\");\n                    // var b = ball[i];\n                    // b.draw(b.x, b.y, b.color ,b.radius);\n\n                    \n                    \n                    \n                    \n\n\n\n\n\n\n\n\n\n\n\n\n                    return (\n                        <div style={{overflow: \"hidden\"}}>\n\n                            <Toolbar>\n                                <Typography variant=\"h6\" noWrap className={classes.title} style={{color : \"#4E4141\"}}>\n\n                                    {['bottom'].map((anchor) => (\n                                        <React.Fragment key={anchor}>\n                                \n                                            <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n                                            <div className={classes.drawerHeader}>\n                                                <IconButton onClick={()=>{setState(\"bottom\",false)}}>\n                                                {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ExpandMore />}\n                                            </IconButton>\n                                            </div>\n\n                                            <Divider />\n                                                {list(anchor)}\n                                            </Drawer>\n                                        </React.Fragment>\n                                    ))}\n                                </Typography>\n                    \n                            </Toolbar>\n\n\n\n\n\n            \n                            <Drawer\n                                className={classes.drawer}\n                                variant=\"persistent\"\n                                anchor=\"right\"\n                                open={open}\n                                classes={{\n                                    paper: classes.drawerPaper,\n                                }}\n                                >\n                                <div className={classes.drawerHeader}>\n                                    <IconButton onClick={handleDrawerClose}>\n                                        {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                                    </IconButton>\n                                </div>\n\n                               <Divider />\n                                <List>\n                                    {[<div>\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Enter Width (feet)</InputLabel>\n                                            <Input\n                                                id=\"width\"\n                                                type=\"number\"\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                        <SwapHorizontalCircleIcon />\n                                                    </InputAdornment>\n                                                }\n                                            />\n                                                \n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Enter Length (feet)</InputLabel>\n\n                                            <Input\n                                                id=\"height\"\n                                                type=\"number\"\n                                                startAdornment={\n                                                <InputAdornment position=\"start\">\n                                                    <SwapVerticalCircleIcon />\n                                                </InputAdornment>\n                                                }\n                                            />\n                                            <Button value=\"Submit\" onClick={handleSubmit}>\n                                                Submit\n                                            </Button>\n\n                                    </div>, <div>\n\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Your current Marla is : </InputLabel>\n                                            <Input\n                                                id=\"marla\"\n                                                type=\"number\"\n                                                step=\"any\"\n                                                readOnly\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                    </InputAdornment>\n                                                }\n                                            />\n\n                                    </div>,\n\n                                    <div>\n\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Enter Text </InputLabel>\n                                            <Input\n\n                                                id=\"write\"\n                                                type=\"text\"\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                    </InputAdornment>\n                                                }\n                                            />\n\n                                            <Button onClick={handleWrite} >Write</Button>\n\n                                    </div>, <div>\n\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Enter Area (Sq. feet)</InputLabel>\n                                            <Input\n                                                id=\"area\"\n                                                type=\"number\"\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                        <SwapHorizontalCircleIcon /> <h2>*</h2>\n                                                        <SwapVerticalCircleIcon />\n                                                    </InputAdornment>\n                                                }\n                                            />\n\n                                        \n\n                                    </div>,\n\n                                    <Button value=\"calculate\" onClick={scrapMe}>\n                                            Select Material\n                                        </Button>,\n\n                                    <Button id = \"est\" \n                                        value=\"calculate\" \n                                        onClick={handleCalculate}>\n                                        Estimate\n                                    </Button>\n\n                                        \n\n                                    ].map((text, index) => (\n                                        <ListItem button key={text}>\n                                            <ListItemIcon>{index % 2 === 0 ? < BuildIcon /> : <LandscapeIcon />}</ListItemIcon>\n                                            <ListItemText primary={text} />\n                                        </ListItem>\n                                    ))}\n\n                                </List>\n\n                                <List>\n\n                                    {[<div>\n\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Total Cost of total area </InputLabel>\n\n                                            <Input\n                                                id=\"myArea\"\n                                                type=\"number\"\n                                                step=\"any\"\n                                                readOnly\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                    </InputAdornment>\n                                                }\n                        \n                                            />\n                                    </div>, <div>\n\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Total Cost of Entered Area </InputLabel>\n\n                                            <Input\n                                                id=\"eArea\"\n                                                type=\"number\"\n                                                step=\"any\"\n                                                readOnly\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                    </InputAdornment>\n                                                }\n                                            />\n                                    </div>, <div>\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Total Cost of Created Area (Without Material) </InputLabel>\n                                            <Input\n                                                id=\"cArea\"\n                                                step=\"any\"\n                                                readOnly\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                    </InputAdornment>\n                                                }\n                                            />\n\n                                    </div>].map((text, index) => (\n\n                                        <ListItem button key={text}>\n                                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                                            <ListItemText primary={text} />\n                                        </ListItem>\n                                    ))}\n                                </List>\n                            </Drawer>\n\n                            <div className=\"row\">\n                                \n                                    <div className={classes.root}>\n                                        <ButtonGroup\n                                            orientation=\"vertical\"\n                                            value={view}\n                                            exclusive\n                                            onChange={handleChange}\n                                            >\n\n                                            <IconButton\n                                                color=\"#ffffff\"\n                                                aria-label=\"open drawer\"\n                                                edge=\"end\"\n                                                onClick={handleDrawerOpen}\n                                                className={clsx(open && classes.hide)}\n                                                >\n                                            \n                                               <MenuIcon />\n                                            </IconButton>\n\n                                            {UserServices.isLoggedin ?\n\n                                                (<>\n\n                                                <Button onClick={getData} >\n                                                get data\n                                                \n                                            </Button>\n\n                                                <Button  onClick={(e) => {\n                                                     name = prompt(\"Please Enter name of your Sketch\")\n                                                    if(name){\n                                                    UserServices.save(name , myVar ,widthh , heightt, totalLayer , UserServices.getLoggedinfo().id)\n                                                    .then((data) => {\n                                                        console.log(data);\n                                                        toast.success(data, {\n                                                            position: \"bottom-right\",\n                                                            autoClose: 5000,\n                                                            hideProgressBar: false,\n                                                            closeOnClick: true,\n                                                            pauseOnHover: true,\n                                                            draggable: true,\n                                                            progress: undefined,\n                                                        });\n                                                    })\n                                                    .catch((err) => {\n                                                        toast.error(err.response.data, {\n                                                            position: \"bottom-right\",\n                                                            autoClose: 5000,\n                                                            hideProgressBar: false,\n                                                            closeOnClick: true,\n                                                            pauseOnHover: true,\n                                                            draggable: true,\n                                                            progress: undefined,\n                                                        });\n                                                    });\n                                                }}} >\n                                                    {/* Save */}\n                                                \n                                                <FontAwesomeIcon icon={faSave} />\n                                                \n                                                </Button>\n                                                </>) : \n                                                (\"\")\n                                            }  \n\n                                            <Button \n                                                onClick={saveLayer} >\n                                                Save Layer\n                                            </Button>\n\n                                            \n\n                                            <Button \n                                                onClick={addLayer} >\n                                                {/* Add Layer */}\n\n                                                <FontAwesomeIcon icon={faPlus} />\n\n                                            </Button>\n                                            <Button \n                                                id = \"selection\" \n                                                onClick={() => setTool(\"selection\")}   \n                                                aria-label=\"left aligned\">\n                                                {/* Selection */}\n\n                                                <FontAwesomeIcon icon={faVoteYea} />\n\n                                            </Button>\n    \n                                            <Button \n                                                id = \"selection\" \n                                                onClick={() => setTool(\"sizes\")}   \n                                                aria-label=\"left aligned\">\n                                                Get Size\n                                                \n                                            </Button>\n                                            <Button \n                                                id = \"text\" \n                                                onClick={() => setTool(\"text\")}>\n                                                Text\n                                            </Button>\n                                            <Button \n                                                id = \"resize\" \n                                                onClick={() => setTool(\"resize\")}>\n                                                {/* Re - Factor */}\n\n                                                <FontAwesomeIcon icon={faIndustry} />\n\n                                            </Button>\n                                            <Button \n                                                id = \"line\" \n                                                onClick={() => setTool(\"line\")}>\n                                                {/* Wall */}\n                                                <FontAwesomeIcon icon={faGripLinesVertical} />\n\n\n                                            </Button>\n                                            <Button \n                                                id = \"rectangle\" \n                                                onClick={() => setTool(\"rectangle\")}>\n                                                {/* Room */}\n\n                                                <FontAwesomeIcon icon={faSquare} />\n\n\n                                            </Button>\n                                            <Button \n                                                id = \"ellipse\" \n                                                onClick={() => \n                                                setTool(\"ellipse\")}>\n                                                {/* Ellipse Shape Room */}\n\n                                                <FontAwesomeIcon icon={faCircleNotch} />\n\n                                            </Button>\n                                    \n\n                                            <Button \n                                                aria-controls=\"simple-menu\" \n                                                aria-haspopup=\"true\" \n                                                onClick={handleClick}>\n                                                {/* Door */}\n\n                                                <FontAwesomeIcon icon={faDoorOpen} />\n\n                                            </Button>\n \n                                                <Menu\n                                                    id=\"simple-menu\"\n                                                    anchorEl={anchorEl}\n                                                    keepMounted\n                                                    open={Boolean(anchorEl)}\n                                                    onClose={handleClose}\n                                                    >\n             \n                                                    <MenuItem \n                                                        id = \"arcL\" \n                                                        onClick={() => {setTool(\"arcL\")\n                                                                        setAnchorEl(null);}  }>\n                                                        Door Left\n                                                    </MenuItem>\n                                                    <MenuItem \n                                                        id = \"arcR\" \n                                                        onClick={() => {setTool(\"arcR\") \n                                                                        setAnchorEl(null);} }>\n                                                        Door Right\n                                                    </MenuItem>\n            \n                                                    <MenuItem \n                                                        onClick={handleClose}>\n                                                        Logout\n                                                    </MenuItem>\n\n                                                </Menu>\n\n\n                                            <Button \n                                                id = \"circle\" \n                                                onClick={() => setTool(\"circle\")}>\n                                                {/* circular room */}\n                                                <FontAwesomeIcon icon={faCircle} />\n                                            </Button>\n                                            <Button \n                                                id = \"eraser\" \n                                                onClick={() => setTool(\"eraser\")}>\n                                                {/* Erase */}\n\n                                                <FontAwesomeIcon icon={faEraser} />\n\n\n                                            </Button>\n                                            <Button  \n                                                onClick={lessItem} >\n                                                Change Layer <ExpandLessIcon/> \n                                            </Button>\n                                            <Button \n                                                onClick={upItem} >\n                                                Change Layer <ExpandMoreIcon/>\n                                            </Button>\n                                            <Button \n                                            onClick={handleSave} >\n                                            {/* Save Local  */}\n\n                                            <FontAwesomeIcon icon={faFileDownload} />\n\n\n                                            </Button>\n                                            <Button \n                                            onClick={getJson} >\n                                            JSON\n                                            </Button>\n                    \n                                            <Button onClick={()=>{\n                                                if(widthh === null)\n                                                {\n                                                    alert(\"Please Enter Width and Length First\")\n                                                }\n                                                else{\n                                                const canv = document.getElementById(\"canvas\");\n                                                const ctx = canv.getContext('2d')\n                                                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                                                setElements([]);\n                                                setMyVar([]);\n                                                item = 0;\n                                                totalLayer = 0;\n                                                }}} >\n                                                Clear All\n                                            </Button>\n                    \n                                            <Button \n                                                onClick={scrapMe\n                                                }>\n                                                Scrap Me\n                                            </Button>\n                                        </ButtonGroup>\n\n                                    </div>\n\n\n    <div class=\"col-md-4\">\n    \n\n        {selectedElement === null ? (\n\n            <div>\n                <InputLabel htmlFor=\"input-with-icon-adornment\">Current selected element is : </InputLabel>\n                    <Input\n                        value  = \"No element is selected\"\n                        readOnly\n                        startAdornment={\n                        <InputAdornment position=\"start\">\n                        </InputAdornment>\n                        }\n                        />\n            </div>\n    ) : \n\n    <div>\n        <InputLabel htmlFor=\"input-with-icon-adornment\">Current selected element is : </InputLabel>\n\n        <Input\n\n            value  =  {selectedElement.type === \"rectangle\" ? (\n                \"Room\"            \n                ) : \n            selectedElement.type === \"line\" ? (\n                \"Wall\"\n                ) : \n            selectedElement.type === \"ellipse\" ? (\n                \"Ellipse Shape Room\"\n                ) :\n            selectedElement.type === \"arcL\" ? (\n                \"Door Left\"\n                ) : \n            selectedElement.type === \"arcR\" ? (\n                \"Door Right\"\n                ) : \n            selectedElement.type === \"circle\" ? (\n                \"Circular Room\"\n                ) : (\"\")\n\n            }  \n            \n            readOnly\n            startAdornment={\n                <InputAdornment position=\"start\">\n\n                </InputAdornment>\n                }\n        />\n    </div>\n\n}\n\n<InputLabel htmlFor=\"input-with-icon-adornment\">Your current Width is : </InputLabel>\n    <Input\n        value  = {canvWidth / 15.36 } \n        type=\"number\"\n        step=\".01\"\n        readOnly\n        startAdornment={\n            <InputAdornment position=\"start\">\n\n            </InputAdornment>\n        }\n    />\n\n\n<InputLabel htmlFor=\"input-with-icon-adornment\">Your current Length is : </InputLabel>\n    <Input\n        value  = {canvHeight / 15.36 } \n        type=\"number\"\n        step=\".01\"\n        readOnly\n        startAdornment={\n            <InputAdornment position=\"start\">\n\n            </InputAdornment>\n        }\n    />\n\n\n<div>\n    <InputLabel htmlFor=\"input-with-icon-adornment\">Element current Width is : </InputLabel>\n        <Input\n            value  = {  ElementWidth   / 15.36 } \n            type=\"number\"\n            step=\".01\"\n            readOnly\n            startAdornment={\n            <InputAdornment position=\"start\">\n\n            </InputAdornment>\n            }\n        />\n</div>\n\n\n\n<div>\n    <InputLabel htmlFor=\"input-with-icon-adornment\">Element current Length is : </InputLabel>\n        <Input\n            value  = {\n                (   ElementLength   )   /   15.36 }\n                type=\"number\"\n                step=\".01\"\n                readOnly\n                startAdornment={\n                <InputAdornment position=\"start\">\n\n                </InputAdornment>\n                }\n        />\n</div>\n\n</div>\n\n{error ? (\n\n<div>\n   <h3>Values must be valid</h3>\n\n</div>\n) :  \n\n(\"\")\n\n} \n{loading ? (\n\n<div className=\"container\">\n  \n   <Spin style={{width:'100%' , marginTop: '20%' , marginBottom:'20%'}} />\n\n</div>\n) :  \n\n(\"\")\n\n}        \n</div>\n\n\n\n\n                                \n                            <div className = \"container\">\n\n                                <div\n                                    style= {{ marginTop  : \"5%\" ,\n                                    }}>\n                                        <h3 style= {{ marginLeft  : \"15%\"\n                                    }}>Your Current Floor is : {item} / {totalLayer}</h3>\n                                        <canvas\n                                            style = {{\n                                                background:\"#c0c6c5\" , \n                                                border : \"5px solid darkslategrey\" , \n                                                margin : \"5%\"}}\n                    \n                                            width = {canvWidth}\n                                            height = {canvHeight}\n                                            id = \"canvas\"\n                                            onMouseDown={handleMouseDown}\n                                            onMouseUp={handleMouseUp}\n                                            onMouseMove={handleMouseMove}\n\n                                            >\n                                            Canvas\n                                        </canvas>\n                \n                                </div>\n                            </div>\n                            </div>\n                            \n                    );\n            }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}