{"ast":null,"code":"var _jsxFileName = \"F:\\\\myapp\\\\client\\\\src\\\\sketch.js\",\n    _s = $RefreshSig$();\n\nimport './css/App.css';\nimport React, { useLayoutEffect, useState } from 'react';\nimport rough from 'roughjs/bundled/rough.esm';\nimport Button from '@material-ui/core/Button';\nimport clsx from 'clsx';\nimport TabPanel from \"./sketchHelper/TabPanel\";\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { Avatar, ButtonGroup, Input, InputAdornment, InputLabel, Menu, MenuItem } from \"@material-ui/core\";\nimport SwapHorizontalCircleIcon from '@material-ui/icons/SwapHorizontalCircle';\nimport BuildIcon from '@material-ui/icons/Build';\nimport LandscapeIcon from '@material-ui/icons/Landscape';\nimport SwapVerticalCircleIcon from '@material-ui/icons/SwapVerticalCircle';\nimport useStyles from \"./sketchHelper/useStyles\";\nimport { handleMouseDown } from \"./sketchHelper/handleMouseDown\";\nimport { handleMouseUp } from \"./sketchHelper/handleMouseUp\";\nimport { handleMouseMove } from \"./sketchHelper/handleMouseMove\";\nimport { handleSave } from \"./sketchHelper/handleSave\";\nimport { isWithinElement } from \"./sketchHelper/isWithinElement\";\nimport { toggleDrawer } from \"./sketchHelper/toggleDrawer\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { scrapMe } from './scrapMe';\nimport { toast } from \"react-toastify\";\nimport UserServices from \"./services/UserServices\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet heightt = null;\nlet widthh = null;\nlet item = null;\nlet canv = null;\nlet canvWidth,\n    setCanvWidth = null;\nlet canvHeight,\n    setCanvHeight = null;\nlet ElementWidth,\n    setElementWidth = null;\nlet ElementLength,\n    setElementLength = null;\nlet error, setError;\nlet canvas = null;\nlet totalLayer = null;\nlet tool, setTool;\nlet elements, setElements;\nlet selectedElement, setSelectedElement;\nlet action, setAction;\nlet state, setState;\nlet open, setOpen;\nlet myArr, setMyArr;\nexport { canvWidth, canvHeight };\nexport { ElementWidth, ElementLength, setElementLength, setElementWidth };\nexport { error, setError };\nexport { canvas };\nexport { tool, setTool };\nexport { elements, setElements };\nexport { selectedElement, setSelectedElement };\nexport { action, setAction };\nexport { state, setState };\nexport { open, setOpen };\nexport { myArr, setMyArr };\nexport let mouse = {\n  x: 0,\n  y: 0,\n  events: \"mousemove,mousedown,mouseup\"\n};\nexport const list = anchor => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: clsx(useStyles.list, {\n    [useStyles.fullList]: anchor === 'top' || anchor === 'bottom'\n  }),\n  role: \"presentation\",\n  onClick: toggleDrawer(anchor, false),\n  onKeyDown: toggleDrawer(anchor, false),\n  children: /*#__PURE__*/_jsxDEV(List, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Typography, {\n      style: {\n        color: 'black'\n      },\n      children: \"Hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 27\n    }, this)].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n      button: true,\n      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n        children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: \"Remy Sharp\",\n          src: \"https://tameerghar.com/pub/media/catalog/product/cache/0ee050c3ffc3555709b9bb6062f4d7e9/q/v/qv1l9lrw.psd8.jpg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 62\n        }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 207\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }, this)]\n    }, text, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 17\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 78,\n  columnNumber: 13\n}, this);\nexport const distance = (a, b) => Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\nexport const getElementAtPosition = (x, y, elements) => {\n  return elements.find(element => isWithinElement(x, y, element));\n};\nexport const handleDrawerOpen = () => {\n  setOpen(true);\n};\nexport const handleDrawerClose = () => {\n  setOpen(false);\n};\nexport const handleError = () => {\n  setError(false);\n}; // const isWithinCanvas = (x,y, element) => {\n//     const {x1, y1, x2, y2} = element;\n//\n//         const minX = Math.min(x1, x2);\n//         const maxX = Math.max(x1, x2);\n//         const minY = Math.min(y1, y2);\n//         const maxy = Math.max(y1, y2);\n//         return x >= minX && x <= maxX && y <= maxy && y >= minY;\n//\n// }\n\nexport function putCanvs() {\n  // for (let item = 0; item < 20; item++) {\n  //     if (count !== 0 && count%5 === 0) {\n  //         document.write(\" ||| \");\n  //     }\n  // canv.setAttribute('width', window.innerWidth);\n  if (widthh !== null) {\n    item = item + 1;\n    totalLayer = totalLayer + 1;\n    const texta = document.createElement(\"input\");\n    texta.setAttribute('id', 'itemNo' + item);\n    texta.textContent = '111';\n    canv = document.createElement(\"canvas\");\n    canv.width = canvas.width; // canv.setAttribute('height', window.innerHeight * heightt/100);\n\n    canv.height = canvas.height;\n    canv.setAttribute('id', 'canv' + item);\n    alert(totalLayer);\n    canv.style.background = \"#c0c6c5\";\n    canv.style.border = \"5px solid darkslategrey\";\n    canv.style.margin = \"14.4%\";\n    document.body.appendChild(canv);\n    canv.addEventListener('mousedown', handleMouseDown, true);\n    canv.addEventListener('mouseup', handleMouseUp, true);\n    canv.addEventListener('mousemove', handleMouseMove, true);\n    canv.onmousedown = handleMouseDown;\n    canv.onmouseup = handleMouseUp;\n    canv.onmousemove = handleMouseMove;\n    const C = document.getElementById(canv.getAttribute('id'));\n\n    if (C.getContext) {\n      if (C.getContext) {\n        makePlot(C);\n      }\n    }\n  } else {\n    alert(\"Please Enter Width and Length First\");\n    setOpen(true);\n  }\n}\n\nfunction makePlot(elem) {\n  const ctx = elem.getContext(\"2d\");\n  ctx.fillStyle = '#00f';\n  ctx.strokeStyle = 'black';\n  ctx.lineWidth = 5;\n  ctx.borderBlock = 1;\n} // const getCvsAtPosition = (x,y, elements) => {\n//     return elements.find(element => isWithinCanvas(x,y,element));\n// }\n\n\nfunction App() {\n  _s();\n\n  [tool, setTool] = useState(\"selection\");\n  [elements, setElements] = useState([]);\n  [action, setAction] = useState('none');\n  [canvWidth, setCanvWidth] = useState(null);\n  [canvHeight, setCanvHeight] = useState(null);\n  [myArr, setMyArr] = useState([]);\n  [ElementWidth, setElementWidth] = useState(null);\n  [ElementLength, setElementLength] = useState(null);\n  [selectedElement, setSelectedElement] = useState(null);\n  [error, setError] = useState(false);\n  const [devWidth, setDevWidth] = useState(null);\n  const [devHeight, setDevHeight] = useState(null); // let canv = null;\n  // }\n\n  useLayoutEffect(() => {\n    if (widthh !== null) {\n      canvas = document.getElementById('canvas');\n      const context = canvas.getContext('2d');\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      const roughCanvas = rough.canvas(canvas);\n      elements.forEach(({\n        roughElement\n      }) => roughCanvas.draw(roughElement)); // const roughCanvas222 = rough.canvas(canvas2);\n      // elements.forEach(({roughElement}) => roughCanvas222.draw(roughElement));\n      //\n      //      canv = document.getElementById('canv' + 1);\n      //     const ctx = canv.getContext('2d');\n      //     ctx.clearRect(0,0,canvas.width, canvas.height);\n      //\n      //     const roughCanvas2 = rough.canvas(canv);\n      //     elements.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n\n      for (let i = 1; i <= item; i++) {\n        const cnv = document.getElementById('canv' + item);\n        const ctx = cnv.getContext('2d');\n        ctx.clearRect(0, 0, cnv.width, cnv.height);\n        const roughCanvas2 = rough.canvas(cnv); // let element+item;\n        // let\n\n        elements.forEach(({\n          roughElement\n        }) => roughCanvas2.draw(roughElement));\n      }\n    } else {\n      alert(\"Please Enter Width and Length First\");\n      setOpen(true);\n    }\n  } // ,\n  // [\n  //     elements , canvas , item\n  // ]\n  );\n\n  function handleWrite() {\n    const context = canvas.getContext('2d');\n    const wrt = document.getElementById(\"write\").value;\n    context.fillStyle = \"white\";\n    context.font = \"bold 16px Arial\";\n    context.fillText(wrt, canvas.width / 2 - 17, canvas.height / 2 + 8);\n  }\n\n  const classes = useStyles();\n  const theme = useTheme();\n  [open, setOpen] = React.useState(false);\n  [state, setState] = React.useState({\n    bottom: false\n  });\n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired\n  };\n\n  const handleSubmit = () => {\n    heightt = document.getElementById(\"height\").value;\n    widthh = document.getElementById(\"width\").value;\n    alert(\" Length  \" + heightt + \"   width  \" + widthh + \"   was submitted\");\n    canvas = document.getElementById(\"canvas\");\n    setCanvWidth(window.innerWidth * widthh / 100);\n    setCanvHeight(window.innerWidth * heightt / 100);\n    canvas.width = canvWidth;\n    canvas.height = canvHeight;\n    const m = widthh * heightt;\n    document.getElementById(\"marla\").value = m / 270;\n  };\n\n  const handleCalculate = () => {\n    const totalArea = widthh * heightt;\n    const enteredArea = document.getElementById(\"area\").value;\n    const totalCost = totalArea * 250;\n    const cost = enteredArea * 250;\n    let myJs = JSON.stringify(elements);\n    setMyArr(JSON.parse(myJs));\n\n    for (var i = 0; i < myArr.length; i++) {\n      console.log(myArr[i].type);\n    }\n\n    document.getElementById(\"myArea\").value = totalCost;\n    document.getElementById(\"eArea\").value = cost;\n  };\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const [view, setView] = React.useState('list');\n\n  const handleChange = (event, nextView) => {\n    setView(nextView);\n  };\n\n  let getJson = () => {\n    let myJs = JSON.stringify(elements);\n    setMyArr(JSON.parse(myJs));\n    console.log(myArr);\n  };\n\n  let lessItem = () => {\n    if (item > 0) {\n      item = item - 1;\n      alert(item);\n    } else alert(\"Already on First\");\n  };\n\n  let upItem = () => {\n    if (item < totalLayer) {\n      item = item + 1;\n      alert(item);\n    } else alert(\"Already on Last\");\n  }; // var canvas = document.getElementById(\"canvas\"),\n  //     ctx = canvas.getContext(\"2d\");\n  // var b = ball[i];\n  // b.draw(b.x, b.y, b.color ,b.radius);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflow: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        noWrap: true,\n        className: classes.title,\n        style: {\n          color: \"#4E4141\"\n        },\n        children: ['bottom'].map(anchor => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Drawer, {\n            anchor: anchor,\n            open: state[anchor],\n            onClose: toggleDrawer(anchor, false),\n            children: list(anchor)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 45\n          }, this)\n        }, anchor, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 41\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"right\",\n      open: open,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.drawerHeader,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 70\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 92\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Enter Width (feet)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"width\",\n            type: \"number\",\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(SwapHorizontalCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 57\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Enter Length (feet)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"height\",\n            type: \"number\",\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(SwapVerticalCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            value: \"Submit\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Your current Marla is : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"marla\",\n            type: \"number\",\n            step: \"any\",\n            readOnly: true,\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Enter Text \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"write\",\n            type: \"text\",\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleWrite,\n            children: \"Write\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Enter Area (Sq. feet)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"area\",\n            type: \"number\",\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: [/*#__PURE__*/_jsxDEV(SwapHorizontalCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 57\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 86\n              }, this), /*#__PURE__*/_jsxDEV(SwapVerticalCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 57\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            value: \"calculate\",\n            onClick: handleCalculate,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 45\n        }, this)].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(BuildIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 78\n            }, this) : /*#__PURE__*/_jsxDEV(LandscapeIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 95\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 45\n          }, this)]\n        }, text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 41\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Total Cost of total area \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input // onChange={handleChangeWidth}\n          , {\n            id: \"myArea\",\n            type: \"number\",\n            step: \"any\",\n            readOnly: true,\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Total Cost of Entered Area \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input // onChange={handleChangeWidth}\n          , {\n            id: \"eArea\",\n            type: \"number\",\n            step: \"any\",\n            readOnly: true,\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Total Cost of Created Area \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Input // onChange={handleChangeWidth}\n          , {\n            id: \"cArea\",\n            type: \"number\",\n            step: \"any\",\n            readOnly: true,\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 29\n        }, this)].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 62\n            }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 78\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 29\n          }, this)]\n        }, text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup // orientation=\"vertical\"\n          // color=\"#c0c6c5\"\n          // aria-label=\"vertical contained primary button group\"\n          // variant=\"contained\"\n          , {\n            orientation: \"vertical\",\n            value: view,\n            exclusive: true,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"#ffffff\",\n              \"aria-label\": \"open drawer\",\n              edge: \"end\",\n              onClick: handleDrawerOpen,\n              className: clsx(open && classes.hide),\n              children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 21\n            }, this), UserServices.isLoggedin ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: e => {\n                UserServices.save(elements, UserServices.getLoggedinfo().email).then(data => {\n                  console.log(data);\n                  toast.success(data, {\n                    position: \"bottom-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                  });\n                }).catch(err => {\n                  toast.error(err.response.data, {\n                    position: \"bottom-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                  });\n                });\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 1\n            }, this) : \"\", /*#__PURE__*/_jsxDEV(Button, {\n              onClick: putCanvs,\n              children: \"Add Layer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"selection\",\n              onClick: () => setTool(\"selection\"),\n              \"aria-label\": \"left aligned\",\n              children: \"Selection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"selection\",\n              onClick: () => setTool(\"sizes\"),\n              \"aria-label\": \"left aligned\",\n              children: \"Get Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"text\",\n              onClick: () => setTool(\"text\"),\n              children: \"Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"resize\",\n              onClick: () => setTool(\"resize\"),\n              children: \"Re - Factor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"line\",\n              onClick: () => setTool(\"line\"),\n              children: \"Wall\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"rectangle\",\n              onClick: () => setTool(\"rectangle\"),\n              children: \"Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"ellipse\",\n              onClick: () => setTool(\"ellipse\"),\n              children: \"Ellipse Shape Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"arcL\",\n              onClick: () => setTool(\"arcL\"),\n              children: \"ABCDE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              \"aria-controls\": \"simple-menu\",\n              \"aria-haspopup\": \"true\",\n              onClick: handleClick,\n              children: \"Door\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              id: \"simple-menu\",\n              anchorEl: anchorEl,\n              keepMounted: true,\n              open: Boolean(anchorEl),\n              onClose: handleClose,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                id: \"arcL\",\n                onClick: () => setTool(\"arcL\"),\n                children: \"Door Left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                id: \"arcR\",\n                onClick: () => setTool(\"arcR\"),\n                children: \"Door Right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: handleClose,\n                children: \"Logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"circle\",\n              onClick: () => setTool(\"circle\"),\n              children: \"circular room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"eraser\",\n              onClick: () => setTool(\"eraser\"),\n              children: \"Erase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"eraser\",\n              onClick: lessItem,\n              children: [\"Change Layer \", /*#__PURE__*/_jsxDEV(ExpandLessIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 76\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"eraser\",\n              onClick: upItem,\n              children: [\"Change Layer \", /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 74\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSave,\n              children: \"Save Local \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: getJson,\n              children: \"JSON\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                const canv = document.getElementById(\"canvas\");\n                const ctx = canv.getContext('2d');\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                setElements([]);\n              },\n              children: \"Clear All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: scrapMe,\n              children: \"Scrap Me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"5%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          style: {\n            background: \"#c0c6c5\",\n            border: \"5px solid darkslategrey\",\n            margin: \"5%\"\n          } // style = {{left : \"10%\" }}\n          ,\n          width: canvWidth,\n          height: canvHeight,\n          id: \"canvas\",\n          onMouseDown: handleMouseDown,\n          onMouseUp: handleMouseUp,\n          onMouseMove: handleMouseMove,\n          children: \"Canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [selectedElement === null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"input-with-icon-adornment\",\n          children: \"Current selected element is : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(Input // onChange={handleChangeWidth}\n        , {\n          value: \"No element is selected\",\n          readOnly: true,\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"input-with-icon-adornment\",\n          children: \"Current selected element is : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Input // onChange={handleChangeWidth}\n        , {\n          value: selectedElement.type === \"rectangle\" ? \"Room\" : selectedElement.type === \"line\" ? \"Wall\" : selectedElement.type === \"ellipse\" ? \"Ellipse Shape Room\" : selectedElement.type === \"arcL\" ? \"Door Left\" : selectedElement.type === \"arcR\" ? \"Door Right\" : selectedElement.type === \"circle\" ? \"Circular Room\" : \"\",\n          readOnly: true,\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"input-with-icon-adornment\",\n        children: \"Your current Width is : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Input // onChange={handleChangeWidth}\n      , {\n        value: canvWidth / 15.36,\n        type: \"number\",\n        step: \".01\",\n        readOnly: true,\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"input-with-icon-adornment\",\n        children: \"Your current Length is : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 797,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Input // onChange={handleChangeWidth}\n      , {\n        value: canvHeight / 15.36,\n        type: \"number\",\n        step: \".01\",\n        readOnly: true,\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"input-with-icon-adornment\",\n          children: \"Element current Width is : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Input // onChange={handleChangeWidth}\n        , {\n          value: ElementWidth / 15.36,\n          type: \"number\",\n          step: \".01\",\n          readOnly: true,\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"input-with-icon-adornment\",\n          children: \"Element current Length is : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Input // onChange={handleChangeWidth}\n        , {\n          value: ElementLength / 15.36,\n          type: \"number\",\n          step: \".01\",\n          readOnly: true,\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 830,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 9\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Values must be valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 32\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 410,\n    columnNumber: 25\n  }, this);\n}\n\n_s(App, \"NR4fwSKm+f/6B0ay+Fyny/CH/xA=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = App;\nexport default App;\nexport { widthh };\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/myapp/client/src/sketch.js"],"names":["React","useLayoutEffect","useState","rough","Button","clsx","TabPanel","PropTypes","useTheme","Drawer","AppBar","Toolbar","List","Typography","Divider","IconButton","ChevronLeftIcon","ChevronRightIcon","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","Avatar","ButtonGroup","Input","InputAdornment","InputLabel","Menu","MenuItem","SwapHorizontalCircleIcon","BuildIcon","LandscapeIcon","SwapVerticalCircleIcon","useStyles","handleMouseDown","handleMouseUp","handleMouseMove","handleSave","isWithinElement","toggleDrawer","MenuIcon","ExpandLessIcon","ExpandMoreIcon","scrapMe","toast","UserServices","heightt","widthh","item","canv","canvWidth","setCanvWidth","canvHeight","setCanvHeight","ElementWidth","setElementWidth","ElementLength","setElementLength","error","setError","canvas","totalLayer","tool","setTool","elements","setElements","selectedElement","setSelectedElement","action","setAction","state","setState","open","setOpen","myArr","setMyArr","mouse","x","y","events","list","anchor","fullList","display","flexDirection","color","map","text","index","distance","a","b","Math","sqrt","pow","getElementAtPosition","find","element","handleDrawerOpen","handleDrawerClose","handleError","putCanvs","texta","document","createElement","setAttribute","textContent","width","height","alert","style","background","border","margin","body","appendChild","addEventListener","onmousedown","onmouseup","onmousemove","C","getElementById","getAttribute","getContext","makePlot","elem","ctx","fillStyle","strokeStyle","lineWidth","borderBlock","App","devWidth","setDevWidth","devHeight","setDevHeight","context","clearRect","roughCanvas","forEach","roughElement","draw","i","cnv","roughCanvas2","handleWrite","wrt","value","font","fillText","classes","theme","bottom","propTypes","children","node","any","isRequired","handleSubmit","window","innerWidth","m","handleCalculate","totalArea","enteredArea","totalCost","cost","myJs","JSON","stringify","parse","length","console","log","type","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","view","setView","handleChange","nextView","getJson","lessItem","upItem","overflow","title","drawer","paper","drawerPaper","drawerHeader","direction","root","hide","isLoggedin","e","save","getLoggedinfo","email","then","data","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","catch","err","response","Boolean","marginTop"],"mappings":"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","sourcesContent":["import './css/App.css';\nimport React, {useLayoutEffect, useState} from 'react';\nimport rough from 'roughjs/bundled/rough.esm';\nimport Button from '@material-ui/core/Button';\nimport clsx from 'clsx';\nimport TabPanel from \"./sketchHelper/TabPanel\";\nimport PropTypes from 'prop-types';\nimport {useTheme} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport {Avatar, ButtonGroup, Input, InputAdornment, InputLabel, Menu, MenuItem} from \"@material-ui/core\";\nimport SwapHorizontalCircleIcon from '@material-ui/icons/SwapHorizontalCircle';\nimport BuildIcon from '@material-ui/icons/Build';\nimport LandscapeIcon from '@material-ui/icons/Landscape';\nimport SwapVerticalCircleIcon from '@material-ui/icons/SwapVerticalCircle';\nimport useStyles from \"./sketchHelper/useStyles\";\nimport {handleMouseDown} from \"./sketchHelper/handleMouseDown\";\nimport {handleMouseUp} from \"./sketchHelper/handleMouseUp\";\nimport {handleMouseMove} from \"./sketchHelper/handleMouseMove\";\nimport {handleSave} from \"./sketchHelper/handleSave\";\nimport {isWithinElement} from \"./sketchHelper/isWithinElement\";\nimport {toggleDrawer} from \"./sketchHelper/toggleDrawer\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {scrapMe} from './scrapMe'\nimport { toast } from \"react-toastify\";\nimport UserServices from \"./services/UserServices\";\n\n\n        let heightt = null;\n        let widthh = null;\n        let item = null;\n        let canv = null;\n        let canvWidth , setCanvWidth = null;\n        let canvHeight , setCanvHeight = null;\n        let ElementWidth , setElementWidth = null;\n        let ElementLength , setElementLength = null;\n        let error , setError ;\n        let canvas = null;\n        let totalLayer = null;\n        let  tool , setTool ;\n        let elements, setElements;\n        let selectedElement , setSelectedElement ;        \n        let action , setAction ;\n        let state , setState;\n        let open , setOpen ;\n        let myArr , setMyArr ;\n\n        export {canvWidth , canvHeight};\n        export {ElementWidth , ElementLength , setElementLength  , setElementWidth};\n        export {error , setError };\n        export {canvas};\n        export {tool , setTool};\n        export {elements , setElements };\n        export {selectedElement , setSelectedElement};\n        export {action , setAction};\n        export {state , setState};\n        export {open , setOpen};        \n        export {myArr , setMyArr};\n            \n        export let mouse = {x : 0, y : 0, events : \"mousemove,mousedown,mouseup\"};\n            \n        export const list = (anchor) => (\n        \n            <div\n                className={clsx(useStyles.list, {\n                    [useStyles.fullList]: anchor === 'top' || anchor === 'bottom',\n                })}\n                role=\"presentation\"\n                onClick={toggleDrawer(anchor, false)}\n                onKeyDown={toggleDrawer(anchor, false)}\n            >\n                <List\n                    style={{display: 'flex' , flexDirection : 'row'}}\n        \n                >\n        \n                    {[<></>\n                        , <Typography style={{color: 'black'}}>Hi</Typography>].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>{index % 2 === 0 ? <Avatar alt=\"Remy Sharp\" src=\"https://tameerghar.com/pub/media/catalog/product/cache/0ee050c3ffc3555709b9bb6062f4d7e9/q/v/qv1l9lrw.psd8.jpg\"/> : <MailIcon />}</ListItemIcon>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    ))}\n                </List>\n        \n        \n            </div>\n        );\n        \n        \n        export const distance = (a,b) => Math.sqrt(Math.pow(a.x - b.x , 2) + Math.pow(a.y - b.y, 2));\n        \n        export const getElementAtPosition = (x,y, elements) => {\n            return elements.find(element => isWithinElement(x,y,element));\n        }\n        \n        export const handleDrawerOpen = () => {\n            setOpen(true);\n        };\n        \n        export const handleDrawerClose = () => {\n            setOpen(false);\n        }; \n        \n        export const handleError = () => {\n            setError(false);\n        }; \n        \n        \n            // const isWithinCanvas = (x,y, element) => {\n            //     const {x1, y1, x2, y2} = element;\n            //\n            //         const minX = Math.min(x1, x2);\n            //         const maxX = Math.max(x1, x2);\n            //         const minY = Math.min(y1, y2);\n            //         const maxy = Math.max(y1, y2);\n            //         return x >= minX && x <= maxX && y <= maxy && y >= minY;\n            //\n            // }\n\n\n            export function putCanvs() {\n\n\n                // for (let item = 0; item < 20; item++) {\n                //     if (count !== 0 && count%5 === 0) {\n                //         document.write(\" ||| \");\n                //     }\n\n\n                // canv.setAttribute('width', window.innerWidth);\n                if (widthh !== null) {\n\n                    item = item + 1;\n                    totalLayer = totalLayer + 1;\n\n\n                    const texta = document.createElement(\"input\");\n\n                    texta.setAttribute('id', 'itemNo'\n                    + item\n                    );\n\n\n                    texta.textContent = '111';\n\n                    canv = document.createElement(\"canvas\");\n\n                    canv.width = canvas.width;\n                    // canv.setAttribute('height', window.innerHeight * heightt/100);\n                    canv.height = canvas.height;\n                    canv.setAttribute('id', 'canv'\n                    + item\n                    );\n\n\n\n                    alert(totalLayer);\n                    canv.style.background = \"#c0c6c5\";\n\n                    canv.style.border = \"5px solid darkslategrey\";\n\n                    canv.style.margin = \"14.4%\";\n\n                    document.body.appendChild(canv);\n\n                    canv.addEventListener('mousedown' , handleMouseDown , true);\n                    canv.addEventListener('mouseup' , handleMouseUp , true);\n                    canv.addEventListener('mousemove' , handleMouseMove , true);\n\n                    canv.onmousedown = handleMouseDown;\n                    canv.onmouseup = handleMouseUp;\n                    canv.onmousemove = handleMouseMove;\n                    const C = document.getElementById(canv.getAttribute('id'));\n                    if (C.getContext) {\n                        if (C.getContext) {\n                            makePlot(C);\n                        }\n                    }\n                }\n                else {\n                    alert(\"Please Enter Width and Length First\");\n                    setOpen(true);\n                }\n            }\n\n            function makePlot(elem) {\n\n                const ctx = elem.getContext(\"2d\");\n                ctx.fillStyle   = '#00f';\n                ctx.strokeStyle = 'black';\n                ctx.lineWidth   = 5;\n                ctx.borderBlock = 1;\n\n            }\n\n            // const getCvsAtPosition = (x,y, elements) => {\n                //     return elements.find(element => isWithinCanvas(x,y,element));\n                // }\n\n            function App() {\n\n                [tool, setTool] = useState(\"selection\");\n                [elements, setElements] = useState([]);\n                [action , setAction] = useState('none');\n                [canvWidth, setCanvWidth] = useState(null);\n                [canvHeight, setCanvHeight] = useState(null);\n                [myArr , setMyArr] = useState([]);\n                [ElementWidth , setElementWidth] = useState(null);\n                [ElementLength , setElementLength] = useState(null);\n                [selectedElement , setSelectedElement] = useState(null);\n                [error , setError] = useState(false);\n                const [devWidth, setDevWidth] = useState(null);\n                const [devHeight, setDevHeight] = useState(null);\n\n\n                // let canv = null;\n    \n                // }\n\n                useLayoutEffect(() => {\n\n                    if(widthh !== null)\n                    {\n\n                        canvas = document.getElementById('canvas');\n                        const context = canvas.getContext('2d');\n                        context.clearRect(0, 0, canvas.width, canvas.height);\n\n                        const roughCanvas = rough.canvas(canvas);\n                        elements.forEach(({roughElement}) => roughCanvas.draw(roughElement));\n\n\n                        // const roughCanvas222 = rough.canvas(canvas2);\n                        // elements.forEach(({roughElement}) => roughCanvas222.draw(roughElement));\n                        //\n                        //      canv = document.getElementById('canv' + 1);\n                        //     const ctx = canv.getContext('2d');\n                        //     ctx.clearRect(0,0,canvas.width, canvas.height);\n                        //\n                        //     const roughCanvas2 = rough.canvas(canv);\n                        //     elements.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n\n\n                        for(let i = 1 ; i <= item ; i ++) {\n                            const cnv = document.getElementById('canv' + item);\n                            const ctx = cnv.getContext('2d');\n\n                            ctx.clearRect(0,0,cnv.width, cnv.height);\n                            const roughCanvas2 = rough.canvas(cnv);\n                            // let element+item;\n                            // let\n                            elements.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n                        }\n\n                    }\n                            \n                    else {\n                        alert(\"Please Enter Width and Length First\");\n                        setOpen(true);\n                    }\n                }\n                // ,\n                // [\n                    //     elements , canvas , item\n                    // ]\n    \n                    );\n\n                    function handleWrite(){\n\n                        const context = canvas.getContext('2d');\n\n                        const wrt = document.getElementById(\"write\").value;\n                        context.fillStyle = \"white\";\n                        context.font = \"bold 16px Arial\";\n                        context.fillText(wrt , (canvas.width / 2) - 17, (canvas.height / 2) + 8);\n\n                    }\n\n                    const classes = useStyles();\n                    const theme = useTheme();\n                    [open, setOpen] = React.useState(false);\n                    \n                    [state, setState] = React.useState({\n                        bottom: false,\n                    });\n\n                    TabPanel.propTypes = {\n                        children: PropTypes.node,\n                        index: PropTypes.any.isRequired,\n                        value: PropTypes.any.isRequired,\n                    };\n\n                    const handleSubmit = () => {\n                        heightt = document.getElementById(\"height\").value;\n                        widthh = document.getElementById(\"width\").value;\n                        alert(\" Length  \" + heightt + \"   width  \" + widthh + \"   was submitted\");\n                        canvas = document.getElementById(\"canvas\");\n                        setCanvWidth( window.innerWidth * widthh/100 );\n                        setCanvHeight(window.innerWidth * heightt/100);\n                        canvas.width = canvWidth ;\n                        canvas.height = canvHeight;\n\n                        const m = widthh * heightt;\n                        document.getElementById(\"marla\").value = m / 270 ;\n\n                    }\n\n\n\n                    const handleCalculate = () => {\n                        const totalArea = widthh * heightt;\n                        const enteredArea = document.getElementById(\"area\").value ;\n\n\n                        \n                        const totalCost = totalArea * 250;\n                        const cost = enteredArea * 250;\n                        let myJs = JSON.stringify(elements);\n                        setMyArr(JSON.parse(myJs))\n\n                        for(var i = 0; i < myArr.length ; i++)\n                        {\n                            console.log( myArr[i].type);\n                        }\n\n                        document.getElementById(\"myArea\").value = totalCost ;\n                        document.getElementById(\"eArea\").value = cost ;\n\n                    }\n\n                    const [anchorEl, setAnchorEl] = React.useState(null);\n                    const handleClick = (event) => {\n\n                        setAnchorEl(event.currentTarget);\n\n                    };\n\n                    const handleClose = () => {\n                        setAnchorEl(null);\n                    };\n                    \n                    const [view, setView] = React.useState('list');\n                    const handleChange = (event, nextView) => {\n                        setView(nextView);\n                    };\n\n\n\n\n                    let getJson = () => {\n                        let myJs = JSON.stringify(elements);\n                        setMyArr(JSON.parse(myJs))\n                        console.log( myArr );\n                    }\n                    \n                    let lessItem = () => {\n                        if(item > 0) {\n                            item = item - 1;\n                            alert(item);\n                        }\n                        else alert(\"Already on First\");\n                    }\n\n                    let upItem = () => {\n                        if(item < totalLayer){\n                            item = item + 1;\n                            alert(item);\n                        }\n                        else alert(\"Already on Last\");\n                    }\n\n                    // var canvas = document.getElementById(\"canvas\"),\n                    //     ctx = canvas.getContext(\"2d\");\n                    // var b = ball[i];\n                    // b.draw(b.x, b.y, b.color ,b.radius);\n\n                    \n                    \n                    \n                    \n\n\n\n\n\n\n\n\n\n\n\n\n                    return (\n                        <div style={{overflow: \"hidden\"}}>\n\n                            <Toolbar>\n                                <Typography variant=\"h6\" noWrap className={classes.title} style={{color : \"#4E4141\"}}>\n\n                                    {['bottom'].map((anchor) => (\n                                        <React.Fragment key={anchor}>\n                                \n                                            <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n                                \n                                                {list(anchor)}\n                                            </Drawer>\n                                        </React.Fragment>\n                                    ))}\n                                </Typography>\n                    \n                            </Toolbar>\n            \n                            <Drawer\n                                className={classes.drawer}\n                                variant=\"persistent\"\n                                anchor=\"right\"\n                                open={open}\n                                classes={{\n                                    paper: classes.drawerPaper,\n                                }}\n                                >\n                                <div className={classes.drawerHeader}>\n                                    <IconButton onClick={handleDrawerClose}>\n                                        {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                                    </IconButton>\n                                </div>\n\n                               <Divider />\n                                <List>\n                                    {[<div>\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Enter Width (feet)</InputLabel>\n                                            <Input\n                                                id=\"width\"\n                                                type=\"number\"\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                        <SwapHorizontalCircleIcon />\n                                                    </InputAdornment>\n                                                }\n                                            />\n                                                \n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Enter Length (feet)</InputLabel>\n\n                                            <Input\n                                                id=\"height\"\n                                                type=\"number\"\n                                                startAdornment={\n                                                <InputAdornment position=\"start\">\n                                                    <SwapVerticalCircleIcon />\n                                                </InputAdornment>\n                                                }\n                                            />\n                                            <Button value=\"Submit\" onClick={handleSubmit}>\n                                                Submit\n                                            </Button>\n\n                                    </div>, <div>\n\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Your current Marla is : </InputLabel>\n                                            <Input\n                                                id=\"marla\"\n                                                type=\"number\"\n                                                step=\"any\"\n                                                readOnly\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                    </InputAdornment>\n                                                }\n                                            />\n\n                                    </div>,\n\n                                    <div>\n\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Enter Text </InputLabel>\n                                            <Input\n\n                                                id=\"write\"\n                                                type=\"text\"\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                    </InputAdornment>\n                                                }\n                                            />\n\n                                            <Button onClick={handleWrite} >Write</Button>\n\n                                    </div>, <div>\n\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Enter Area (Sq. feet)</InputLabel>\n                                            <Input\n                                                id=\"area\"\n                                                type=\"number\"\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                        <SwapHorizontalCircleIcon /> <h2>*</h2>\n                                                        <SwapVerticalCircleIcon />\n                                                    </InputAdornment>\n                                                }\n                                            />\n\n                                        <Button value=\"calculate\" onClick={handleCalculate}>\n                                            Submit\n                                        </Button>\n\n                                    </div>].map((text, index) => (\n                                        <ListItem button key={text}>\n                                            <ListItemIcon>{index % 2 === 0 ? < BuildIcon /> : <LandscapeIcon />}</ListItemIcon>\n                                            <ListItemText primary={text} />\n                                        </ListItem>\n                                    ))}\n\n\n\n                </List>\n\n                <List>\n                    {[<div>\n\n                        <InputLabel htmlFor=\"input-with-icon-adornment\">Total Cost of total area </InputLabel>\n                        <Input\n                            // onChange={handleChangeWidth}\n                            id=\"myArea\"\n                            type=\"number\"\n                            step=\"any\"\n                            readOnly\n                            startAdornment={\n                                <InputAdornment position=\"start\">\n\n                                </InputAdornment>\n                            }\n                        />\n\n                    </div>, <div>\n\n                        <InputLabel htmlFor=\"input-with-icon-adornment\">Total Cost of Entered Area </InputLabel>\n                        <Input\n                            // onChange={handleChangeWidth}\n                            id=\"eArea\"\n                            type=\"number\"\n                            step=\"any\"\n                            readOnly\n                            startAdornment={\n                                <InputAdornment position=\"start\">\n\n                                </InputAdornment>\n                            }\n                        />\n\n                    </div>, <div>\n\n                                <InputLabel htmlFor=\"input-with-icon-adornment\">Total Cost of Created Area </InputLabel>\n                                    <Input\n                                    // onChange={handleChangeWidth}\n                                    id=\"cArea\"\n                                    type=\"number\"\n                                    step=\"any\"\n                                    readOnly\n                                    startAdornment={\n                                    <InputAdornment position=\"start\">\n\n                                    </InputAdornment>\n                                    }\n                                    />\n\n                    </div>].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n\n<div className=\"row\">\n    <div className=\"col-md-2\">\n\n    \n            <div className={classes.root}>\n\n                <ButtonGroup\n                    // orientation=\"vertical\"\n                    // color=\"#c0c6c5\"\n                    // aria-label=\"vertical contained primary button group\"\n                    // variant=\"contained\"\n\n                 orientation=\"vertical\"\n                 value={view}\n                 exclusive\n                 onChange={handleChange}\n                >\n                    <IconButton\n                        color=\"#ffffff\"\n                        aria-label=\"open drawer\"\n                        edge=\"end\"\n                        onClick={handleDrawerOpen}\n                        className={clsx(open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    \n\n{UserServices.isLoggedin ?\n       (\n<Button  onClick={(e) => {\n         UserServices.save(elements , UserServices.getLoggedinfo().email)\n         .then((data) => {\n           console.log(data);\n           toast.success(data, {\n             position: \"bottom-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n           });\n         })\n         .catch((err) => {\n           toast.error(err.response.data, {\n             position: \"bottom-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n           });\n         });\n        }} >Save</Button>\n ) : \n\n (\"\")\n \n }  \n             \n            \n                    <Button onClick={putCanvs} >Add Layer</Button>\n                    <Button id = \"selection\" onClick={() => setTool(\"selection\")}   aria-label=\"left aligned\">Selection</Button>\n                    <Button id = \"selection\" onClick={() => setTool(\"sizes\")}   aria-label=\"left aligned\">Get Size</Button>\n                    <Button id = \"text\" onClick={() => setTool(\"text\")}>Text</Button>\n                    <Button id = \"resize\" onClick={() => setTool(\"resize\")}>Re - Factor</Button>\n                    <Button id = \"line\" onClick={() => setTool(\"line\")}>Wall</Button>\n                    <Button id = \"rectangle\" onClick={() => setTool(\"rectangle\")}>Room</Button>\n                    <Button id = \"ellipse\" onClick={() => setTool(\"ellipse\")}>Ellipse Shape Room</Button>\n                    <Button id = \"arcL\" onClick={() => setTool(\"arcL\")}>ABCDE</Button>\n\n                        <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                            Door\n                        </Button>\n                        <Menu\n                            id=\"simple-menu\"\n                            anchorEl={anchorEl}\n                            keepMounted\n                            open={Boolean(anchorEl)}\n                            onClose={handleClose}\n                        >\n                            <MenuItem id = \"arcL\" onClick={() => setTool(\"arcL\")  }>Door Left</MenuItem>\n                            <MenuItem id = \"arcR\" onClick={() => setTool(\"arcR\")  }>Door Right</MenuItem>\n                            <MenuItem onClick={handleClose}>Logout</MenuItem>\n                        </Menu>\n\n\n                    <Button id = \"circle\" onClick={() => setTool(\"circle\")}>circular room</Button>\n                    <Button id = \"eraser\" onClick={() => setTool(\"eraser\")}>Erase</Button>\n                    <Button id = \"eraser\" onClick={lessItem} >Change Layer <ExpandLessIcon/> </Button>\n                    <Button id = \"eraser\" onClick={upItem} >Change Layer <ExpandMoreIcon/></Button>\n                    <Button onClick={handleSave} >Save Local </Button>\n                    <Button onClick={getJson} >JSON</Button>\n                    <Button onClick={()=>{\n                        const canv = document.getElementById(\"canvas\");\n                        const ctx = canv.getContext('2d')\n                        ctx.clearRect(0, 0, canvas.width, canvas.height);\n                        setElements([]);\n                    }} >Clear All</Button>\n                    <Button \n                        onClick={scrapMe\n                            }>\n                        Scrap Me</Button>\n                </ButtonGroup>\n\n            </div>\n            </div>\n\n\n            <div\n                style=\n                    {{\n                        marginTop  : \"5%\" ,\n                    }}>\n\n\n                <canvas\n                    style = {{background:\"#c0c6c5\" , border : \"5px solid darkslategrey\" , margin : \"5%\"}}\n                    // style = {{left : \"10%\" }}\n                    width = {canvWidth}\n                    height = {canvHeight}\n                    id = \"canvas\"\n                    onMouseDown={handleMouseDown}\n                    onMouseUp={handleMouseUp}\n                    onMouseMove={handleMouseMove}\n\n                >\n                    Canvas</canvas>\n\n\n\n                \n            </div>\n        </div>\n\n        <div>\n\n        {selectedElement === null ? (\n                               \n                               <div className=\"container\">\n                               <InputLabel htmlFor=\"input-with-icon-adornment\">Current selected element is : </InputLabel>\n         <Input\n        // onChange={handleChangeWidth}\n        value  = \"No element is selected\"\n        readOnly\n        startAdornment={\n        <InputAdornment position=\"start\">\n\n        </InputAdornment>\n                            }\n                        />\n\n                                </div>\n                            ) : \n\n                            <div className = \"container\">\n                                <InputLabel htmlFor=\"input-with-icon-adornment\">Current selected element is : </InputLabel>\n         <Input\n        // onChange={handleChangeWidth}\n        value  =  {selectedElement.type === \"rectangle\" ? (\n                               \"Room\"            \n                    ) : \n                    selectedElement.type === \"line\" ? (\n                        \"Wall\"\n                    ) : \n                    selectedElement.type === \"ellipse\" ? (\n                        \"Ellipse Shape Room\"\n                    ) :\n                    selectedElement.type === \"arcL\" ? (\n                        \"Door Left\"\n                    ) : \n                    selectedElement.type === \"arcR\" ? (\n                        \"Door Right\"\n                    ) : \n                    selectedElement.type === \"circle\" ? (\n                        \"Circular Room\"\n                    ) : (\"\")\n         \n         }  \n        readOnly\n        startAdornment={\n        <InputAdornment position=\"start\">\n\n        </InputAdornment>\n                            }\n                        />\n                                </div>\n                            \n                            }\n\n         <InputLabel htmlFor=\"input-with-icon-adornment\">Your current Width is : </InputLabel>\n         <Input\n        // onChange={handleChangeWidth}\n        value  = {canvWidth / 15.36 } \n        type=\"number\"\n        step=\".01\"\n        readOnly\n        startAdornment={\n        <InputAdornment position=\"start\">\n\n        </InputAdornment>\n                            }\n                        />\n\n\n    <InputLabel htmlFor=\"input-with-icon-adornment\">Your current Length is : </InputLabel>\n         <Input\n        // onChange={handleChangeWidth}\n        value  = {canvHeight / 15.36 } \n        type=\"number\"\n        step=\".01\"\n        readOnly\n        startAdornment={\n        <InputAdornment position=\"start\">\n\n        </InputAdornment>\n                            }\n                        />\n\n    \n        <div>\n    <InputLabel htmlFor=\"input-with-icon-adornment\">Element current Width is : </InputLabel>\n             <Input\n            // onChange={handleChangeWidth}\n            value  = {  ElementWidth   / 15.36 } \n            type=\"number\"\n             step=\".01\"\n            readOnly\n            startAdornment={\n            <InputAdornment position=\"start\">\n\n            </InputAdornment>\n                            }\n                        />\n            </div>\n\n\n\n        <div>\n    <InputLabel htmlFor=\"input-with-icon-adornment\">Element current Length is : </InputLabel>\n             <Input\n            // onChange={handleChangeWidth}\n            value  = {\n                  (   ElementLength   )   /\n                   15.36 }\n            type=\"number\"\n             step=\".01\"\n            readOnly\n            startAdornment={\n            <InputAdornment position=\"start\">\n\n            </InputAdornment>\n                            }\n                        />\n            </div>\n\n        </div>\n\n        {error ? (\n                               \n                               <div className=\"container\">\n                               <h3>Values must be valid</h3>\n\n                                </div>\n                            ) : \n\n                            (\"\")\n                            \n                            }        \n        </div>\n    );\n}\n\nexport default App;\nexport { widthh };"]},"metadata":{},"sourceType":"module"}