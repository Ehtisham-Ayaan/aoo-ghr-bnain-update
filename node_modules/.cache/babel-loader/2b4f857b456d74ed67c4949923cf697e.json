{"ast":null,"code":"/* eslint-disable */\n\n/*\n * querystring-stringify.js\n *   - node.js module providing 'stringify' method for converting objects to query strings.\n *\n * Chad Etzel\n *\n * Based on YUI \"querystring-stringify.js\" module\n * http://github.com/isaacs/yui3/tree/master/src/querystring/js\n *\n * Copyright (c) 2009, Yahoo! Inc. and Chad Etzel\n * BSD License (see LICENSE.md for info)\n *\n */\nvar util = require(\"./util\");\n\nexports.stringify = querystring_stringify;\nvar stack = [];\n/**\n * <p>Converts an arbitrary value to a Query String representation.</p>\n *\n * <p>Objects with cyclical references will trigger an exception.</p>\n *\n * @method stringify\n * @param obj {Variant} any arbitrary value to convert to query string\n * @param sep {String} (optional) Character that should join param k=v pairs together. Default: \"&\"\n * @param eq  {String} (optional) Character that should join keys to their values. Default: \"=\"\n * @param name {String} (optional) Name of the current key, for handling children recursively.\n * @param escape {Function} (optional) Function for escaping. Default: encodeURIComponent\n */\n\nfunction querystring_stringify(obj, sep, eq, name, escape) {\n  sep = sep || \"&\";\n  eq = eq || \"=\";\n  escape = escape || encodeURIComponent;\n\n  if (util.isNull(obj) || util.isUndefined(obj) || typeof obj === 'function') {\n    return name ? escape(name) + eq : '';\n  }\n\n  if (util.isBoolean(obj)) obj = +obj;\n\n  if (util.isNumber(obj) || util.isString(obj)) {\n    return escape(name) + eq + escape(obj);\n  }\n\n  if (util.isArray(obj)) {\n    var s = [];\n    name = name + '[]';\n\n    for (var i = 0, l = obj.length; i < l; i++) {\n      s.push(querystring_stringify(obj[i], sep, eq, name, escape));\n    }\n\n    return s.join(sep);\n  } // Check for cyclical references in nested objects\n\n\n  for (var i = stack.length - 1; i >= 0; --i) if (stack[i] === obj) {\n    throw new Error(\"querystring_stringify. Cyclical reference\");\n  }\n\n  stack.push(obj);\n  var s = [];\n  var begin = name ? name + '[' : '';\n  var end = name ? ']' : '';\n\n  for (var i in obj) if (obj.hasOwnProperty(i)) {\n    var n = begin + i + end;\n    s.push(querystring_stringify(obj[i], sep, eq, n, escape));\n  }\n\n  stack.pop();\n  s = s.join(sep);\n  if (!s && name) return name + \"=\";\n  return s;\n}\n\n;","map":{"version":3,"sources":["C:/Users/alpha/OneDrive/myapp/client/node_modules/braintree/vendor/querystring.node.js.511d6a2/querystring-stringify.js"],"names":["util","require","exports","stringify","querystring_stringify","stack","obj","sep","eq","name","escape","encodeURIComponent","isNull","isUndefined","isBoolean","isNumber","isString","isArray","s","i","l","length","push","join","Error","begin","end","hasOwnProperty","n","pop"],"mappings":"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","sourcesContent":["/* eslint-disable */\n/*\n * querystring-stringify.js\n *   - node.js module providing 'stringify' method for converting objects to query strings.\n *\n * Chad Etzel\n *\n * Based on YUI \"querystring-stringify.js\" module\n * http://github.com/isaacs/yui3/tree/master/src/querystring/js\n *\n * Copyright (c) 2009, Yahoo! Inc. and Chad Etzel\n * BSD License (see LICENSE.md for info)\n *\n */\n\nvar util = require(\"./util\");\n\nexports.stringify = querystring_stringify;\n\nvar stack = [];\n/**\n * <p>Converts an arbitrary value to a Query String representation.</p>\n *\n * <p>Objects with cyclical references will trigger an exception.</p>\n *\n * @method stringify\n * @param obj {Variant} any arbitrary value to convert to query string\n * @param sep {String} (optional) Character that should join param k=v pairs together. Default: \"&\"\n * @param eq  {String} (optional) Character that should join keys to their values. Default: \"=\"\n * @param name {String} (optional) Name of the current key, for handling children recursively.\n * @param escape {Function} (optional) Function for escaping. Default: encodeURIComponent\n */\nfunction querystring_stringify (obj, sep, eq, name, escape) {\n  sep = sep || \"&\";\n  eq = eq || \"=\";\n  escape = escape || encodeURIComponent;\n\n  if (util.isNull(obj) || util.isUndefined(obj) || typeof(obj) === 'function') {\n    return name ? escape(name) + eq : '';\n  }\n\n  if (util.isBoolean(obj)) obj = +obj;\n  if (util.isNumber(obj) || util.isString(obj)) {\n    return escape(name) + eq + escape(obj);\n  }\n  if (util.isArray(obj)) {\n    var s = [];\n    name = name+'[]';\n    for (var i = 0, l = obj.length; i < l; i ++) {\n      s.push( querystring_stringify(obj[i], sep, eq, name, escape) );\n    }\n    return s.join(sep);\n  }\n\n  // Check for cyclical references in nested objects\n  for (var i = stack.length - 1; i >= 0; --i) if (stack[i] === obj) {\n    throw new Error(\"querystring_stringify. Cyclical reference\");\n  }\n\n  stack.push(obj);\n\n  var s = [];\n  var begin = name ? name + '[' : '';\n  var end = name ? ']' : '';\n  for (var i in obj) if (obj.hasOwnProperty(i)) {\n    var n = begin + i + end;\n    s.push(querystring_stringify(obj[i], sep, eq, n, escape));\n  }\n\n  stack.pop();\n\n  s = s.join(sep);\n  if (!s && name) return name + \"=\";\n  return s;\n};\n\n"]},"metadata":{},"sourceType":"script"}