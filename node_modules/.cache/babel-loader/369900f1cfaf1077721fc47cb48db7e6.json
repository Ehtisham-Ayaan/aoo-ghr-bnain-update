{"ast":null,"code":"'use strict';\n\nconst gatewaySymbol = Symbol();\n\nlet AttributeSetter = require('./attribute_setter').AttributeSetter;\n\nlet ApplePayCard = require('./apple_pay_card').ApplePayCard;\n\nlet AndroidPayCard = require('./android_pay_card').AndroidPayCard;\n\nlet AuthorizationAdjustment = require('./authorization_adjustment').AuthorizationAdjustment;\n\nlet CreditCard = require('./credit_card').CreditCard;\n\nlet PayPalAccount = require('./paypal_account').PayPalAccount;\n\nlet PayPalHereDetails = require('./paypal_here_details').PayPalHereDetails;\n\nlet LocalPayment = require('./local_payment').LocalPayment;\n\nlet DisbursementDetails = require('./disbursement_details').DisbursementDetails;\n\nlet Dispute = require('./dispute').Dispute;\n\nlet FacilitatedDetails = require('./facilitated_details').FacilitatedDetails;\n\nlet FacilitatorDetails = require('./facilitator_details').FacilitatorDetails;\n\nlet RiskData = require('./risk_data').RiskData;\n\nlet ThreeDSecureInfo = require('./three_d_secure_info').ThreeDSecureInfo;\n\nlet UsBankAccount = require('./us_bank_account').UsBankAccount;\n\nlet VisaCheckoutCard = require('./visa_checkout_card').VisaCheckoutCard;\n\nlet SamsungPayCard = require('./samsung_pay_card').SamsungPayCard;\n\nlet wrapPrototype = require('@braintree/wrap-promise').wrapPrototype;\n\nclass Transaction extends AttributeSetter {\n  static initClass() {\n    this.CreatedUsing = {\n      FullInformation: 'full_information',\n      Token: 'token'\n    };\n    this.EscrowStatus = {\n      HoldPending: 'hold_pending',\n      Held: 'held',\n      ReleasePending: 'release_pending',\n      Released: 'released',\n      Refunded: 'refunded'\n    };\n    this.Source = {\n      Api: 'api',\n      ControlPanel: 'control_panel',\n      Recurring: 'recurring'\n    };\n    this.Type = {\n      Credit: 'credit',\n      Sale: 'sale',\n\n      All() {\n        let all = [];\n\n        for (let key in this) {\n          if (!this.hasOwnProperty(key)) {\n            continue;\n          }\n\n          let value = this[key];\n\n          if (key !== 'All') {\n            all.push(value);\n          }\n        }\n\n        return all;\n      }\n\n    };\n    this.GatewayRejectionReason = {\n      ApplicationIncomplete: 'application_incomplete',\n      Avs: 'avs',\n      Cvv: 'cvv',\n      AvsAndCvv: 'avs_and_cvv',\n      Duplicate: 'duplicate',\n      Fraud: 'fraud',\n      RiskThreshold: 'risk_threshold',\n      ThreeDSecure: 'three_d_secure',\n      TokenIssuance: 'token_issuance'\n    };\n    this.IndustryData = {\n      Lodging: 'lodging',\n      TravelAndCruise: 'travel_cruise',\n      TravelAndFlight: 'travel_flight'\n    };\n    this.AdditionalCharge = {\n      Restaurant: 'restaurant',\n      GiftShop: 'gift_shop',\n      MiniBar: 'mini_bar',\n      Telephone: 'telephone',\n      Laundry: 'laundry',\n      Other: 'other'\n    };\n    this.Status = {\n      AuthorizationExpired: 'authorization_expired',\n      Authorizing: 'authorizing',\n      Authorized: 'authorized',\n      GatewayRejected: 'gateway_rejected',\n      Failed: 'failed',\n      ProcessorDeclined: 'processor_declined',\n      Settled: 'settled',\n      Settling: 'settling',\n      SettlementConfirmed: 'settlement_confirmed',\n      SettlementDeclined: 'settlement_declined',\n      SettlementPending: 'settlement_pending',\n      SubmittedForSettlement: 'submitted_for_settlement',\n      Voided: 'voided',\n\n      All() {\n        let all = [];\n\n        for (let key in this) {\n          if (!this.hasOwnProperty(key)) {\n            continue;\n          }\n\n          let value = this[key];\n\n          if (key !== 'All') {\n            all.push(value);\n          }\n        }\n\n        return all;\n      }\n\n    };\n    this.ExternalVault = {\n      WillVault: 'will_vault',\n      Vaulted: 'vaulted'\n    };\n  }\n\n  constructor(attributes, passedInGateway) {\n    super(attributes);\n    this.creditCard = new CreditCard(attributes.creditCard);\n    this.paypalAccount = new PayPalAccount(attributes.paypal);\n    this.paypalHereDetails = new PayPalHereDetails(attributes.paypalHere);\n    this.localPayment = new LocalPayment(attributes.localPayment);\n    this.applePayCard = new ApplePayCard(attributes.applePay); // NEXT_MAJOR_VERSION rename Android Pay to Google Pay\n\n    this.androidPayCard = new AndroidPayCard(attributes.androidPayCard);\n    this.disbursementDetails = new DisbursementDetails(attributes.disbursementDetails);\n    this.visaCheckoutCard = new VisaCheckoutCard(attributes.visaCheckoutCard);\n    this.samsungPayCard = new SamsungPayCard(attributes.samsungPayCard);\n\n    if (attributes.disputes != null) {\n      this.disputes = attributes.disputes.map(disputeAttributes => new Dispute(disputeAttributes));\n    }\n\n    if (attributes.facilitatedDetails) {\n      this.facilitatedDetails = new FacilitatedDetails(attributes.facilitatedDetails);\n    }\n\n    if (attributes.facilitatorDetails) {\n      this.facilitatorDetails = new FacilitatorDetails(attributes.facilitatorDetails);\n    }\n\n    if (attributes.riskData) {\n      this.riskData = new RiskData(attributes.riskData);\n    }\n\n    if (attributes.threeDSecureInfo) {\n      this.threeDSecureInfo = new ThreeDSecureInfo(attributes.threeDSecureInfo);\n    }\n\n    if (attributes.usBankAccount) {\n      this.usBankAccount = new UsBankAccount(attributes.usBankAccount);\n    }\n\n    if (attributes.authorizationAdjustments) {\n      this.authorizationAdjustments = attributes.authorizationAdjustments.map(authorizationAdjustmentAttributes => new AuthorizationAdjustment(authorizationAdjustmentAttributes));\n    }\n\n    this[gatewaySymbol] = passedInGateway;\n  }\n\n  isDisbursed() {\n    return this.disbursementDetails.isValid();\n  }\n\n  lineItems() {\n    return this[gatewaySymbol].transactionLineItem.findAll(this.id);\n  }\n\n}\n\nTransaction.initClass();\nmodule.exports = {\n  Transaction: wrapPrototype(Transaction, {})\n};","map":{"version":3,"sources":["C:/Users/alpha/OneDrive/myapp/client/node_modules/braintree/lib/braintree/transaction.js"],"names":["gatewaySymbol","Symbol","AttributeSetter","require","ApplePayCard","AndroidPayCard","AuthorizationAdjustment","CreditCard","PayPalAccount","PayPalHereDetails","LocalPayment","DisbursementDetails","Dispute","FacilitatedDetails","FacilitatorDetails","RiskData","ThreeDSecureInfo","UsBankAccount","VisaCheckoutCard","SamsungPayCard","wrapPrototype","Transaction","initClass","CreatedUsing","FullInformation","Token","EscrowStatus","HoldPending","Held","ReleasePending","Released","Refunded","Source","Api","ControlPanel","Recurring","Type","Credit","Sale","All","all","key","hasOwnProperty","value","push","GatewayRejectionReason","ApplicationIncomplete","Avs","Cvv","AvsAndCvv","Duplicate","Fraud","RiskThreshold","ThreeDSecure","TokenIssuance","IndustryData","Lodging","TravelAndCruise","TravelAndFlight","AdditionalCharge","Restaurant","GiftShop","MiniBar","Telephone","Laundry","Other","Status","AuthorizationExpired","Authorizing","Authorized","GatewayRejected","Failed","ProcessorDeclined","Settled","Settling","SettlementConfirmed","SettlementDeclined","SettlementPending","SubmittedForSettlement","Voided","ExternalVault","WillVault","Vaulted","constructor","attributes","passedInGateway","creditCard","paypalAccount","paypal","paypalHereDetails","paypalHere","localPayment","applePayCard","applePay","androidPayCard","disbursementDetails","visaCheckoutCard","samsungPayCard","disputes","map","disputeAttributes","facilitatedDetails","facilitatorDetails","riskData","threeDSecureInfo","usBankAccount","authorizationAdjustments","authorizationAdjustmentAttributes","isDisbursed","isValid","lineItems","transactionLineItem","findAll","id","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst gatewaySymbol = Symbol();\n\nlet AttributeSetter = require('./attribute_setter').AttributeSetter;\nlet ApplePayCard = require('./apple_pay_card').ApplePayCard;\nlet AndroidPayCard = require('./android_pay_card').AndroidPayCard;\nlet AuthorizationAdjustment = require('./authorization_adjustment').AuthorizationAdjustment;\nlet CreditCard = require('./credit_card').CreditCard;\nlet PayPalAccount = require('./paypal_account').PayPalAccount;\nlet PayPalHereDetails = require('./paypal_here_details').PayPalHereDetails;\nlet LocalPayment = require('./local_payment').LocalPayment;\nlet DisbursementDetails = require('./disbursement_details').DisbursementDetails;\nlet Dispute = require('./dispute').Dispute;\nlet FacilitatedDetails = require('./facilitated_details').FacilitatedDetails;\nlet FacilitatorDetails = require('./facilitator_details').FacilitatorDetails;\nlet RiskData = require('./risk_data').RiskData;\nlet ThreeDSecureInfo = require('./three_d_secure_info').ThreeDSecureInfo;\nlet UsBankAccount = require('./us_bank_account').UsBankAccount;\nlet VisaCheckoutCard = require('./visa_checkout_card').VisaCheckoutCard;\nlet SamsungPayCard = require('./samsung_pay_card').SamsungPayCard;\nlet wrapPrototype = require('@braintree/wrap-promise').wrapPrototype;\n\nclass Transaction extends AttributeSetter {\n  static initClass() {\n    this.CreatedUsing = {\n      FullInformation: 'full_information',\n      Token: 'token'\n    };\n\n    this.EscrowStatus = {\n      HoldPending: 'hold_pending',\n      Held: 'held',\n      ReleasePending: 'release_pending',\n      Released: 'released',\n      Refunded: 'refunded'\n    };\n\n    this.Source = {\n      Api: 'api',\n      ControlPanel: 'control_panel',\n      Recurring: 'recurring'\n    };\n\n    this.Type = {\n      Credit: 'credit',\n      Sale: 'sale',\n      All() {\n        let all = [];\n\n        for (let key in this) {\n          if (!this.hasOwnProperty(key)) {\n            continue;\n          }\n          let value = this[key];\n\n          if (key !== 'All') { all.push(value); }\n        }\n\n        return all;\n      }\n    };\n\n    this.GatewayRejectionReason = {\n      ApplicationIncomplete: 'application_incomplete',\n      Avs: 'avs',\n      Cvv: 'cvv',\n      AvsAndCvv: 'avs_and_cvv',\n      Duplicate: 'duplicate',\n      Fraud: 'fraud',\n      RiskThreshold: 'risk_threshold',\n      ThreeDSecure: 'three_d_secure',\n      TokenIssuance: 'token_issuance'\n    };\n\n    this.IndustryData = {\n      Lodging: 'lodging',\n      TravelAndCruise: 'travel_cruise',\n      TravelAndFlight: 'travel_flight'\n    };\n\n    this.AdditionalCharge = {\n      Restaurant: 'restaurant',\n      GiftShop: 'gift_shop',\n      MiniBar: 'mini_bar',\n      Telephone: 'telephone',\n      Laundry: 'laundry',\n      Other: 'other'\n    };\n\n    this.Status = {\n      AuthorizationExpired: 'authorization_expired',\n      Authorizing: 'authorizing',\n      Authorized: 'authorized',\n      GatewayRejected: 'gateway_rejected',\n      Failed: 'failed',\n      ProcessorDeclined: 'processor_declined',\n      Settled: 'settled',\n      Settling: 'settling',\n      SettlementConfirmed: 'settlement_confirmed',\n      SettlementDeclined: 'settlement_declined',\n      SettlementPending: 'settlement_pending',\n      SubmittedForSettlement: 'submitted_for_settlement',\n      Voided: 'voided',\n      All() {\n        let all = [];\n\n        for (let key in this) {\n          if (!this.hasOwnProperty(key)) {\n            continue;\n          }\n          let value = this[key];\n\n          if (key !== 'All') { all.push(value); }\n        }\n\n        return all;\n      }\n    };\n\n    this.ExternalVault = {\n      WillVault: 'will_vault',\n      Vaulted: 'vaulted'\n    };\n  }\n\n  constructor(attributes, passedInGateway) {\n    super(attributes);\n\n    this.creditCard = new CreditCard(attributes.creditCard);\n    this.paypalAccount = new PayPalAccount(attributes.paypal);\n    this.paypalHereDetails = new PayPalHereDetails(attributes.paypalHere);\n    this.localPayment = new LocalPayment(attributes.localPayment);\n    this.applePayCard = new ApplePayCard(attributes.applePay);\n    // NEXT_MAJOR_VERSION rename Android Pay to Google Pay\n    this.androidPayCard = new AndroidPayCard(attributes.androidPayCard);\n    this.disbursementDetails = new DisbursementDetails(attributes.disbursementDetails);\n    this.visaCheckoutCard = new VisaCheckoutCard(attributes.visaCheckoutCard);\n    this.samsungPayCard = new SamsungPayCard(attributes.samsungPayCard);\n    if (attributes.disputes != null) { this.disputes = attributes.disputes.map((disputeAttributes) => new Dispute(disputeAttributes)); }\n    if (attributes.facilitatedDetails) { this.facilitatedDetails = new FacilitatedDetails(attributes.facilitatedDetails); }\n    if (attributes.facilitatorDetails) { this.facilitatorDetails = new FacilitatorDetails(attributes.facilitatorDetails); }\n    if (attributes.riskData) { this.riskData = new RiskData(attributes.riskData); }\n    if (attributes.threeDSecureInfo) { this.threeDSecureInfo = new ThreeDSecureInfo(attributes.threeDSecureInfo); }\n    if (attributes.usBankAccount) { this.usBankAccount = new UsBankAccount(attributes.usBankAccount); }\n    if (attributes.authorizationAdjustments) { this.authorizationAdjustments = attributes.authorizationAdjustments.map((authorizationAdjustmentAttributes) => new AuthorizationAdjustment(authorizationAdjustmentAttributes)); }\n\n    this[gatewaySymbol] = passedInGateway;\n  }\n\n  isDisbursed() {\n    return this.disbursementDetails.isValid();\n  }\n\n  lineItems() {\n    return this[gatewaySymbol].transactionLineItem.findAll(this.id);\n  }\n}\nTransaction.initClass();\n\nmodule.exports = {Transaction: wrapPrototype(Transaction, {})};\n"]},"metadata":{},"sourceType":"script"}