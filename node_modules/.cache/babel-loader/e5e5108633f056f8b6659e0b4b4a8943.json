{"ast":null,"code":"import { action, setAction, elements, getElementAtPosition, mouse, selectedElement, tool, setElementWidth, setElementLength, wall, setElementStrokeWidth } from \"../sketch\";\nimport { updateElement } from \"./updateElement\";\nexport const handleMouseMove = event => {\n  // const {clientX, clientY} = event;\n  let bounds = event.target.getBoundingClientRect();\n  mouse.x = event.pageX - bounds.left - window.scrollX; // is window.scrollX same for Y\n\n  mouse.y = event.pageY - bounds.top - window.scrollY;\n\n  if (tool === \"selection\") {\n    event.target.style.cursor = getElementAtPosition(mouse.x, mouse.y, elements) ? \"move\" : \"default\";\n  }\n\n  if (tool === \"text\") {\n    event.target.style.cursor = getElementAtPosition(mouse.x, mouse.y, elements) ? \"text\" : \"default\";\n  }\n\n  if (tool === \"eraser\") {\n    event.target.style.cursor = getElementAtPosition(mouse.x, mouse.y, elements) ? \"move\" : \"default\";\n  }\n\n  if (tool === \"resize\") {\n    event.target.style.cursor = getElementAtPosition(mouse.x, mouse.y, elements) ? \"resize\" : \"default\";\n  } // if(tool === \"rectangle\" || tool ===\"circle\" || tool ===\"wall\" || tool ===\"arcL\" ||\n  //     tool ===\"arcR\" || tool ===\"ellipse\"){\n  //\n  //     event.target.style.cursor = getCvsAtPosition(canvas.getBoundingClientRect().width , canvas.getBoundingClientRect().height, elements)\n  //         ? \"crosshair\" : \"default\";\n  // }\n\n\n  if (action === \"drawing\") {\n    const index = elements.length - 1;\n    const {\n      x1,\n      y1\n    } = elements[index];\n    const sWidth = wall;\n    let x = mouse.x || event.touches[0].clientX - 8;\n    let y = mouse.y || event.touches[0].clientY - 385; // alert(event.touches[0].clientX)\n\n    updateElement(index, x1, y1, x, y, tool, sWidth);\n  } else if (action === \"moving\") {\n    const {\n      id,\n      x1,\n      x2,\n      y1,\n      y2,\n      type,\n      offsetX,\n      offsetY\n    } = selectedElement;\n    const sWidth = selectedElement.roughElement.options.strokeWidth;\n    const width = x2 - x1;\n    const height = y2 - y1;\n    const posX = mouse.x || event.touches[0].clientX - 8;\n    const posY = mouse.y || event.touches[0].clientY - 385;\n    const nexX1 = posX - offsetX;\n    const nexY1 = posY - offsetY; // type.scale(mouse.x , mouse.y);\n\n    updateElement(id, nexX1, nexY1, nexX1 + width, nexY1 + height, type, sWidth);\n  } else if (action === \"eraser\") {\n    const {\n      id,\n      x1,\n      x2,\n      y1,\n      y2,\n      type,\n      offsetX,\n      offsetY\n    } = selectedElement;\n    const width = x2 - x1;\n    const height = y2 - y1;\n    const nexX1 = mouse.x - offsetX;\n    const nexY1 = mouse.y - offsetY; // type.scale(mouse.x , mouse.y);\n\n    updateElement(id, nexX1, nexY1, nexX1 + width, nexY1 + height, null);\n  } else if (action === \"resize\") {\n    const {\n      id,\n      x1,\n      x2,\n      y1,\n      y2,\n      type,\n      offsetX,\n      offsetY\n    } = selectedElement;\n    const sWidth = selectedElement.roughElement.options.strokeWidth;\n    const width = x2 - x1;\n    const height = y2 - y1;\n    const nexX1 = mouse.x - offsetX;\n    const nexY1 = mouse.y - offsetY;\n    alert(\"Your previous Width was \" + width / 15.36);\n    alert(\"Your previous length was \" + height / 15.36);\n    alert(\"Please Note that this will be your Internal Dimensions. We will minus walls area automatically. Thanks For your inconvenience !!!\");\n    const newx1 = prompt(\"Your previous x-axis was \" + x1 + \" Enter x-axis \"); // const newx2 = prompt(\"Your previous width was \" + x2 + \" Enter x2 \")\n\n    let newWidth = prompt(\"Your previous width was \" + width / 15.36 + \"Feet. Enter new Width in feet \");\n    newWidth = newWidth * 15.45; // newWidth = newWidth - newx1\n\n    const newy1 = prompt(\"Your previous y-axis was \" + y1 + \" Enter y-axis \"); // const newy2 = prompt(\"Your previous y2 was \" + y2 + \" Enter y2 \")\n\n    let newHeight = prompt(\"Your previous height was \" + height / 15.36 + \"Feet. Enter new height in feet \");\n    newHeight = newHeight * 15.45; // newHeight = newHeight - newy1\n    // type.scale(mouse.x , mouse.y);\n\n    if (newx1 && newWidth && newy1 && newHeight) {\n      // updateElement(id, newx1, newy1, newx2, newy2, type, sWidth);\n      updateElement(id, newx1, newy1, newWidth, newHeight, type, sWidth);\n    } else {\n      updateElement(id, nexX1, nexY1, nexX1 + width, nexY1 + height, type, sWidth);\n    }\n\n    setAction(\"selection\");\n    alert(\"Now Consider clicking on selection tool and then the line which is shown to draw your re - factor sketch and think to move your cursor slightly\");\n  } else if (action === \"sizes\") {\n    const {\n      id,\n      x1,\n      x2,\n      y1,\n      y2,\n      type,\n      offsetX,\n      offsetY,\n      strokeWidth\n    } = selectedElement;\n    const width = x2 - x1;\n    const height = y2 - y1;\n    const nexX1 = mouse.x - offsetX;\n    const nexY1 = mouse.y - offsetY; // type.scale(mouse.x , mouse.y);\n\n    setElementWidth(width);\n    setElementLength(height); // console.log(selectedElement)\n\n    setElementStrokeWidth(selectedElement.roughElement.options.strokeWidth);\n  }\n};","map":{"version":3,"sources":["E:/aoo-ghr-bnain-update/src/sketchHelper/handleMouseMove.js"],"names":["action","setAction","elements","getElementAtPosition","mouse","selectedElement","tool","setElementWidth","setElementLength","wall","setElementStrokeWidth","updateElement","handleMouseMove","event","bounds","target","getBoundingClientRect","x","pageX","left","window","scrollX","y","pageY","top","scrollY","style","cursor","index","length","x1","y1","sWidth","touches","clientX","clientY","id","x2","y2","type","offsetX","offsetY","roughElement","options","strokeWidth","width","height","posX","posY","nexX1","nexY1","alert","newx1","prompt","newWidth","newy1","newHeight"],"mappings":"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","sourcesContent":["import {action, \r\n        setAction ,\r\n        elements, \r\n        getElementAtPosition, \r\n        mouse, \r\n        selectedElement, \r\n        tool,\r\n        setElementWidth , \r\n        setElementLength ,\r\n        wall,\r\n        setElementStrokeWidth } from \"../sketch\";\r\nimport {updateElement} from \"./updateElement\";\r\n\r\nexport const handleMouseMove = (event) => {\r\n    // const {clientX, clientY} = event;\r\n\r\n    let bounds = event.target.getBoundingClientRect();\r\n    mouse.x = event.pageX - bounds.left - window.scrollX;  // is window.scrollX same for Y\r\n    mouse.y = event.pageY - bounds.top - window.scrollY;\r\n\r\n    if(tool === \"selection\")\r\n    {\r\n        event.target.style.cursor = getElementAtPosition(mouse.x, mouse.y, elements)\r\n            ? \"move\" : \"default\";\r\n    }\r\n\r\n    if(tool === \"text\")\r\n    {\r\n        event.target.style.cursor = getElementAtPosition(mouse.x, mouse.y, elements)\r\n            ? \"text\" : \"default\";\r\n    }\r\n\r\n    if(tool === \"eraser\")\r\n    {\r\n        event.target.style.cursor = getElementAtPosition(mouse.x, mouse.y, elements)\r\n            ? \"move\" : \"default\";\r\n    }\r\n    if(tool === \"resize\")\r\n    {\r\n        event.target.style.cursor = getElementAtPosition(mouse.x, mouse.y, elements)\r\n            ? \"resize\" : \"default\";\r\n    }\r\n    // if(tool === \"rectangle\" || tool ===\"circle\" || tool ===\"wall\" || tool ===\"arcL\" ||\r\n    //     tool ===\"arcR\" || tool ===\"ellipse\"){\r\n    //\r\n    //     event.target.style.cursor = getCvsAtPosition(canvas.getBoundingClientRect().width , canvas.getBoundingClientRect().height, elements)\r\n    //         ? \"crosshair\" : \"default\";\r\n    // }\r\n\r\n    if(action === \"drawing\") {\r\n        const index = elements.length - 1;\r\n        const {x1,y1} = elements[index];\r\n        const sWidth = wall\r\n\r\n\r\n        let x = mouse.x || (event.touches[0].clientX - 8 );\r\n        let y = mouse.y || (event.touches[0].clientY - 385);\r\n\r\n        // alert(event.touches[0].clientX)\r\n\r\n        updateElement(index, x1 , y1 , x, y , tool , sWidth);\r\n\r\n    }\r\n    else if (action === \"moving\")\r\n    {\r\n        const {id , x1, x2, y1, y2 , type , offsetX, offsetY} = selectedElement;\r\n        const sWidth = selectedElement.roughElement.options.strokeWidth\r\n        const width = x2-x1;\r\n        const height = y2-y1;\r\n        const posX = mouse.x || (event.touches[0].clientX - 8 )\r\n        const posY = mouse.y || (event.touches[0].clientY - 385)\r\n        const nexX1 = posX - offsetX;\r\n        const nexY1 = posY - offsetY;\r\n\r\n        // type.scale(mouse.x , mouse.y);\r\n\r\n        updateElement(id, nexX1, nexY1, nexX1 + width, nexY1 + height, type , sWidth);\r\n        \r\n    }\r\n    else if (action === \"eraser\")\r\n    {\r\n        const {id , x1, x2, y1, y2 , type , offsetX, offsetY} = selectedElement;\r\n        const width = x2-x1;\r\n        const height = y2-y1;\r\n        const nexX1 = mouse.x- offsetX;\r\n        const nexY1 = mouse.y - offsetY;\r\n\r\n        // type.scale(mouse.x , mouse.y);\r\n\r\n        updateElement(id, nexX1, nexY1, nexX1 + width, nexY1 + height, null);\r\n    }\r\n\r\n    else if (action === \"resize\")\r\n    {\r\n        const {id , x1, x2, y1, y2 , type , offsetX, offsetY} = selectedElement;\r\n        const sWidth = selectedElement.roughElement.options.strokeWidth\r\n        const width = x2-x1;\r\n        const height = y2-y1;\r\n        const nexX1 = mouse.x- offsetX;\r\n        const nexY1 = mouse.y - offsetY;\r\n\r\n        alert(\"Your previous Width was \" + width / 15.36)\r\n\r\n        alert(\"Your previous length was \" + height / 15.36)\r\n        \r\n        alert(\"Please Note that this will be your Internal Dimensions. We will minus walls area automatically. Thanks For your inconvenience !!!\")\r\n\r\n        const newx1 = prompt(\"Your previous x-axis was \" + x1 + \" Enter x-axis \")\r\n        // const newx2 = prompt(\"Your previous width was \" + x2 + \" Enter x2 \")\r\n        let newWidth = prompt(\"Your previous width was \" + width / 15.36 + \"Feet. Enter new Width in feet \")\r\n        newWidth = newWidth * 15.45\r\n        // newWidth = newWidth - newx1\r\n        \r\n        const newy1 = prompt(\"Your previous y-axis was \" + y1 + \" Enter y-axis \")\r\n        // const newy2 = prompt(\"Your previous y2 was \" + y2 + \" Enter y2 \")\r\n        let newHeight = prompt(\"Your previous height was \" + height / 15.36 + \"Feet. Enter new height in feet \")\r\n        newHeight = newHeight * 15.45\r\n        // newHeight = newHeight - newy1\r\n       \r\n        // type.scale(mouse.x , mouse.y);\r\n\r\n        if(newx1 && newWidth && newy1 && newHeight)\r\n        {\r\n        // updateElement(id, newx1, newy1, newx2, newy2, type, sWidth);\r\n        updateElement(id, newx1, newy1, newWidth , newHeight, type, sWidth);\r\n\r\n        }\r\n        else{\r\n            updateElement(id, nexX1, nexY1, nexX1 + width, nexY1 + height, type, sWidth);\r\n        }\r\n        setAction(\"selection\")\r\n\r\n        alert(\"Now Consider clicking on selection tool and then the line which is shown to draw your re - factor sketch and think to move your cursor slightly\")\r\n    }\r\n\r\n    else if (action === \"sizes\")\r\n    {\r\n        const {id , x1, x2, y1, y2 , type , offsetX, offsetY, strokeWidth} = selectedElement;\r\n        const width = x2-x1;\r\n        const height = y2-y1;\r\n        const nexX1 = mouse.x- offsetX;\r\n        const nexY1 = mouse.y - offsetY;\r\n\r\n        // type.scale(mouse.x , mouse.y);\r\n\r\n        setElementWidth(width);\r\n        setElementLength(height); \r\n        \r\n        // console.log(selectedElement)\r\n        setElementStrokeWidth(selectedElement.roughElement.options.strokeWidth)\r\n    }\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}