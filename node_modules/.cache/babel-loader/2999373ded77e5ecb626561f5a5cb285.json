{"ast":null,"code":"import { elements, setElements } from \"../sketch\";\nimport { createElement } from \"./createElement\";\nimport canvas from \"../sketch\";\nexport const updateElement = (id, x1, y1, x2, y2, element) => {\n  if (x2 < 0 || y2 < 0 || x1 < 0 || y1 < 0 || x2 > canvas.width || y2 > canvas.height || x1 > canvas.width || y1 > canvas.height) {\n    console.log(\"Out of bounds\");\n  } else {\n    const updatedElement = createElement(id, x1, y1, x2, y2, element);\n    const elementsCopy = [...elements];\n    elementsCopy[id] = updatedElement;\n    setElements(elementsCopy);\n  }\n};","map":{"version":3,"sources":["F:/myapp/client/src/sketchHelper/updateElement.js"],"names":["elements","setElements","createElement","canvas","updateElement","id","x1","y1","x2","y2","element","width","height","console","log","updatedElement","elementsCopy"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,WAAlB,QAAoC,WAApC;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,EAAD,EAAKC,EAAL,EAAUC,EAAV,EAAeC,EAAf,EAAoBC,EAApB,EAAyBC,OAAzB,KAAqC;AAE9D,MAAGF,EAAE,GAAG,CAAL,IAAUC,EAAE,GAAG,CAAf,IAAoBH,EAAE,GAAG,CAAzB,IAA8BC,EAAE,GAAG,CAAnC,IAAwCC,EAAE,GAAGL,MAAM,CAACQ,KAApD,IAA6DF,EAAE,GAAGN,MAAM,CAACS,MAAzE,IACIN,EAAE,GAAGH,MAAM,CAACQ,KADhB,IACyBJ,EAAE,GAAGJ,MAAM,CAACS,MADxC,EAEA;AACGC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACF,GAJD,MAMA;AACA,UAAMC,cAAc,GAAGb,aAAa,CAACG,EAAD,EAAKC,EAAL,EAAUC,EAAV,EAAeC,EAAf,EAAoBC,EAApB,EAAyBC,OAAzB,CAApC;AACA,UAAMM,YAAY,GAAG,CAAC,GAAGhB,QAAJ,CAArB;AACAgB,IAAAA,YAAY,CAACX,EAAD,CAAZ,GAAmBU,cAAnB;AACAd,IAAAA,WAAW,CAACe,YAAD,CAAX;AACC;AACJ,CAdM","sourcesContent":["import {elements, setElements} from \"../sketch\";\nimport {createElement} from \"./createElement\";\nimport canvas from \"../sketch\";\n\nexport const updateElement = (id, x1 , y1 , x2 , y2 , element) => {\n\n    if(x2 < 0 || y2 < 0 || x1 < 0 || y1 < 0 || x2 > canvas.width || y2 > canvas.height \n        || x1 > canvas.width || y1 > canvas.height) \n    {\n       console.log(\"Out of bounds\")\n    }\n    else\n    {\n    const updatedElement = createElement(id, x1 , y1 , x2 , y2 , element);\n    const elementsCopy = [...elements];\n    elementsCopy[id] = updatedElement;\n    setElements(elementsCopy);\n    }\n};"]},"metadata":{},"sourceType":"module"}