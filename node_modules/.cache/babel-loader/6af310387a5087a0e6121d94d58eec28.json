{"ast":null,"code":"'use strict';\n\nlet Buffer = require('buffer').Buffer;\n\nlet Digest = require('./digest').Digest;\n\nlet Gateway = require('./gateway').Gateway;\n\nlet WebhookNotification = require('./webhook_notification').WebhookNotification;\n\nlet dateFormat = require('dateformat');\n\nlet wrapPrototype = require('@braintree/wrap-promise').wrapPrototype;\n\nclass WebhookTestingGateway extends Gateway {\n  constructor(gateway) {\n    super();\n    this.gateway = gateway;\n    this.config = this.gateway.config;\n  }\n\n  sampleNotification(kind, id, sourceMerchantId) {\n    const xml = this.sampleXml(kind, id, sourceMerchantId);\n    const payload = Buffer.from(xml).toString('base64') + '\\n';\n    const signature = this.sampleSignature(payload);\n    return {\n      bt_signature: signature,\n      // eslint-disable-line camelcase\n      bt_payload: payload // eslint-disable-line camelcase\n\n    };\n  }\n\n  sampleSignature(payload) {\n    return `${this.gateway.config.publicKey}|${Digest.Sha1hexdigest(this.gateway.config.privateKey, payload)}`;\n  }\n\n  sampleXml(kind, id, sourceMerchantId) {\n    let sourceMerchantIdXml = '';\n\n    if (sourceMerchantId) {\n      sourceMerchantIdXml = `<source-merchant-id>${sourceMerchantId}</source-merchant-id>`;\n    }\n\n    return `<notification>\n    <timestamp type=\"datetime\">${dateFormat(new Date(), dateFormat.masks.isoUtcDateTime, true)}</timestamp>\n    <kind>${kind}</kind>\n    ${sourceMerchantIdXml}\n    <subject>${this.subjectXmlFor(kind, id)}</subject>\n</notification>`;\n  }\n\n  subjectXmlFor(kind, id) {\n    // eslint-disable-line complexity\n    switch (kind) {\n      case WebhookNotification.Kind.AccountUpdaterDailyReport:\n        return this.subjectXmlForAccountUpdaterDailyReport();\n\n      case WebhookNotification.Kind.Check:\n        return this.subjectXmlForCheck();\n\n      case WebhookNotification.Kind.ConnectedMerchantPayPalStatusChanged:\n        return this.subjectXmlForConnectedMerchantPayPalStatusChanged(id);\n\n      case WebhookNotification.Kind.ConnectedMerchantStatusTransitioned:\n        return this.subjectXmlForConnectedMerchantStatusTransitioned(id);\n\n      case WebhookNotification.Kind.TransactionDisbursed:\n        return this.subjectXmlForTransactionDisbursed(id);\n\n      case WebhookNotification.Kind.TransactionSettled:\n        return this.subjectXmlForTransactionSettled(id);\n\n      case WebhookNotification.Kind.TransactionSettlementDeclined:\n        return this.subjectXmlForTransactionSettlementDeclined(id);\n\n      case WebhookNotification.Kind.DisbursementException:\n        return this.subjectXmlForDisbursementException(id);\n\n      case WebhookNotification.Kind.Disbursement:\n        return this.subjectXmlForDisbursement(id);\n\n      case WebhookNotification.Kind.DisputeOpened:\n        return this.subjectXmlForDisputeOpened(id);\n\n      case WebhookNotification.Kind.DisputeLost:\n        return this.subjectXmlForDisputeLost(id);\n\n      case WebhookNotification.Kind.DisputeWon:\n        return this.subjectXmlForDisputeWon(id);\n\n      case WebhookNotification.Kind.DisputeAccepted:\n        return this.subjectXmlForDisputeAccepted(id);\n\n      case WebhookNotification.Kind.DisputeDisputed:\n        return this.subjectXmlForDisputeDisputed(id);\n\n      case WebhookNotification.Kind.DisputeExpired:\n        return this.subjectXmlForDisputeExpired(id);\n\n      case WebhookNotification.Kind.GrantorUpdatedGrantedPaymentMethod:\n        return this.subjectXmlForGrantedPaymentInstrumentUpdate();\n\n      case WebhookNotification.Kind.LocalPaymentCompleted:\n        return this.subjectXmlForLocalPaymentCompleted(id);\n\n      case WebhookNotification.Kind.LocalPaymentReversed:\n        return this.subjectXmlForLocalPaymentReversed(id);\n\n      case WebhookNotification.Kind.PaymentMethodRevokedByCustomer:\n        return this.subjectXmlForPaymentMethodRevokedByCustomer(id);\n\n      case WebhookNotification.Kind.RecipientUpdatedGrantedPaymentMethod:\n        return this.subjectXmlForGrantedPaymentInstrumentUpdate();\n\n      case WebhookNotification.Kind.SubMerchantAccountApproved:\n        return this.subjectXmlForSubMerchantAccountApproved(id);\n\n      case WebhookNotification.Kind.SubMerchantAccountDeclined:\n        return this.subjectXmlForSubMerchantAccountDeclined(id);\n\n      case WebhookNotification.Kind.PartnerMerchantConnected:\n        return this.subjectXmlForPartnerMerchantConnected();\n\n      case WebhookNotification.Kind.PartnerMerchantDisconnected:\n        return this.subjectXmlForPartnerMerchantDisconnected();\n\n      case WebhookNotification.Kind.PartnerMerchantDeclined:\n        return this.subjectXmlForPartnerMerchantDeclined();\n\n      case WebhookNotification.Kind.OAuthAccessRevoked:\n        return this.subjectXmlForOAuthAccessRevocation(id);\n\n      case WebhookNotification.Kind.SubscriptionChargedSuccessfully:\n        return this.subjectXmlForSubscriptionChargedSuccessfully(id);\n\n      case WebhookNotification.Kind.SubscriptionChargedUnsuccessfully:\n        return this.subjectXmlForSubscriptionChargedUnsuccessfully(id);\n\n      default:\n        return this.subjectXmlForSubscription(id);\n    }\n  }\n\n  subjectXmlForAccountUpdaterDailyReport() {\n    return `<account-updater-daily-report>\n  <report-date type=\"date\">2016-01-14</report-date>\n  <report-url>link-to-csv-report</report-url>\n</account-updater-daily-report>`;\n  }\n\n  subjectXmlForCheck() {\n    return '<check type=\"boolean\">true</check>';\n  }\n\n  subjectXmlForTransactionDisbursed(id) {\n    return `<transaction>\n  <id>${id}</id>\n  <amount>100</amount>\n  <disbursement-details>\n    <disbursement-date type=\"datetime\">2013-07-09T18:23:29Z</disbursement-date>\n  </disbursement-details>\n</transaction>`;\n  }\n\n  subjectXmlForTransactionSettled(id) {\n    return `<transaction>\n  <id>${id}</id>\n  <status>settled</status>\n  <type>sale</type>\n  <currency-iso-code>USD</currency-iso-code>\n  <amount>100</amount>\n  <merchant-account-id>ogaotkivejpfayqfeaimuktty</merchant-account-id>\n  <payment-instrument-type>us_bank_account</payment-instrument-type>\n  <us-bank-account>\n    <routing-number>123456789</routing-number>\n    <last-4>1234</last-4>\n    <account-type>checking</account-type>\n    <account-holder-name>Dan Schulman</account-holder-name>\n  </us-bank-account>\n</transaction>`;\n  }\n\n  subjectXmlForTransactionSettlementDeclined(id) {\n    return `<transaction>\n  <id>${id}</id>\n  <status>settlement_declined</status>\n  <type>sale</type>\n  <currency-iso-code>USD</currency-iso-code>\n  <amount>100</amount>\n  <merchant-account-id>ogaotkivejpfayqfeaimuktty</merchant-account-id>\n  <payment-instrument-type>us_bank_account</payment-instrument-type>\n  <us-bank-account>\n    <routing-number>123456789</routing-number>\n    <last-4>1234</last-4>\n    <account-type>checking</account-type>\n    <account-holder-name>Dan Schulman</account-holder-name>\n  </us-bank-account>\n</transaction>`;\n  }\n\n  subjectXmlForDisputeOpened(id) {\n    return `<dispute>\n  <amount>250.00</amount>\n  <amount-disputed>250.0</amount-disputed>\n  <amount-won>245.00</amount-won>\n  <currency-iso-code>USD</currency-iso-code>\n  <received-date type=\"date\">2014-03-01</received-date>\n  <reply-by-date type=\"date\">2014-03-21</reply-by-date>\n  <kind>chargeback</kind>\n  <status>open</status>\n  <reason>fraud</reason>\n  <id>${id}</id>\n  <transaction>\n    <id>${id}</id>\n    <amount>250.00</amount>\n  </transaction>\n  <date-opened type=\"date\">2014-03-28</date-opened>\n</dispute>`;\n  }\n\n  subjectXmlForDisputeLost(id) {\n    return `<dispute>\n  <amount>250.00</amount>\n  <amount-disputed>250.0</amount-disputed>\n  <amount-won>245.00</amount-won>\n  <currency-iso-code>USD</currency-iso-code>\n  <received-date type=\"date\">2014-03-01</received-date>\n  <reply-by-date type=\"date\">2014-03-21</reply-by-date>\n  <kind>chargeback</kind>\n  <status>lost</status>\n  <reason>fraud</reason>\n  <id>${id}</id>\n  <transaction>\n    <id>${id}</id>\n    <amount>250.00</amount>\n  </transaction>\n  <date-opened type=\"date\">2014-03-28</date-opened>\n</dispute>`;\n  }\n\n  subjectXmlForDisputeWon(id) {\n    return `<dispute>\n  <amount>250.00</amount>\n  <amount-disputed>250.0</amount-disputed>\n  <amount-won>245.00</amount-won>\n  <currency-iso-code>USD</currency-iso-code>\n  <received-date type=\"date\">2014-03-01</received-date>\n  <reply-by-date type=\"date\">2014-03-21</reply-by-date>\n  <kind>chargeback</kind>\n  <status>won</status>\n  <reason>fraud</reason>\n  <id>${id}</id>\n  <transaction>\n    <id>${id}</id>\n    <amount>250.00</amount>\n  </transaction>\n  <date-opened type=\"date\">2014-03-28</date-opened>\n  <date-won type=\"date\">2014-09-01</date-won>\n</dispute>`;\n  }\n\n  subjectXmlForDisputeAccepted(id) {\n    return `<dispute>\n  <amount>250.00</amount>\n  <amount-disputed>250.0</amount-disputed>\n  <amount-won>245.00</amount-won>\n  <currency-iso-code>USD</currency-iso-code>\n  <received-date type=\"date\">2014-03-01</received-date>\n  <reply-by-date type=\"date\">2014-03-21</reply-by-date>\n  <kind>chargeback</kind>\n  <status>accepted</status>\n  <reason>fraud</reason>\n  <id>${id}</id>\n  <transaction>\n    <id>${id}</id>\n    <amount>250.00</amount>\n  </transaction>\n  <date-opened type=\"date\">2014-03-28</date-opened>\n</dispute>`;\n  }\n\n  subjectXmlForDisputeDisputed(id) {\n    return `<dispute>\n  <amount>250.00</amount>\n  <amount-disputed>250.0</amount-disputed>\n  <amount-won>245.00</amount-won>\n  <currency-iso-code>USD</currency-iso-code>\n  <received-date type=\"date\">2014-03-01</received-date>\n  <reply-by-date type=\"date\">2014-03-21</reply-by-date>\n  <kind>chargeback</kind>\n  <status>disputed</status>\n  <reason>fraud</reason>\n  <id>${id}</id>\n  <transaction>\n    <id>${id}</id>\n    <amount>250.00</amount>\n  </transaction>\n  <date-opened type=\"date\">2014-03-28</date-opened>\n</dispute>`;\n  }\n\n  subjectXmlForDisputeExpired(id) {\n    return `<dispute>\n  <amount>250.00</amount>\n  <amount-disputed>250.0</amount-disputed>\n  <amount-won>245.00</amount-won>\n  <currency-iso-code>USD</currency-iso-code>\n  <received-date type=\"date\">2014-03-01</received-date>\n  <reply-by-date type=\"date\">2014-03-21</reply-by-date>\n  <kind>chargeback</kind>\n  <status>expired</status>\n  <reason>fraud</reason>\n  <id>${id}</id>\n  <transaction>\n    <id>${id}</id>\n    <amount>250.00</amount>\n  </transaction>\n  <date-opened type=\"date\">2014-03-28</date-opened>\n</dispute>`;\n  }\n\n  subjectXmlForDisbursementException(id) {\n    return `<disbursement>\n  <id>${id}</id>\n  <transaction-ids type=\"array\">\n    <item>afv56j</item>\n    <item>kj8hjk</item>\n  </transaction-ids>\n  <success type=\"boolean\">false</success>\n  <retry type=\"boolean\">false</retry>\n  <merchant-account>\n    <id>merchant_account_token</id>\n    <currency-iso-code>USD</currency-iso-code>\n    <sub-merchant-account type=\"boolean\">false</sub-merchant-account>\n    <status>active</status>\n  </merchant-account>\n  <amount>100.00</amount>\n  <disbursement-date type=\"date\">2014-02-10</disbursement-date>\n  <exception-message>bank_rejected</exception-message>\n  <follow-up-action>update_funding_information</follow-up-action>\n</disbursement>`;\n  }\n\n  subjectXmlForDisbursement(id) {\n    return `<disbursement>\n  <id>${id}</id>\n  <transaction-ids type=\"array\">\n    <item>afv56j</item>\n    <item>kj8hjk</item>\n  </transaction-ids>\n  <success type=\"boolean\">true</success>\n  <retry type=\"boolean\">false</retry>\n  <merchant-account>\n    <id>merchant_account_token</id>\n    <currency-iso-code>USD</currency-iso-code>\n    <sub-merchant-account type=\"boolean\">false</sub-merchant-account>\n    <status>active</status>\n  </merchant-account>\n  <amount>100.00</amount>\n  <disbursement-date type=\"date\">2014-02-10</disbursement-date>\n  <exception-message nil=\"true\"/>\n  <follow-up-action nil=\"true\"/>\n</disbursement>`;\n  }\n\n  subjectXmlForGrantedPaymentInstrumentUpdate() {\n    return `<granted-payment-instrument-update>\n    <grant-owner-merchant-id>vczo7jqrpwrsi2px</grant-owner-merchant-id>\n    <grant-recipient-merchant-id>cf0i8wgarszuy6hc</grant-recipient-merchant-id>\n    <payment-method-nonce>\n      <nonce>ee257d98-de40-47e8-96b3-a6954ea7a9a4</nonce>\n      <consumed type=\"boolean\">false</consumed>\n      <locked type=\"boolean\">false</locked>\n    </payment-method-nonce>\n    <token>abc123z</token>\n    <updated-fields type=\"array\">\n      <item>expiration-month</item>\n      <item>expiration-year</item>\n    </updated-fields>\n  </granted-payment-instrument-update>`;\n  }\n\n  subjectXmlForSubMerchantAccountApproved(id) {\n    return `<merchant_account>\n  <id>${id}</id>\n</merchant_account>`;\n  }\n\n  errorSampleXml() {\n    return `<error>\n  <code>82621</code>\n  <message>Credit score is too low</message>\n  <attribute type=\\\"symbol\\\">base</attribute>\n</error>`;\n  }\n\n  subjectXmlForSubMerchantAccountDeclined(id) {\n    return `<api-error-response>\n  <message>Credit score is too low</message>\n  <errors>\n    <merchant-account>\n      <errors type=\"array\">\n        ${this.errorSampleXml()}\n      </errors>\n    </merchant-account>\n  </errors>\n  ${this.merchantAccountSampleXml(id)}\n</api-error-response>`;\n  }\n\n  merchantAccountSampleXml(id) {\n    return `<merchant_account>\n  <id>${id}</id>\n  <master_merchant_account>\n    <id>master_ma_for_${id}</id>\n    <status>suspended</status>\n  </master_merchant_account>\n  <status>suspended</status>\n</merchant_account>`;\n  }\n\n  subjectXmlForSubscription(id) {\n    return `<subscription>\n    <id>${id}</id>\n    <transactions type=\"array\"></transactions>\n    <add_ons type=\"array\"></add_ons>\n    <discounts type=\"array\"></discounts>\n</subscription>`;\n  }\n\n  subjectXmlForSubscriptionChargedSuccessfully(id) {\n    return `<subscription>\n    <id>${id}</id>\n    <transactions type=\"array\">\n      <transaction>\n        <id>${id}</id>\n        <status>submitted_for_settlement</status>\n        <amount>49.99</amount>\n      </transaction>\n    </transactions>\n    <add_ons type=\"array\"></add_ons>\n    <discounts type=\"array\"></discounts>\n</subscription>`;\n  }\n\n  subjectXmlForSubscriptionChargedUnsuccessfully(id) {\n    return `<subscription>\n    <id>${id}</id>\n    <transactions type=\"array\">\n      <transaction>\n        <id>${id}</id>\n        <status>failed</status>\n        <amount>49.99</amount>\n      </transaction>\n    </transactions>\n    <add_ons type=\"array\"></add_ons>\n    <discounts type=\"array\"></discounts>\n</subscription>`;\n  }\n\n  subjectXmlForPartnerMerchantConnected() {\n    return `<partner-merchant>\n  <merchant-public-id>public_id</merchant-public-id>\n  <public-key>public_key</public-key>\n  <private-key>private_key</private-key>\n  <partner-merchant-id>abc123</partner-merchant-id>\n  <client-side-encryption-key>cse_key</client-side-encryption-key>\n</partner-merchant>`;\n  }\n\n  subjectXmlForPartnerMerchantDisconnected() {\n    return `<partner-merchant>\n  <partner-merchant-id>abc123</partner-merchant-id>\n</partner-merchant>`;\n  }\n\n  subjectXmlForConnectedMerchantStatusTransitioned(id) {\n    return `<connected-merchant-status-transitioned>\n        <merchant-public-id>${id}</merchant-public-id>\n        <status>new_status</status>\n        <oauth-application-client-id>oauth_application_client_id</oauth-application-client-id>\n      </connected-merchant-status-transitioned>`;\n  }\n\n  subjectXmlForConnectedMerchantPayPalStatusChanged(id) {\n    return `<connected-merchant-paypal-status-changed>\n        <merchant-public-id>${id}</merchant-public-id>\n        <action>link</action>\n        <oauth-application-client-id>oauth_application_client_id</oauth-application-client-id>\n      </connected-merchant-paypal-status-changed>`;\n  }\n\n  subjectXmlForPartnerMerchantDeclined() {\n    return `<partner-merchant>\n  <partner-merchant-id>abc123</partner-merchant-id>\n</partner-merchant>`;\n  }\n\n  subjectXmlForOAuthAccessRevocation(id) {\n    return `<oauth-application-revocation>\n      <merchant-id>${id}</merchant-id>\n      <oauth-application-client-id>oauth_application_client_id</oauth-application-client-id>\n    </oauth-application-revocation>`;\n  }\n\n  subjectXmlForPaymentMethodRevokedByCustomer(id) {\n    return `<paypal-account>\n      <billing-agreement-id>a-billing-agreement-id</billing-agreement-id>\n      <created-at type=\"datetime\">2019-01-01T12:00:00Z</created-at>\n      <customer-id>a-customer-id</customer-id>\n      <default type=\"boolean\">true</default>\n      <email>name@email.com</email>\n      <global-id>cGF5bWVudG1ldGhvZF9jaDZieXNz</global-id>\n      <image-url>https://assets.braintreegateway.com/payment_method_logo/paypal.png?environment=test</image-url>\n      <subscriptions type=\"array\"/>\n      <token>${id}</token>\n      <updated-at type=\"datetime\">2019-01-02T12:00:00Z</updated-at>\n      <is-channel-initiated nil=\"true\"/>\n      <payer-id>a-payer-id</payer-id>\n      <payer-info nil=\"true\"/>\n      <limited-use-order-id nil=\"true\"/>\n      <revoked-at type=\"datetime\">2019-01-02T12:00:00Z</revoked-at>\n    </paypal-account>`;\n  }\n\n  subjectXmlForLocalPaymentCompleted() {\n    return `<local-payment>\n      <payment-id>a-payment-id</payment-id>\n      <payer-id>a-payer-id</payer-id>\n      <payment-method-nonce>ee257d98-de40-47e8-96b3-a6954ea7a9a4</payment-method-nonce>\n      <transaction>\n        <id>1</id>\n        <status>authorizing</status>\n        <amount>10.00</amount>\n        <order-id>order1234</order-id>\n      </transaction>\n    </local-payment>`;\n  }\n\n  subjectXmlForLocalPaymentReversed() {\n    return `<local-payment-reversed>\n      <payment-id>a-payment-id</payment-id>\n    </local-payment-reversed>`;\n  }\n\n}\n\nmodule.exports = {\n  WebhookTestingGateway: wrapPrototype(WebhookTestingGateway)\n};","map":{"version":3,"sources":["C:/Users/alpha/OneDrive/myapp/client/node_modules/braintree/lib/braintree/webhook_testing_gateway.js"],"names":["Buffer","require","Digest","Gateway","WebhookNotification","dateFormat","wrapPrototype","WebhookTestingGateway","constructor","gateway","config","sampleNotification","kind","id","sourceMerchantId","xml","sampleXml","payload","from","toString","signature","sampleSignature","bt_signature","bt_payload","publicKey","Sha1hexdigest","privateKey","sourceMerchantIdXml","Date","masks","isoUtcDateTime","subjectXmlFor","Kind","AccountUpdaterDailyReport","subjectXmlForAccountUpdaterDailyReport","Check","subjectXmlForCheck","ConnectedMerchantPayPalStatusChanged","subjectXmlForConnectedMerchantPayPalStatusChanged","ConnectedMerchantStatusTransitioned","subjectXmlForConnectedMerchantStatusTransitioned","TransactionDisbursed","subjectXmlForTransactionDisbursed","TransactionSettled","subjectXmlForTransactionSettled","TransactionSettlementDeclined","subjectXmlForTransactionSettlementDeclined","DisbursementException","subjectXmlForDisbursementException","Disbursement","subjectXmlForDisbursement","DisputeOpened","subjectXmlForDisputeOpened","DisputeLost","subjectXmlForDisputeLost","DisputeWon","subjectXmlForDisputeWon","DisputeAccepted","subjectXmlForDisputeAccepted","DisputeDisputed","subjectXmlForDisputeDisputed","DisputeExpired","subjectXmlForDisputeExpired","GrantorUpdatedGrantedPaymentMethod","subjectXmlForGrantedPaymentInstrumentUpdate","LocalPaymentCompleted","subjectXmlForLocalPaymentCompleted","LocalPaymentReversed","subjectXmlForLocalPaymentReversed","PaymentMethodRevokedByCustomer","subjectXmlForPaymentMethodRevokedByCustomer","RecipientUpdatedGrantedPaymentMethod","SubMerchantAccountApproved","subjectXmlForSubMerchantAccountApproved","SubMerchantAccountDeclined","subjectXmlForSubMerchantAccountDeclined","PartnerMerchantConnected","subjectXmlForPartnerMerchantConnected","PartnerMerchantDisconnected","subjectXmlForPartnerMerchantDisconnected","PartnerMerchantDeclined","subjectXmlForPartnerMerchantDeclined","OAuthAccessRevoked","subjectXmlForOAuthAccessRevocation","SubscriptionChargedSuccessfully","subjectXmlForSubscriptionChargedSuccessfully","SubscriptionChargedUnsuccessfully","subjectXmlForSubscriptionChargedUnsuccessfully","subjectXmlForSubscription","errorSampleXml","merchantAccountSampleXml","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nlet Buffer = require('buffer').Buffer;\nlet Digest = require('./digest').Digest;\nlet Gateway = require('./gateway').Gateway;\nlet WebhookNotification = require('./webhook_notification').WebhookNotification;\nlet dateFormat = require('dateformat');\nlet wrapPrototype = require('@braintree/wrap-promise').wrapPrototype;\n\nclass WebhookTestingGateway extends Gateway {\n  constructor(gateway) {\n    super();\n    this.gateway = gateway;\n    this.config = this.gateway.config;\n  }\n\n  sampleNotification(kind, id, sourceMerchantId) {\n    const xml = this.sampleXml(kind, id, sourceMerchantId);\n    const payload = Buffer.from(xml).toString('base64') + '\\n';\n    const signature = this.sampleSignature(payload);\n\n    return {\n      bt_signature: signature, // eslint-disable-line camelcase\n      bt_payload: payload // eslint-disable-line camelcase\n    };\n  }\n\n  sampleSignature(payload) {\n    return `${this.gateway.config.publicKey}|${Digest.Sha1hexdigest(this.gateway.config.privateKey, payload)}`;\n  }\n\n  sampleXml(kind, id, sourceMerchantId) {\n    let sourceMerchantIdXml = '';\n\n    if (sourceMerchantId) {\n      sourceMerchantIdXml = `<source-merchant-id>${sourceMerchantId}</source-merchant-id>`;\n    }\n\n    return `<notification>\n    <timestamp type=\"datetime\">${dateFormat(new Date(), dateFormat.masks.isoUtcDateTime, true)}</timestamp>\n    <kind>${kind}</kind>\n    ${sourceMerchantIdXml}\n    <subject>${this.subjectXmlFor(kind, id)}</subject>\n</notification>`;\n  }\n\n  subjectXmlFor(kind, id) { // eslint-disable-line complexity\n    switch (kind) {\n      case WebhookNotification.Kind.AccountUpdaterDailyReport: return this.subjectXmlForAccountUpdaterDailyReport();\n      case WebhookNotification.Kind.Check: return this.subjectXmlForCheck();\n      case WebhookNotification.Kind.ConnectedMerchantPayPalStatusChanged: return this.subjectXmlForConnectedMerchantPayPalStatusChanged(id);\n      case WebhookNotification.Kind.ConnectedMerchantStatusTransitioned: return this.subjectXmlForConnectedMerchantStatusTransitioned(id);\n      case WebhookNotification.Kind.TransactionDisbursed: return this.subjectXmlForTransactionDisbursed(id);\n      case WebhookNotification.Kind.TransactionSettled: return this.subjectXmlForTransactionSettled(id);\n      case WebhookNotification.Kind.TransactionSettlementDeclined: return this.subjectXmlForTransactionSettlementDeclined(id);\n      case WebhookNotification.Kind.DisbursementException: return this.subjectXmlForDisbursementException(id);\n      case WebhookNotification.Kind.Disbursement: return this.subjectXmlForDisbursement(id);\n      case WebhookNotification.Kind.DisputeOpened: return this.subjectXmlForDisputeOpened(id);\n      case WebhookNotification.Kind.DisputeLost: return this.subjectXmlForDisputeLost(id);\n      case WebhookNotification.Kind.DisputeWon: return this.subjectXmlForDisputeWon(id);\n      case WebhookNotification.Kind.DisputeAccepted: return this.subjectXmlForDisputeAccepted(id);\n      case WebhookNotification.Kind.DisputeDisputed: return this.subjectXmlForDisputeDisputed(id);\n      case WebhookNotification.Kind.DisputeExpired: return this.subjectXmlForDisputeExpired(id);\n      case WebhookNotification.Kind.GrantorUpdatedGrantedPaymentMethod: return this.subjectXmlForGrantedPaymentInstrumentUpdate();\n      case WebhookNotification.Kind.LocalPaymentCompleted: return this.subjectXmlForLocalPaymentCompleted(id);\n      case WebhookNotification.Kind.LocalPaymentReversed: return this.subjectXmlForLocalPaymentReversed(id);\n      case WebhookNotification.Kind.PaymentMethodRevokedByCustomer: return this.subjectXmlForPaymentMethodRevokedByCustomer(id);\n      case WebhookNotification.Kind.RecipientUpdatedGrantedPaymentMethod: return this.subjectXmlForGrantedPaymentInstrumentUpdate();\n      case WebhookNotification.Kind.SubMerchantAccountApproved: return this.subjectXmlForSubMerchantAccountApproved(id);\n      case WebhookNotification.Kind.SubMerchantAccountDeclined: return this.subjectXmlForSubMerchantAccountDeclined(id);\n      case WebhookNotification.Kind.PartnerMerchantConnected: return this.subjectXmlForPartnerMerchantConnected();\n      case WebhookNotification.Kind.PartnerMerchantDisconnected: return this.subjectXmlForPartnerMerchantDisconnected();\n      case WebhookNotification.Kind.PartnerMerchantDeclined: return this.subjectXmlForPartnerMerchantDeclined();\n      case WebhookNotification.Kind.OAuthAccessRevoked: return this.subjectXmlForOAuthAccessRevocation(id);\n      case WebhookNotification.Kind.SubscriptionChargedSuccessfully: return this.subjectXmlForSubscriptionChargedSuccessfully(id);\n      case WebhookNotification.Kind.SubscriptionChargedUnsuccessfully: return this.subjectXmlForSubscriptionChargedUnsuccessfully(id);\n      default: return this.subjectXmlForSubscription(id);\n    }\n  }\n\n  subjectXmlForAccountUpdaterDailyReport() {\n    return `<account-updater-daily-report>\n  <report-date type=\"date\">2016-01-14</report-date>\n  <report-url>link-to-csv-report</report-url>\n</account-updater-daily-report>`;\n  }\n\n  subjectXmlForCheck() {\n    return '<check type=\"boolean\">true</check>';\n  }\n\n  subjectXmlForTransactionDisbursed(id) {\n    return `<transaction>\n  <id>${id}</id>\n  <amount>100</amount>\n  <disbursement-details>\n    <disbursement-date type=\"datetime\">2013-07-09T18:23:29Z</disbursement-date>\n  </disbursement-details>\n</transaction>`;\n  }\n\n  subjectXmlForTransactionSettled(id) {\n    return `<transaction>\n  <id>${id}</id>\n  <status>settled</status>\n  <type>sale</type>\n  <currency-iso-code>USD</currency-iso-code>\n  <amount>100</amount>\n  <merchant-account-id>ogaotkivejpfayqfeaimuktty</merchant-account-id>\n  <payment-instrument-type>us_bank_account</payment-instrument-type>\n  <us-bank-account>\n    <routing-number>123456789</routing-number>\n    <last-4>1234</last-4>\n    <account-type>checking</account-type>\n    <account-holder-name>Dan Schulman</account-holder-name>\n  </us-bank-account>\n</transaction>`;\n  }\n\n  subjectXmlForTransactionSettlementDeclined(id) {\n    return `<transaction>\n  <id>${id}</id>\n  <status>settlement_declined</status>\n  <type>sale</type>\n  <currency-iso-code>USD</currency-iso-code>\n  <amount>100</amount>\n  <merchant-account-id>ogaotkivejpfayqfeaimuktty</merchant-account-id>\n  <payment-instrument-type>us_bank_account</payment-instrument-type>\n  <us-bank-account>\n    <routing-number>123456789</routing-number>\n    <last-4>1234</last-4>\n    <account-type>checking</account-type>\n    <account-holder-name>Dan Schulman</account-holder-name>\n  </us-bank-account>\n</transaction>`;\n  }\n\n  subjectXmlForDisputeOpened(id) {\n    return `<dispute>\n  <amount>250.00</amount>\n  <amount-disputed>250.0</amount-disputed>\n  <amount-won>245.00</amount-won>\n  <currency-iso-code>USD</currency-iso-code>\n  <received-date type=\"date\">2014-03-01</received-date>\n  <reply-by-date type=\"date\">2014-03-21</reply-by-date>\n  <kind>chargeback</kind>\n  <status>open</status>\n  <reason>fraud</reason>\n  <id>${id}</id>\n  <transaction>\n    <id>${id}</id>\n    <amount>250.00</amount>\n  </transaction>\n  <date-opened type=\"date\">2014-03-28</date-opened>\n</dispute>`;\n  }\n\n  subjectXmlForDisputeLost(id) {\n    return `<dispute>\n  <amount>250.00</amount>\n  <amount-disputed>250.0</amount-disputed>\n  <amount-won>245.00</amount-won>\n  <currency-iso-code>USD</currency-iso-code>\n  <received-date type=\"date\">2014-03-01</received-date>\n  <reply-by-date type=\"date\">2014-03-21</reply-by-date>\n  <kind>chargeback</kind>\n  <status>lost</status>\n  <reason>fraud</reason>\n  <id>${id}</id>\n  <transaction>\n    <id>${id}</id>\n    <amount>250.00</amount>\n  </transaction>\n  <date-opened type=\"date\">2014-03-28</date-opened>\n</dispute>`;\n  }\n\n  subjectXmlForDisputeWon(id) {\n    return `<dispute>\n  <amount>250.00</amount>\n  <amount-disputed>250.0</amount-disputed>\n  <amount-won>245.00</amount-won>\n  <currency-iso-code>USD</currency-iso-code>\n  <received-date type=\"date\">2014-03-01</received-date>\n  <reply-by-date type=\"date\">2014-03-21</reply-by-date>\n  <kind>chargeback</kind>\n  <status>won</status>\n  <reason>fraud</reason>\n  <id>${id}</id>\n  <transaction>\n    <id>${id}</id>\n    <amount>250.00</amount>\n  </transaction>\n  <date-opened type=\"date\">2014-03-28</date-opened>\n  <date-won type=\"date\">2014-09-01</date-won>\n</dispute>`;\n  }\n\n  subjectXmlForDisputeAccepted(id) {\n    return `<dispute>\n  <amount>250.00</amount>\n  <amount-disputed>250.0</amount-disputed>\n  <amount-won>245.00</amount-won>\n  <currency-iso-code>USD</currency-iso-code>\n  <received-date type=\"date\">2014-03-01</received-date>\n  <reply-by-date type=\"date\">2014-03-21</reply-by-date>\n  <kind>chargeback</kind>\n  <status>accepted</status>\n  <reason>fraud</reason>\n  <id>${id}</id>\n  <transaction>\n    <id>${id}</id>\n    <amount>250.00</amount>\n  </transaction>\n  <date-opened type=\"date\">2014-03-28</date-opened>\n</dispute>`;\n  }\n\n  subjectXmlForDisputeDisputed(id) {\n    return `<dispute>\n  <amount>250.00</amount>\n  <amount-disputed>250.0</amount-disputed>\n  <amount-won>245.00</amount-won>\n  <currency-iso-code>USD</currency-iso-code>\n  <received-date type=\"date\">2014-03-01</received-date>\n  <reply-by-date type=\"date\">2014-03-21</reply-by-date>\n  <kind>chargeback</kind>\n  <status>disputed</status>\n  <reason>fraud</reason>\n  <id>${id}</id>\n  <transaction>\n    <id>${id}</id>\n    <amount>250.00</amount>\n  </transaction>\n  <date-opened type=\"date\">2014-03-28</date-opened>\n</dispute>`;\n  }\n\n  subjectXmlForDisputeExpired(id) {\n    return `<dispute>\n  <amount>250.00</amount>\n  <amount-disputed>250.0</amount-disputed>\n  <amount-won>245.00</amount-won>\n  <currency-iso-code>USD</currency-iso-code>\n  <received-date type=\"date\">2014-03-01</received-date>\n  <reply-by-date type=\"date\">2014-03-21</reply-by-date>\n  <kind>chargeback</kind>\n  <status>expired</status>\n  <reason>fraud</reason>\n  <id>${id}</id>\n  <transaction>\n    <id>${id}</id>\n    <amount>250.00</amount>\n  </transaction>\n  <date-opened type=\"date\">2014-03-28</date-opened>\n</dispute>`;\n  }\n\n  subjectXmlForDisbursementException(id) {\n    return `<disbursement>\n  <id>${id}</id>\n  <transaction-ids type=\"array\">\n    <item>afv56j</item>\n    <item>kj8hjk</item>\n  </transaction-ids>\n  <success type=\"boolean\">false</success>\n  <retry type=\"boolean\">false</retry>\n  <merchant-account>\n    <id>merchant_account_token</id>\n    <currency-iso-code>USD</currency-iso-code>\n    <sub-merchant-account type=\"boolean\">false</sub-merchant-account>\n    <status>active</status>\n  </merchant-account>\n  <amount>100.00</amount>\n  <disbursement-date type=\"date\">2014-02-10</disbursement-date>\n  <exception-message>bank_rejected</exception-message>\n  <follow-up-action>update_funding_information</follow-up-action>\n</disbursement>`;\n  }\n\n  subjectXmlForDisbursement(id) {\n    return `<disbursement>\n  <id>${id}</id>\n  <transaction-ids type=\"array\">\n    <item>afv56j</item>\n    <item>kj8hjk</item>\n  </transaction-ids>\n  <success type=\"boolean\">true</success>\n  <retry type=\"boolean\">false</retry>\n  <merchant-account>\n    <id>merchant_account_token</id>\n    <currency-iso-code>USD</currency-iso-code>\n    <sub-merchant-account type=\"boolean\">false</sub-merchant-account>\n    <status>active</status>\n  </merchant-account>\n  <amount>100.00</amount>\n  <disbursement-date type=\"date\">2014-02-10</disbursement-date>\n  <exception-message nil=\"true\"/>\n  <follow-up-action nil=\"true\"/>\n</disbursement>`;\n  }\n\n  subjectXmlForGrantedPaymentInstrumentUpdate() {\n    return `<granted-payment-instrument-update>\n    <grant-owner-merchant-id>vczo7jqrpwrsi2px</grant-owner-merchant-id>\n    <grant-recipient-merchant-id>cf0i8wgarszuy6hc</grant-recipient-merchant-id>\n    <payment-method-nonce>\n      <nonce>ee257d98-de40-47e8-96b3-a6954ea7a9a4</nonce>\n      <consumed type=\"boolean\">false</consumed>\n      <locked type=\"boolean\">false</locked>\n    </payment-method-nonce>\n    <token>abc123z</token>\n    <updated-fields type=\"array\">\n      <item>expiration-month</item>\n      <item>expiration-year</item>\n    </updated-fields>\n  </granted-payment-instrument-update>`;\n  }\n\n  subjectXmlForSubMerchantAccountApproved(id) {\n    return `<merchant_account>\n  <id>${id}</id>\n</merchant_account>`;\n  }\n\n  errorSampleXml() {\n    return `<error>\n  <code>82621</code>\n  <message>Credit score is too low</message>\n  <attribute type=\\\"symbol\\\">base</attribute>\n</error>`;\n  }\n\n  subjectXmlForSubMerchantAccountDeclined(id) {\n    return `<api-error-response>\n  <message>Credit score is too low</message>\n  <errors>\n    <merchant-account>\n      <errors type=\"array\">\n        ${this.errorSampleXml()}\n      </errors>\n    </merchant-account>\n  </errors>\n  ${this.merchantAccountSampleXml(id)}\n</api-error-response>`;\n  }\n\n  merchantAccountSampleXml(id) {\n    return `<merchant_account>\n  <id>${id}</id>\n  <master_merchant_account>\n    <id>master_ma_for_${id}</id>\n    <status>suspended</status>\n  </master_merchant_account>\n  <status>suspended</status>\n</merchant_account>`;\n  }\n\n  subjectXmlForSubscription(id) {\n    return `<subscription>\n    <id>${id}</id>\n    <transactions type=\"array\"></transactions>\n    <add_ons type=\"array\"></add_ons>\n    <discounts type=\"array\"></discounts>\n</subscription>`;\n  }\n\n  subjectXmlForSubscriptionChargedSuccessfully(id) {\n    return `<subscription>\n    <id>${id}</id>\n    <transactions type=\"array\">\n      <transaction>\n        <id>${id}</id>\n        <status>submitted_for_settlement</status>\n        <amount>49.99</amount>\n      </transaction>\n    </transactions>\n    <add_ons type=\"array\"></add_ons>\n    <discounts type=\"array\"></discounts>\n</subscription>`;\n  }\n\n  subjectXmlForSubscriptionChargedUnsuccessfully(id) {\n    return `<subscription>\n    <id>${id}</id>\n    <transactions type=\"array\">\n      <transaction>\n        <id>${id}</id>\n        <status>failed</status>\n        <amount>49.99</amount>\n      </transaction>\n    </transactions>\n    <add_ons type=\"array\"></add_ons>\n    <discounts type=\"array\"></discounts>\n</subscription>`;\n  }\n\n  subjectXmlForPartnerMerchantConnected() {\n    return `<partner-merchant>\n  <merchant-public-id>public_id</merchant-public-id>\n  <public-key>public_key</public-key>\n  <private-key>private_key</private-key>\n  <partner-merchant-id>abc123</partner-merchant-id>\n  <client-side-encryption-key>cse_key</client-side-encryption-key>\n</partner-merchant>`;\n  }\n\n  subjectXmlForPartnerMerchantDisconnected() {\n    return `<partner-merchant>\n  <partner-merchant-id>abc123</partner-merchant-id>\n</partner-merchant>`;\n  }\n\n  subjectXmlForConnectedMerchantStatusTransitioned(id) {\n    return `<connected-merchant-status-transitioned>\n        <merchant-public-id>${id}</merchant-public-id>\n        <status>new_status</status>\n        <oauth-application-client-id>oauth_application_client_id</oauth-application-client-id>\n      </connected-merchant-status-transitioned>`;\n  }\n\n  subjectXmlForConnectedMerchantPayPalStatusChanged(id) {\n    return `<connected-merchant-paypal-status-changed>\n        <merchant-public-id>${id}</merchant-public-id>\n        <action>link</action>\n        <oauth-application-client-id>oauth_application_client_id</oauth-application-client-id>\n      </connected-merchant-paypal-status-changed>`;\n  }\n\n  subjectXmlForPartnerMerchantDeclined() {\n    return `<partner-merchant>\n  <partner-merchant-id>abc123</partner-merchant-id>\n</partner-merchant>`;\n  }\n\n  subjectXmlForOAuthAccessRevocation(id) {\n    return `<oauth-application-revocation>\n      <merchant-id>${id}</merchant-id>\n      <oauth-application-client-id>oauth_application_client_id</oauth-application-client-id>\n    </oauth-application-revocation>`;\n  }\n\n  subjectXmlForPaymentMethodRevokedByCustomer(id) {\n    return `<paypal-account>\n      <billing-agreement-id>a-billing-agreement-id</billing-agreement-id>\n      <created-at type=\"datetime\">2019-01-01T12:00:00Z</created-at>\n      <customer-id>a-customer-id</customer-id>\n      <default type=\"boolean\">true</default>\n      <email>name@email.com</email>\n      <global-id>cGF5bWVudG1ldGhvZF9jaDZieXNz</global-id>\n      <image-url>https://assets.braintreegateway.com/payment_method_logo/paypal.png?environment=test</image-url>\n      <subscriptions type=\"array\"/>\n      <token>${id}</token>\n      <updated-at type=\"datetime\">2019-01-02T12:00:00Z</updated-at>\n      <is-channel-initiated nil=\"true\"/>\n      <payer-id>a-payer-id</payer-id>\n      <payer-info nil=\"true\"/>\n      <limited-use-order-id nil=\"true\"/>\n      <revoked-at type=\"datetime\">2019-01-02T12:00:00Z</revoked-at>\n    </paypal-account>`;\n  }\n\n  subjectXmlForLocalPaymentCompleted() {\n    return `<local-payment>\n      <payment-id>a-payment-id</payment-id>\n      <payer-id>a-payer-id</payer-id>\n      <payment-method-nonce>ee257d98-de40-47e8-96b3-a6954ea7a9a4</payment-method-nonce>\n      <transaction>\n        <id>1</id>\n        <status>authorizing</status>\n        <amount>10.00</amount>\n        <order-id>order1234</order-id>\n      </transaction>\n    </local-payment>`;\n  }\n\n  subjectXmlForLocalPaymentReversed() {\n    return `<local-payment-reversed>\n      <payment-id>a-payment-id</payment-id>\n    </local-payment-reversed>`;\n  }\n}\n\nmodule.exports = {WebhookTestingGateway: wrapPrototype(WebhookTestingGateway)};\n"]},"metadata":{},"sourceType":"script"}