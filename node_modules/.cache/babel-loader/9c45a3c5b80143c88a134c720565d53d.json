{"ast":null,"code":"'use strict';\n\nlet Transaction = require('./transaction').Transaction;\n\nlet ValidationErrorsCollection = require('./validation_errors_collection').ValidationErrorsCollection;\n\nclass ErrorResponse {\n  constructor(attributes, gateway) {\n    for (let key in attributes) {\n      if (!attributes.hasOwnProperty(key)) {\n        continue;\n      }\n\n      let value = attributes[key];\n      this[key] = value;\n    }\n\n    this.success = false;\n    this.errors = new ValidationErrorsCollection(attributes.errors);\n\n    if (attributes.transaction) {\n      this.transaction = new Transaction(attributes.transaction, gateway);\n    }\n  }\n\n}\n\nmodule.exports = {\n  ErrorResponse: ErrorResponse\n};","map":{"version":3,"sources":["C:/Users/alpha/OneDrive/myapp/client/node_modules/braintree/lib/braintree/error_response.js"],"names":["Transaction","require","ValidationErrorsCollection","ErrorResponse","constructor","attributes","gateway","key","hasOwnProperty","value","success","errors","transaction","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBD,WAA3C;;AACA,IAAIE,0BAA0B,GAAGD,OAAO,CAAC,gCAAD,CAAP,CAA0CC,0BAA3E;;AAEA,MAAMC,aAAN,CAAoB;AAClBC,EAAAA,WAAW,CAACC,UAAD,EAAaC,OAAb,EAAsB;AAC/B,SAAK,IAAIC,GAAT,IAAgBF,UAAhB,EAA4B;AAC1B,UAAI,CAACA,UAAU,CAACG,cAAX,CAA0BD,GAA1B,CAAL,EAAqC;AACnC;AACD;;AACD,UAAIE,KAAK,GAAGJ,UAAU,CAACE,GAAD,CAAtB;AAEA,WAAKA,GAAL,IAAYE,KAAZ;AACD;;AACD,SAAKC,OAAL,GAAe,KAAf;AACA,SAAKC,MAAL,GAAc,IAAIT,0BAAJ,CAA+BG,UAAU,CAACM,MAA1C,CAAd;;AACA,QAAIN,UAAU,CAACO,WAAf,EAA4B;AAAE,WAAKA,WAAL,GAAmB,IAAIZ,WAAJ,CAAgBK,UAAU,CAACO,WAA3B,EAAwCN,OAAxC,CAAnB;AAAsE;AACrG;;AAbiB;;AAgBpBO,MAAM,CAACC,OAAP,GAAiB;AAACX,EAAAA,aAAa,EAAEA;AAAhB,CAAjB","sourcesContent":["'use strict';\n\nlet Transaction = require('./transaction').Transaction;\nlet ValidationErrorsCollection = require('./validation_errors_collection').ValidationErrorsCollection;\n\nclass ErrorResponse {\n  constructor(attributes, gateway) {\n    for (let key in attributes) {\n      if (!attributes.hasOwnProperty(key)) {\n        continue;\n      }\n      let value = attributes[key];\n\n      this[key] = value;\n    }\n    this.success = false;\n    this.errors = new ValidationErrorsCollection(attributes.errors);\n    if (attributes.transaction) { this.transaction = new Transaction(attributes.transaction, gateway); }\n  }\n}\n\nmodule.exports = {ErrorResponse: ErrorResponse};\n"]},"metadata":{},"sourceType":"script"}