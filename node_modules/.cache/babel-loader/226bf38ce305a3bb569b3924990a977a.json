{"ast":null,"code":"import { saveAs } from 'file-saver';\nimport elements from '../sketch';\nimport { jsPDF } from \"jspdf\";\nexport function handleSave() {\n  const canvas = document.getElementById(\"canvas\");\n  const context = canvas.getContext('2d');\n  const canvas2 = document.getElementById(\"canvas2\");\n  const ctx = canvas2.getContext('2d');\n  context.fillStyle = \"white\";\n  context.font = \"bold 16px Arial\";\n  context.fillText(\"Aoo Ghr Bnain\", canvas.width / 2 - 17, canvas.height / 2 + 8);\n  canvas.toBlob(function (blob) {\n    saveAs(blob, \"pretty image.png\");\n  });\n  var imgData = canvas.toDataURL('image/png');\n  var doc = new jsPDF('p', 'mm');\n  doc.addImage(imgData, 'PNG', 10, 10);\n  document.body.appendChild(imgData);\n  doc.addImage(imgData, 'PNG', 10, 10);\n  doc.addImage(imgData, 'PNG', 10, 10);\n  doc.addImage(imgData, 'PNG', 10, 10);\n  doc.save('sample-file.pdf');\n  alert(\"File Save Successfully\"); // //\n  //\n  // const writeJsonFile = require('write-json-file');\n  // const jsonFile = \"/tmp/exampleFile.json\";\n  // writeJsonFile(jsonFile,{canvas:true}).catch(err => console.log(err));\n  //\n}","map":{"version":3,"sources":["C:/Users/alpha/OneDrive/myapp/client/src/sketchHelper/handleSave.js"],"names":["saveAs","elements","jsPDF","handleSave","canvas","document","getElementById","context","getContext","canvas2","ctx","fillStyle","font","fillText","width","height","toBlob","blob","imgData","toDataURL","doc","addImage","body","appendChild","save","alert"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,KAAT,QAAsB,OAAtB;AAGA,OAAO,SAASC,UAAT,GAAsB;AACzB,QAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AACA,QAAMC,OAAO,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAhB;AAEA,QAAMC,OAAO,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAhB;AACA,QAAMI,GAAG,GAAID,OAAO,CAACD,UAAR,CAAmB,IAAnB,CAAb;AACAD,EAAAA,OAAO,CAACI,SAAR,GAAoB,OAApB;AACAJ,EAAAA,OAAO,CAACK,IAAR,GAAe,iBAAf;AACAL,EAAAA,OAAO,CAACM,QAAR,CAAiB,eAAjB,EAAoCT,MAAM,CAACU,KAAP,GAAe,CAAhB,GAAqB,EAAxD,EAA6DV,MAAM,CAACW,MAAP,GAAgB,CAAjB,GAAsB,CAAlF;AAEAX,EAAAA,MAAM,CAACY,MAAP,CAAc,UAAUC,IAAV,EAAgB;AAC1BjB,IAAAA,MAAM,CAACiB,IAAD,EAAO,kBAAP,CAAN;AAEH,GAHD;AAMQ,MAAIC,OAAO,GAAId,MAAM,CAACe,SAAP,CACX,WADW,CAAf;AAEA,MAAIC,GAAG,GAAG,IAAIlB,KAAJ,CAAU,GAAV,EAAe,IAAf,CAAV;AACAkB,EAAAA,GAAG,CAACC,QAAJ,CAAaH,OAAb,EAAsB,KAAtB,EAA6B,EAA7B,EAAiC,EAAjC;AACAb,EAAAA,QAAQ,CAACiB,IAAT,CAAcC,WAAd,CAA0BL,OAA1B;AACAE,EAAAA,GAAG,CAACC,QAAJ,CAAaH,OAAb,EAAsB,KAAtB,EAA6B,EAA7B,EAAiC,EAAjC;AACAE,EAAAA,GAAG,CAACC,QAAJ,CAAaH,OAAb,EAAsB,KAAtB,EAA6B,EAA7B,EAAiC,EAAjC;AACAE,EAAAA,GAAG,CAACC,QAAJ,CAAaH,OAAb,EAAsB,KAAtB,EAA6B,EAA7B,EAAiC,EAAjC;AACAE,EAAAA,GAAG,CAACI,IAAJ,CAAS,iBAAT;AAIRC,EAAAA,KAAK,CAAC,wBAAD,CAAL,CA5ByB,CA6BzB;AACA;AACA;AACA;AACA;AACA;AAKH","sourcesContent":["import {saveAs} from 'file-saver';\nimport elements from '../sketch';\nimport { jsPDF } from \"jspdf\";\n\n\nexport function handleSave() {\n    const canvas = document.getElementById(\"canvas\");\n    const context = canvas.getContext('2d');\n\n    const canvas2 = document.getElementById(\"canvas2\");\n    const ctx  = canvas2.getContext('2d');\n    context.fillStyle = \"white\";\n    context.font = \"bold 16px Arial\";\n    context.fillText(\"Aoo Ghr Bnain\" , (canvas.width / 2) - 17, (canvas.height / 2) + 8);\n\n    canvas.toBlob(function (blob) {\n        saveAs(blob, \"pretty image.png\")\n\n    });\n    \n         \n            var imgData =  canvas.toDataURL(\n                'image/png');          \n            var doc = new jsPDF('p', 'mm');\n            doc.addImage(imgData, 'PNG', 10, 10);\n            document.body.appendChild(imgData);\n            doc.addImage(imgData, 'PNG', 10, 10);\n            doc.addImage(imgData, 'PNG', 10, 10);\n            doc.addImage(imgData, 'PNG', 10, 10);\n            doc.save('sample-file.pdf');\n        \n    \n\n    alert(\"File Save Successfully\");\n    // //\n    //\n    // const writeJsonFile = require('write-json-file');\n    // const jsonFile = \"/tmp/exampleFile.json\";\n    // writeJsonFile(jsonFile,{canvas:true}).catch(err => console.log(err));\n    //\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}