{"ast":null,"code":"import GenericServices from \"./GenericServices\";\nimport jwt_decode from \"jwt-decode\";\n\nclass userServices extends GenericServices {\n  constructor(...args) {\n    super(...args);\n\n    this.login = (email, password) => axios.post('http://localhost:5000/auth', {\n      email,\n      password\n    }).then(res => {\n      // this.data = res.data\n      console.log(res.status);\n      console.log(res.isLoggedin);\n\n      if (res.isLoggedin) {\n        window.location.href = '/welcome ';\n      }\n    });\n\n    this.register = (name, email, password) => new Promise((resolve, reject) => {\n      this.post(\"users/register\", {\n        name,\n        email,\n        password\n      }).then(res => {\n        resolve(res);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n\n    this.isLoggedin = localStorage.getItem(\"token\") ? true : false;\n\n    this.logout = () => {\n      localStorage.removeItem(\"token\");\n      window.location.href = \"/\";\n    };\n\n    this.getLoggedinfo = () => {\n      try {\n        let jwt = localStorage.getItem(\"token\");\n        var decode = jwt_decode(jwt);\n        return decode;\n      } catch (error) {\n        console.log(\"error\");\n      }\n    };\n\n    this.isAdmin = () => {\n      if (this.isLoggedIn()) {\n        if (this.getLoggedinfo().role === \"admin\") return true;else return false;\n      } else return false;\n    };\n  }\n\n}\n\nlet UserServices = new userServices();\nexport default UserServices;","map":{"version":3,"sources":["/home/ehtisham/MyApp/myapp/client/src/services/UserServices.js"],"names":["GenericServices","jwt_decode","userServices","login","email","password","axios","post","then","res","console","log","status","isLoggedin","window","location","href","register","name","Promise","resolve","reject","catch","err","localStorage","getItem","logout","removeItem","getLoggedinfo","jwt","decode","error","isAdmin","isLoggedIn","role","UserServices"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AACA,MAAMC,YAAN,SAA2BF,eAA3B,CAA2C;AAAA;AAAA;;AAAA,SACzCG,KADyC,GACjC,CAACC,KAAD,EAAQC,QAAR,KAMRC,KAAK,CAACC,IAAN,CAAW,4BAAX,EAAyC;AAACH,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAzC,EACaG,IADb,CACmBC,GAAD,IAAQ;AACE;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAhB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACI,UAAhB;;AACZ,UAAGJ,GAAG,CAACI,UAAP,EAAkB;AAEdC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,WAAvB;AACH;AAAC,KARlB,CAPyC;;AAAA,SA4BzCC,QA5ByC,GA4B9B,CAACC,IAAD,EAAOd,KAAP,EAAcC,QAAd,KACT,IAAIc,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/B,WAAKd,IAAL,CAAU,gBAAV,EAA4B;AAAEW,QAAAA,IAAF;AAAQd,QAAAA,KAAR;AAAeC,QAAAA;AAAf,OAA5B,EACGG,IADH,CACSC,GAAD,IAAS;AACbW,QAAAA,OAAO,CAACX,GAAD,CAAP;AACD,OAHH,EAIGa,KAJH,CAIUC,GAAD,IAAS;AACdF,QAAAA,MAAM,CAACE,GAAD,CAAN;AACD,OANH;AAOD,KARD,CA7BuC;;AAAA,SAuCzCV,UAvCyC,GAuC5BW,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAgC,IAAhC,GAAuC,KAvCX;;AAAA,SAyCzCC,MAzCyC,GAyChC,MAAM;AACbF,MAAAA,YAAY,CAACG,UAAb,CAAwB,OAAxB;AACAb,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD,KA5CwC;;AAAA,SA8CzCY,aA9CyC,GA8CzB,MAAM;AACpB,UAAI;AACF,YAAIC,GAAG,GAAGL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAV;AACA,YAAIK,MAAM,GAAG7B,UAAU,CAAC4B,GAAD,CAAvB;AACA,eAAOC,MAAP;AACD,OAJD,CAIE,OAAOC,KAAP,EAAc;AACdrB,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF,KAtDwC;;AAAA,SAuDzCqB,OAvDyC,GAuD/B,MAAM;AACd,UAAI,KAAKC,UAAL,EAAJ,EAAuB;AACrB,YAAI,KAAKL,aAAL,GAAqBM,IAArB,KAA8B,OAAlC,EAA2C,OAAO,IAAP,CAA3C,KACK,OAAO,KAAP;AACN,OAHD,MAGO,OAAO,KAAP;AACR,KA5DwC;AAAA;;AAAA;;AA+D3C,IAAIC,YAAY,GAAG,IAAIjC,YAAJ,EAAnB;AACA,eAAeiC,YAAf","sourcesContent":["import GenericServices from \"./GenericServices\";\nimport jwt_decode from \"jwt-decode\";\nclass userServices extends GenericServices {\n  login = (email, password) =>\n\n\n\n\n\n  axios.post('http://localhost:5000/auth', {email, password} )\n              .then((res) =>{ \n                              // this.data = res.data\n                              console.log(res.status);\n                              console.log(res.isLoggedin);\n                  if(res.isLoggedin){\n  \n                      window.location.href = '/welcome ';\n                  }});\n\n    // new Promise((resolve, reject) => {\n    //   this.post(\"users/login\", { email, password })\n    //     .then((token) => {\n    //       localStorage.setItem(\"token\", token);\n    //       resolve(token);\n    //     })\n    //     .catch((err) => {\n    //       reject(err);\n    //     });\n    // });\n\n  register = (name, email, password) =>\n    new Promise((resolve, reject) => {\n      this.post(\"users/register\", { name, email, password })\n        .then((res) => {\n          resolve(res);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n  isLoggedin = localStorage.getItem(\"token\") ? true : false;\n\n  logout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.href = \"/\";\n  };\n\n  getLoggedinfo = () => {\n    try {\n      let jwt = localStorage.getItem(\"token\");\n      var decode = jwt_decode(jwt);\n      return decode;\n    } catch (error) {\n      console.log(\"error\");\n    }\n  };\n  isAdmin = () => {\n    if (this.isLoggedIn()) {\n      if (this.getLoggedinfo().role === \"admin\") return true;\n      else return false;\n    } else return false;\n  };\n}\n\nlet UserServices = new userServices();\nexport default UserServices;\n"]},"metadata":{},"sourceType":"module"}