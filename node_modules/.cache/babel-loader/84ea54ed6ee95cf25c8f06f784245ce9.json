{"ast":null,"code":"import GenericServices from \"./GenericServices\";\nimport jwt_decode from \"jwt-decode\";\n\nclass userServices extends GenericServices {\n  constructor(...args) {\n    super(...args);\n\n    this.setsketchLength = sketchLength => {\n      let mylength = sketchLength;\n      console.log(mylength);\n      return mylength;\n    };\n\n    this.getsketchLength = () => {\n      console.log(this.mylength);\n      return this.mylength;\n    };\n\n    this.login = (userName, password) => new Promise((resolve, reject) => {\n      console.log(userName, password);\n      this.post(\"http://localhost:5000/auth\", {\n        userName,\n        password\n      }).then(token => {\n        localStorage.setItem(\"token\", token);\n        resolve(token);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n\n    this.register = (username, email, password, role) => new Promise((resolve, reject) => {\n      console.log(username);\n      this.post(\"http://localhost:5000/register\", {\n        username,\n        email,\n        password,\n        role\n      }).then(res => {\n        resolve(res);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n\n    this.contact = (username, email, query) => new Promise((resolve, reject) => {\n      console.log(username);\n      this.post(\"http://localhost:5000/contact\", {\n        username,\n        email,\n        query\n      }).then(res => {\n        resolve(res);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n\n    this.save = (name, elements, width, height, id) => new Promise((resolve, reject) => {\n      var data = JSON.stringify(elements);\n      console.log(width);\n      console.log(height);\n      this.post(\"http://localhost:5000/save\", {\n        name,\n        data,\n        width,\n        height,\n        id\n      }).then(res => {\n        resolve(res);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n\n    this.change = (sub, role) => new Promise((resolve, reject) => {\n      console.log(role);\n      this.post(\"http://localhost:5000/change\", {\n        sub,\n        role\n      }).then(res => {\n        resolve(res);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n\n    this.updatePass = (email, password, role) => new Promise((resolve, reject) => {\n      console.log(email);\n      this.post(\"http://localhost:5000/updatePass\", {\n        email,\n        password,\n        role\n      }).then(res => {\n        resolve(res);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n\n    this.getSketch = id => new Promise((resolve, reject) => {\n      console.log(id);\n      this.post(\"http://localhost:5000/getSketch\", {\n        id\n      }).then(token2 => {\n        this.sketchLength(token2.length);\n        this.getsketchLength();\n\n        for (var i = 0; i < token2.length; i++) {\n          localStorage.setItem(\"token2\" + i, token2[i]);\n          resolve(token2[i]);\n        }\n      }).catch(err => {\n        reject(err);\n      });\n    });\n\n    this.isLoggedin = localStorage.getItem(\"token\") ? true : false;\n\n    this.logout = () => {\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"token2\");\n      window.location.href = \"/\";\n    };\n\n    this.getLoggedinfo = () => {\n      try {\n        let jwt = localStorage.getItem(\"token\");\n        var decode = jwt_decode(jwt);\n        return decode;\n      } catch (error) {\n        console.log(\"error\");\n      }\n    };\n\n    this.getSketchinfo = () => {\n      try {\n        let jwt = localStorage.getItem(\"token21\");\n        var decode = jwt_decode(jwt);\n        return decode;\n      } catch (error) {\n        console.log(\"error\");\n      }\n    };\n\n    this.isAdmin = () => {\n      if (this.isLoggedIn) {\n        if (this.getLoggedinfo().role === \"admin\") return true;else return false;\n      } else return false;\n    };\n  }\n\n}\n\nlet UserServices = new userServices();\nexport default UserServices;","map":{"version":3,"sources":["C:/Users/alpha/OneDrive/myapp/client/src/services/UserServices.js"],"names":["GenericServices","jwt_decode","userServices","setsketchLength","sketchLength","mylength","console","log","getsketchLength","login","userName","password","Promise","resolve","reject","post","then","token","localStorage","setItem","catch","err","register","username","email","role","res","contact","query","save","name","elements","width","height","id","data","JSON","stringify","change","sub","updatePass","getSketch","token2","length","i","isLoggedin","getItem","logout","removeItem","window","location","href","getLoggedinfo","jwt","decode","error","getSketchinfo","isAdmin","isLoggedIn","UserServices"],"mappings":"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","sourcesContent":["import GenericServices from \"./GenericServices\";\nimport jwt_decode from \"jwt-decode\";\nclass userServices extends GenericServices {\n\n\n\n  setsketchLength = (sketchLength) => {\n\n   let mylength = sketchLength;\n   console.log(mylength)\n    return mylength;\n  }\n\n  getsketchLength = () => {\n\n\n    console.log(this.mylength)\n \n     return this.mylength;\n   }\n\n  login = (userName, password) =>\n\n    new Promise((resolve, reject) => {\n\n      console.log(userName , password);\n\n      this.post(\"http://localhost:5000/auth\", { userName, password })\n        .then((token) => {\n          localStorage.setItem(\"token\", token);\n          resolve(token);\n         \n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n  register = (username, email, password , role) =>\n    new Promise((resolve, reject) => {\n\n\n      console.log(username)\n\n      this.post(\"http://localhost:5000/register\", { username, email, password , role})\n        .then((res) => {\n          resolve(res);\n        })  \n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    contact = (username, email, query) =>\n    new Promise((resolve, reject) => {\n\n\n      console.log(username)\n\n      this.post(\"http://localhost:5000/contact\", { username, email, query })\n        .then((res) => {\n          resolve(res);\n        })  \n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    save = (name , elements ,width , height, id) =>\n    new Promise((resolve, reject) => {\n\n      var data = JSON.stringify(elements);\n\n      console.log(width)\n\n      console.log(height)\n\n      this.post(\"http://localhost:5000/save\", { name , data ,width , height, id })\n        .then((res) => {\n          resolve(res);\n        })  \n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    change = (sub , role) =>\n    new Promise((resolve, reject) => {\n\n      console.log(role)\n\n      this.post(\"http://localhost:5000/change\", { sub , role })\n        .then((res) => {\n          resolve(res);\n        })  \n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    updatePass = (email, password, role) =>\n    new Promise((resolve, reject) => {\n\n      console.log(email)\n\n      this.post(\"http://localhost:5000/updatePass\", { email, password , role })\n        .then((res) => {\n          resolve(res);\n        })  \n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    \n\n    getSketch = (id) =>\n    new Promise((resolve, reject) => {\n\n      console.log(id)\n\n      this.post(\"http://localhost:5000/getSketch\", { id })\n        .then((token2) => {\n          this.sketchLength( token2.length )\n          this.getsketchLength()\n          for(var i = 0; i <token2.length; i++){\n          localStorage.setItem(\"token2\"+i, token2[i]);\n          resolve(token2[i]);\n          }\n        })  \n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    isLoggedin = localStorage.getItem(\"token\") ? true : false;\n\n  logout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"token2\");\n    window.location.href = \"/\";\n  };\n\n  getLoggedinfo = () => {\n    try {\n      let jwt = localStorage.getItem(\"token\");\n      var decode = jwt_decode(jwt);\n      return decode;\n    } catch (error) {\n      console.log(\"error\");\n    }\n  };\n\n  getSketchinfo = () => {\n    try {\n      let jwt = localStorage.getItem(\"token21\");\n      var decode = jwt_decode(jwt);\n      return decode;\n    } catch (error) {\n      console.log(\"error\");\n    }\n  };\n  \n  isAdmin = () => {\n    if (this.isLoggedIn) {\n      if (this.getLoggedinfo().role === \"admin\") return true;\n      else return false;\n    } else return false;\n  };\n}\n\nlet UserServices = new userServices();\nexport default UserServices;\n"]},"metadata":{},"sourceType":"module"}