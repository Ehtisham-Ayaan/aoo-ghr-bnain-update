{"ast":null,"code":"import { saveAs } from 'file-saver';\nimport { saveLayer } from '../sketch';\nimport { myVar } from '../sketch';\nimport { jsPDF } from \"jspdf\";\nimport rough from 'roughjs/bundled/rough.esm';\nimport 'jspdf-autotable';\nimport foundation from \"../img/1.jpg\";\nexport function HandleSave() {\n  saveLayer();\n  const canvas = document.getElementById(\"canvas\");\n  const context = canvas.getContext('2d');\n  const canvas2 = document.getElementById(\"canvas2\");\n  const ctx = canvas2.getContext('2d');\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = \"black\";\n  ctx.font = \"bold 16px Arial\";\n  ctx.fillText(\"Aoo Ghr Bnain\", canvas2.width / 2 - 17, canvas2.height / 2 + 8); // canvas.toBlob(function (blob) {\n  //     saveAs(blob, \"pretty image.png\")\n  // });\n\n  console.log(myVar.length);\n  var doc = new jsPDF('l', 'mm', [420, 297]);\n  var title = prompt(\"House Plot No.\").toString();\n  var title1 = prompt(\"Khasr No.\").toString();\n  var title2 = prompt(\"Khewat No.\").toString();\n  var title3 = prompt(\"Khatoni No.\").toString();\n  var title4 = prompt(\"Town\").toString();\n  var title5 = prompt(\"Address\").toString();\n  var title6 = prompt(\"Owner\").toString();\n  var title7 = prompt(\"S/O or D/O or W/O\").toString();\n  var north = prompt(\"North... Only Enter U for upper, L for lower, R for right, Le for left\").toString();\n  var title8 = \"Scale : 1\\\" = 15.32 ... This is computer generated Scale. Don't worry about it.\";\n  doc.setFont(\"san-serif\", 'bold');\n  doc.setFont(\"san-serif\", 'underline');\n  doc.text(\"PROPOSED PLAN OF HOUSE PLOT NO. \" + title + \"\\n\" + \"KHASR NO. \" + title1 + \"\\n\" + \"KHEWAT NO. \" + title2 + \"        KHATONI NO. \" + title3 + \"\\n\" + title4 + \"\\n\" + title5 + \"\\n\" + title6 + \"\\n\" + \"S/O OR D/O OR W/O \" + title7 + \"\\n\" + title8 + \"\\n\", 10, 10);\n\n  if (north == \"U\") {\n    doc.setFont(\"san-serif\", 'bold', '25');\n    doc.text(\" ^ North is Up ^ \", 50, 70);\n  } else if (north == \"L\") {\n    doc.setFont(\"san-serif\", 'bold', '25');\n    doc.text(\" __ North is Down __ \", 50, 70);\n  } else if (north == \"R\") {\n    doc.setFont(\"san-serif\", 'bold', '25');\n    doc.text(\"North is Right  -->\", 50, 70);\n  } else if (north == \"Le\") {\n    doc.setFont(\"san-serif\", 'bold', '25');\n    doc.text(\"<-- North is Left\", 50, 70);\n  } // doc.text(\"Hi\", 10, 10)\n\n\n  for (var k = 0; k < myVar.length; k++) {\n    var Data = myVar[k]; // for(var m = 0; m < Data.length; m++) {\n    // ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    ctx.beginPath();\n    ctx.rect(0, 0, canvas2.width, canvas2.height);\n    ctx.stroke();\n    const roughCanvas2 = rough.canvas(canvas2);\n    Data.forEach(({\n      roughElement\n    }) => roughCanvas2.draw(roughElement));\n    var imgData = canvas2.toDataURL('image/png');\n    doc.addImage(imgData, 'PNG', 10, 80);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    doc.addPage(); // estimatess1total = estimatess1total + (Math.abs((Data[m].x2-Data[m].x1))  / 15.36);\n    // estimatess2total = estimatess2total + (Math.abs((Data[m].y2-Data[m].y1))  / 15.36);\n    // }\n  } // const roughCanvas2 = rough.canvas(canvas2);\n  // elements.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n  // var imgData =  canvas2.toDataURL(\n  //     'image/png');          \n  // doc.addImage(imgData, 'PNG', 10, 10);\n\n\n  doc.autoTable({\n    // startY: 10,\n    startX: 500,\n    head: [['Name', 'Email', 'Country']],\n    body: [['David', 'david@example.com', 'Sweden'], ['Castille', 'castille@example.com', 'Spain']]\n  });\n  doc.autoTable({\n    theme: 'plain',\n    styles: {\n      fontSize: 12\n    },\n    startY: 150,\n    showHeader: 'never',\n    createdCell: function (cell, data) {\n      var tdElement = cell.raw;\n\n      if (tdElement.classList.contains('hrow')) {\n        cell.styles.fontStyle = 'bold';\n      }\n    }\n  });\n  doc.text(\"Foundation\", 10, 50);\n  doc.addImage(foundation, 'JPEG', 10, 70, 150, 76);\n  doc.save('sample-file.pdf'); // doc.text(\"Hello world!\", 10, 10);\n  // doc.save(\"a4.pdf\");\n\n  alert(\"File Save Successfully\"); // //\n  //\n  // const writeJsonFile = require('write-json-file');\n  // const jsonFile = \"/tmp/exampleFile.json\";\n  // writeJsonFile(jsonFile,{canvas:true}).catch(err => console.log(err));\n  //\n}\n_c = HandleSave;\n\nvar _c;\n\n$RefreshReg$(_c, \"HandleSave\");","map":{"version":3,"sources":["C:/Users/alpha/OneDrive/myapp/client/src/sketchHelper/handleSave.js"],"names":["saveAs","saveLayer","myVar","jsPDF","rough","foundation","HandleSave","canvas","document","getElementById","context","getContext","canvas2","ctx","clearRect","width","height","fillStyle","font","fillText","console","log","length","doc","title","prompt","toString","title1","title2","title3","title4","title5","title6","title7","north","title8","setFont","text","k","Data","beginPath","rect","stroke","roughCanvas2","forEach","roughElement","draw","imgData","toDataURL","addImage","addPage","autoTable","startX","head","body","theme","styles","fontSize","startY","showHeader","createdCell","cell","data","tdElement","raw","classList","contains","fontStyle","save","alert"],"mappings":"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","sourcesContent":["import {saveAs} from 'file-saver';\nimport {saveLayer} from '../sketch';\nimport {myVar} from '../sketch'\nimport { jsPDF } from \"jspdf\";\nimport rough from 'roughjs/bundled/rough.esm';\nimport 'jspdf-autotable'\nimport foundation from \"../img/1.jpg\";\n\n\n\nexport function HandleSave() {\n\n    saveLayer();\n\n    const canvas = document.getElementById(\"canvas\");\n    const context = canvas.getContext('2d');\n\n    const canvas2 = document.getElementById(\"canvas2\");\n    const ctx  = canvas2.getContext('2d');\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    ctx.fillStyle = \"black\";\n    ctx.font = \"bold 16px Arial\";\n    ctx.fillText(\"Aoo Ghr Bnain\" , (canvas2.width / 2) - 17, (canvas2.height / 2) + 8);\n\n    // canvas.toBlob(function (blob) {\n    //     saveAs(blob, \"pretty image.png\")\n\n    // });\n\n    console.log(myVar.length)\n\n    \n    var doc = new jsPDF('l', 'mm', [420, 297]);\n\n    var title = prompt(\"House Plot No.\").toString()\n    var title1 = prompt(\"Khasr No.\").toString()\n    var title2 = prompt(\"Khewat No.\").toString()\n    var title3 = prompt(\"Khatoni No.\").toString()\n    var title4 = prompt(\"Town\").toString()\n    var title5 = prompt(\"Address\").toString()\n    var title6 = prompt(\"Owner\").toString()\n    var title7 = prompt(\"S/O or D/O or W/O\").toString()\n    \n    var north = prompt(\"North... Only Enter U for upper, L for lower, R for right, Le for left\").toString()\n    \n    var title8 = \"Scale : 1\\\" = 15.32 ... This is computer generated Scale. Don't worry about it.\"\n    \n    doc.setFont(\"san-serif\", 'bold')\n    doc.setFont(\"san-serif\", 'underline')\n\n    doc.text(\"PROPOSED PLAN OF HOUSE PLOT NO. \" + title+ \"\\n\" +\"KHASR NO. \"+ title1+ \"\\n\" +\"KHEWAT NO. \"+ title2 + \"        KHATONI NO. \" +title3+ \"\\n\" + title4+ \"\\n\" + title5 + \"\\n\" + title6+ \"\\n\" +\"S/O OR D/O OR W/O \"+ title7+ \"\\n\" + title8+ \"\\n\" , 10, 10);\n    \n    if(north == \"U\"){\n        doc.setFont(\"san-serif\", 'bold','25')\n        doc.text(\" ^ North is Up ^ \",50, 70)\n\n    }\n    else if(north == \"L\"){\n        doc.setFont(\"san-serif\", 'bold','25')\n        doc.text(\" __ North is Down __ \",50, 70)\n    }\n    else if(north == \"R\"){\n        doc.setFont(\"san-serif\", 'bold','25')\n        doc.text(\"North is Right  -->\",50, 70)\n    }\n    else if(north == \"Le\"){\n        doc.setFont(\"san-serif\", 'bold','25')\n        doc.text(\"<-- North is Left\" ,50, 70)\n    }\n    \n   \n    \n    // doc.text(\"Hi\", 10, 10)\n\n    \n\n            for(var k = 0; k < myVar.length; k++) {\n\n                var Data = myVar[k];\n\n                // for(var m = 0; m < Data.length; m++) {\n\n                    // ctx.clearRect(0, 0, canvas.width, canvas.height);\n                    ctx.beginPath();\n                    ctx.rect(0, 0, canvas2.width, canvas2.height);\n                    ctx.stroke();\n                \n                    const roughCanvas2 = rough.canvas(canvas2);\n                    Data.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n\n                    var imgData =  canvas2.toDataURL(\n                        'image/png');          \n                    \n                    doc.addImage(imgData, 'PNG', 10, 80);\n                    ctx.clearRect(0, 0, canvas.width, canvas.height);\n                    doc.addPage();\n                \n\n                    // estimatess1total = estimatess1total + (Math.abs((Data[m].x2-Data[m].x1))  / 15.36);\n                    // estimatess2total = estimatess2total + (Math.abs((Data[m].y2-Data[m].y1))  / 15.36);\n\n                // }\n\n            }\n\n            \n\n            // const roughCanvas2 = rough.canvas(canvas2);\n            // elements.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n\n            // var imgData =  canvas2.toDataURL(\n            //     'image/png');          \n            \n            // doc.addImage(imgData, 'PNG', 10, 10);\n\n            doc.autoTable({\n              // startY: 10,\n              startX: 500,\n              head: [['Name', 'Email', 'Country']],\n              body: [\n                ['David', 'david@example.com', 'Sweden'],\n                ['Castille', 'castille@example.com', 'Spain'],\n                \n              ],\n            })\n            doc.autoTable({\n              theme : 'plain',\n              styles: {\n                fontSize: 12\n              },\n              startY: 150,\n              showHeader: 'never',\n              createdCell: function(cell, data) {\n                var tdElement = cell.raw;\n                if (tdElement.classList.contains('hrow')) {\n                  cell.styles.fontStyle = 'bold';\n                }\n              }\n            });\n\n\n            doc.text(\"Foundation\", 10, 50)\n\n            doc.addImage(foundation, 'JPEG', 10, 70, 150, 76);\n            \n            doc.save('sample-file.pdf');\n\n\n            // doc.text(\"Hello world!\", 10, 10);\n            // doc.save(\"a4.pdf\");\n\n    alert(\"File Save Successfully\");\n    // //\n    //\n    // const writeJsonFile = require('write-json-file');\n    // const jsonFile = \"/tmp/exampleFile.json\";\n    // writeJsonFile(jsonFile,{canvas:true}).catch(err => console.log(err));\n    //\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}