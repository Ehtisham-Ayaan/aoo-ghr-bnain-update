{"ast":null,"code":"import { distance } from \"./sketch\";\nexport const isWithinElement = (x, y, element) => {\n  const {\n    x1,\n    y1,\n    x2,\n    y2,\n    type\n  } = element;\n\n  if (type === \"line\") {\n    const a = {\n      x: x1,\n      y: y1\n    };\n    const b = {\n      x: x2,\n      y: y2\n    };\n    const c = {\n      x,\n      y\n    };\n    const offset = distance(a, b) - (distance(a, c) + distance(b, c));\n    return Math.abs(offset) < 1;\n  } else if (type === \"rectangle\") {\n    const minX = Math.min(x1, x2);\n    const maxX = Math.max(x1, x2);\n    const minY = Math.min(y1, y2);\n    const maxy = Math.max(y1, y2);\n    return x >= minX && x <= maxX && y <= maxy && y >= minY;\n  } else if (type === \"circle\") {\n    const minX = Math.min(x1, x2);\n    const maxX = Math.max(x1, x2);\n    const minY = Math.min(y1, y2);\n    const maxy = Math.max(y1, y2);\n    const radX = maxX + minX;\n    const radY = maxy + minY;\n    return x >= minX && x <= maxX && y <= maxy && y >= minY && radX && radY;\n  } else if (type === \"ellipse\") {\n    const minX = Math.min(x1, x2);\n    const maxX = Math.max(x1, x2);\n    const minY = Math.min(y1, y2);\n    const maxy = Math.max(y1, y2);\n    return x >= minX && x <= maxX && y <= maxy && y >= minY;\n  } else if (type === \"arcL\") {\n    const minX = Math.min(x1, x2);\n    const maxX = Math.max(x1, x2);\n    const minY = Math.min(y1, y2);\n    const maxy = Math.max(y1, y2);\n    return x >= minX && x <= maxX && y <= maxy && y >= minY;\n  } else {\n    const minX = Math.min(x1, x2);\n    const maxX = Math.max(x1, x2);\n    const minY = Math.min(y1, y2);\n    const maxy = Math.max(y1, y2);\n    return x >= minX && x <= maxX && y <= maxy && y >= minY;\n  }\n};","map":{"version":3,"sources":["/home/ehtisham/MyApp/myapp/client/src/isWithinElement.js"],"names":["distance","isWithinElement","x","y","element","x1","y1","x2","y2","type","a","b","c","offset","Math","abs","minX","min","maxX","max","minY","maxy","radX","radY"],"mappings":"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","sourcesContent":["import {distance} from \"./sketch\";\n\nexport const isWithinElement = (x,y, element) => {\n    const {x1, y1, x2, y2, type} = element;\n    if(type === \"line\" )\n    {\n        const a ={x : x1, y : y1};\n        const b ={x : x2, y : y2}\n        const c ={x,y}\n        const offset = distance(a,b) - (distance(a,c) + distance(b,c));\n        return Math.abs(offset)<1;\n\n    }\n    else if (type === \"rectangle\")\n    {\n        const minX = Math.min(x1,x2);\n        const maxX = Math.max(x1,x2);\n        const minY = Math.min(y1,y2);\n        const maxy = Math.max(y1,y2);\n        return x >= minX && x <= maxX && y <= maxy && y >= minY;\n    }\n    else if (type === \"circle\")\n    {\n        const minX = Math.min(x1,x2);\n        const maxX = Math.max(x1,x2);\n        const minY = Math.min(y1,y2);\n        const maxy = Math.max(y1,y2);\n\n        const radX = maxX + minX;\n        const radY = maxy + minY;\n\n        return x >= minX && x <= maxX && y <= maxy && y >= minY && radX && radY;\n    }\n    else if (type === \"ellipse\")\n    {\n        const minX = Math.min(x1,x2);\n        const maxX = Math.max(x1,x2);\n        const minY = Math.min(y1,y2);\n        const maxy = Math.max(y1,y2);\n        return x >= minX && x <= maxX && y <= maxy && y >= minY;\n\n    }\n    else if (type === \"arcL\")\n    {\n        const minX = Math.min(x1,x2);\n        const maxX = Math.max(x1,x2);\n        const minY = Math.min(y1,y2);\n        const maxy = Math.max(y1,y2);\n        return x >= minX && x <= maxX && y <= maxy && y >= minY;\n\n    }\n    else{\n        const minX = Math.min(x1,x2);\n        const maxX = Math.max(x1,x2);\n        const minY = Math.min(y1,y2);\n        const maxy = Math.max(y1,y2);\n        return x >= minX && x <= maxX && y <= maxy && y >= minY;\n\n    }\n\n};"]},"metadata":{},"sourceType":"module"}