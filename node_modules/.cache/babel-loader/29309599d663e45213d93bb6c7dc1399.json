{"ast":null,"code":"'use strict';\n\nlet AttributeSetter = require('./attribute_setter').AttributeSetter;\n\nlet ApplePayCard = require('./apple_pay_card').ApplePayCard;\n\nlet AndroidPayCard = require('./android_pay_card').AndroidPayCard;\n\nlet CreditCard = require('./credit_card').CreditCard;\n\nlet PayPalAccount = require('./paypal_account').PayPalAccount;\n\nlet VenmoAccount = require('./venmo_account').VenmoAccount;\n\nlet UsBankAccount = require('./us_bank_account').UsBankAccount;\n\nclass Customer extends AttributeSetter {\n  constructor(attributes) {\n    super(attributes);\n    this.paymentMethods = [];\n\n    if (attributes.creditCards) {\n      this.creditCards = attributes.creditCards.map(cardAttributes => new CreditCard(cardAttributes));\n\n      this._addPaymentMethods(this.creditCards);\n    }\n\n    if (attributes.applePayCards) {\n      this.applePayCards = attributes.applePayCards.map(cardAttributes => new ApplePayCard(cardAttributes));\n\n      this._addPaymentMethods(this.applePayCards);\n    } // NEXT_MAJOR_VERSION rename Android Pay to Google Pay\n\n\n    if (attributes.androidPayCards) {\n      this.androidPayCards = attributes.androidPayCards.map(cardAttributes => new AndroidPayCard(cardAttributes));\n\n      this._addPaymentMethods(this.androidPayCards);\n    }\n\n    if (attributes.paypalAccounts) {\n      this.paypalAccounts = attributes.paypalAccounts.map(paypalAccountAttributes => new PayPalAccount(paypalAccountAttributes));\n\n      this._addPaymentMethods(this.paypalAccounts);\n    }\n\n    if (attributes.venmoAccounts) {\n      this.venmoAccounts = attributes.venmoAccounts.map(venmoAccountAttributes => new VenmoAccount(venmoAccountAttributes));\n\n      this._addPaymentMethods(this.venmoAccounts);\n    }\n\n    if (attributes.usBankAccounts) {\n      this.usBankAccounts = attributes.usBankAccounts.map(usBankAccountAttributes => new UsBankAccount(usBankAccountAttributes));\n\n      this._addPaymentMethods(this.usBankAccounts);\n    }\n  }\n\n  _addPaymentMethods(paymentMethods) {\n    return paymentMethods.map(paymentMethod => this.paymentMethods.push(paymentMethod));\n  }\n\n}\n\nmodule.exports = {\n  Customer: Customer\n};","map":{"version":3,"sources":["C:/Users/alpha/OneDrive/myapp/client/node_modules/braintree/lib/braintree/customer.js"],"names":["AttributeSetter","require","ApplePayCard","AndroidPayCard","CreditCard","PayPalAccount","VenmoAccount","UsBankAccount","Customer","constructor","attributes","paymentMethods","creditCards","map","cardAttributes","_addPaymentMethods","applePayCards","androidPayCards","paypalAccounts","paypalAccountAttributes","venmoAccounts","venmoAccountAttributes","usBankAccounts","usBankAccountAttributes","paymentMethod","push","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAAP,CAA8BD,eAApD;;AACA,IAAIE,YAAY,GAAGD,OAAO,CAAC,kBAAD,CAAP,CAA4BC,YAA/C;;AACA,IAAIC,cAAc,GAAGF,OAAO,CAAC,oBAAD,CAAP,CAA8BE,cAAnD;;AACA,IAAIC,UAAU,GAAGH,OAAO,CAAC,eAAD,CAAP,CAAyBG,UAA1C;;AACA,IAAIC,aAAa,GAAGJ,OAAO,CAAC,kBAAD,CAAP,CAA4BI,aAAhD;;AACA,IAAIC,YAAY,GAAGL,OAAO,CAAC,iBAAD,CAAP,CAA2BK,YAA9C;;AACA,IAAIC,aAAa,GAAGN,OAAO,CAAC,mBAAD,CAAP,CAA6BM,aAAjD;;AAEA,MAAMC,QAAN,SAAuBR,eAAvB,CAAuC;AACrCS,EAAAA,WAAW,CAACC,UAAD,EAAa;AACtB,UAAMA,UAAN;AACA,SAAKC,cAAL,GAAsB,EAAtB;;AAEA,QAAID,UAAU,CAACE,WAAf,EAA4B;AAC1B,WAAKA,WAAL,GAAmBF,UAAU,CAACE,WAAX,CAAuBC,GAAvB,CAA4BC,cAAD,IAAoB,IAAIV,UAAJ,CAAeU,cAAf,CAA/C,CAAnB;;AACA,WAAKC,kBAAL,CAAwB,KAAKH,WAA7B;AACD;;AAED,QAAIF,UAAU,CAACM,aAAf,EAA8B;AAC5B,WAAKA,aAAL,GAAqBN,UAAU,CAACM,aAAX,CAAyBH,GAAzB,CAA8BC,cAAD,IAAoB,IAAIZ,YAAJ,CAAiBY,cAAjB,CAAjD,CAArB;;AACA,WAAKC,kBAAL,CAAwB,KAAKC,aAA7B;AACD,KAZqB,CActB;;;AACA,QAAIN,UAAU,CAACO,eAAf,EAAgC;AAC9B,WAAKA,eAAL,GAAuBP,UAAU,CAACO,eAAX,CAA2BJ,GAA3B,CAAgCC,cAAD,IAAoB,IAAIX,cAAJ,CAAmBW,cAAnB,CAAnD,CAAvB;;AACA,WAAKC,kBAAL,CAAwB,KAAKE,eAA7B;AACD;;AAED,QAAIP,UAAU,CAACQ,cAAf,EAA+B;AAC7B,WAAKA,cAAL,GAAsBR,UAAU,CAACQ,cAAX,CAA0BL,GAA1B,CAA+BM,uBAAD,IAA6B,IAAId,aAAJ,CAAkBc,uBAAlB,CAA3D,CAAtB;;AACA,WAAKJ,kBAAL,CAAwB,KAAKG,cAA7B;AACD;;AAED,QAAIR,UAAU,CAACU,aAAf,EAA8B;AAC5B,WAAKA,aAAL,GAAqBV,UAAU,CAACU,aAAX,CAAyBP,GAAzB,CAA8BQ,sBAAD,IAA4B,IAAIf,YAAJ,CAAiBe,sBAAjB,CAAzD,CAArB;;AACA,WAAKN,kBAAL,CAAwB,KAAKK,aAA7B;AACD;;AAED,QAAIV,UAAU,CAACY,cAAf,EAA+B;AAC7B,WAAKA,cAAL,GAAsBZ,UAAU,CAACY,cAAX,CAA0BT,GAA1B,CAA+BU,uBAAD,IAA6B,IAAIhB,aAAJ,CAAkBgB,uBAAlB,CAA3D,CAAtB;;AACA,WAAKR,kBAAL,CAAwB,KAAKO,cAA7B;AACD;AACF;;AAEDP,EAAAA,kBAAkB,CAACJ,cAAD,EAAiB;AACjC,WAAOA,cAAc,CAACE,GAAf,CAAoBW,aAAD,IACxB,KAAKb,cAAL,CAAoBc,IAApB,CAAyBD,aAAzB,CADK,CAAP;AAED;;AAxCoC;;AA2CvCE,MAAM,CAACC,OAAP,GAAiB;AAACnB,EAAAA,QAAQ,EAAEA;AAAX,CAAjB","sourcesContent":["'use strict';\n\nlet AttributeSetter = require('./attribute_setter').AttributeSetter;\nlet ApplePayCard = require('./apple_pay_card').ApplePayCard;\nlet AndroidPayCard = require('./android_pay_card').AndroidPayCard;\nlet CreditCard = require('./credit_card').CreditCard;\nlet PayPalAccount = require('./paypal_account').PayPalAccount;\nlet VenmoAccount = require('./venmo_account').VenmoAccount;\nlet UsBankAccount = require('./us_bank_account').UsBankAccount;\n\nclass Customer extends AttributeSetter {\n  constructor(attributes) {\n    super(attributes);\n    this.paymentMethods = [];\n\n    if (attributes.creditCards) {\n      this.creditCards = attributes.creditCards.map((cardAttributes) => new CreditCard(cardAttributes));\n      this._addPaymentMethods(this.creditCards);\n    }\n\n    if (attributes.applePayCards) {\n      this.applePayCards = attributes.applePayCards.map((cardAttributes) => new ApplePayCard(cardAttributes));\n      this._addPaymentMethods(this.applePayCards);\n    }\n\n    // NEXT_MAJOR_VERSION rename Android Pay to Google Pay\n    if (attributes.androidPayCards) {\n      this.androidPayCards = attributes.androidPayCards.map((cardAttributes) => new AndroidPayCard(cardAttributes));\n      this._addPaymentMethods(this.androidPayCards);\n    }\n\n    if (attributes.paypalAccounts) {\n      this.paypalAccounts = attributes.paypalAccounts.map((paypalAccountAttributes) => new PayPalAccount(paypalAccountAttributes));\n      this._addPaymentMethods(this.paypalAccounts);\n    }\n\n    if (attributes.venmoAccounts) {\n      this.venmoAccounts = attributes.venmoAccounts.map((venmoAccountAttributes) => new VenmoAccount(venmoAccountAttributes));\n      this._addPaymentMethods(this.venmoAccounts);\n    }\n\n    if (attributes.usBankAccounts) {\n      this.usBankAccounts = attributes.usBankAccounts.map((usBankAccountAttributes) => new UsBankAccount(usBankAccountAttributes));\n      this._addPaymentMethods(this.usBankAccounts);\n    }\n  }\n\n  _addPaymentMethods(paymentMethods) {\n    return paymentMethods.map((paymentMethod) =>\n      this.paymentMethods.push(paymentMethod));\n  }\n}\n\nmodule.exports = {Customer: Customer};\n"]},"metadata":{},"sourceType":"script"}