{"ast":null,"code":"'use strict';\n\nlet AttributeSetter = require('./attribute_setter').AttributeSetter;\n\nlet Transaction = require('./transaction').Transaction;\n\nclass Subscription extends AttributeSetter {\n  static initClass() {\n    this.Source = {\n      Api: 'api',\n      ControlPanel: 'control_panel',\n      Recurring: 'recurring'\n    };\n    this.Status = {\n      Active: 'Active',\n      Canceled: 'Canceled',\n      Expired: 'Expired',\n      PastDue: 'Past Due',\n      Pending: 'Pending',\n\n      All() {\n        let all = [];\n\n        for (let key in this) {\n          if (!this.hasOwnProperty(key)) {\n            continue;\n          }\n\n          let value = this[key];\n\n          if (key !== 'All') {\n            all.push(value);\n          }\n        }\n\n        return all;\n      }\n\n    };\n  }\n\n  constructor(attributes, gateway) {\n    super(attributes, gateway);\n    this.transactions = attributes.transactions.map(transactionAttributes => new Transaction(transactionAttributes, gateway));\n  }\n\n}\n\nSubscription.initClass();\nmodule.exports = {\n  Subscription: Subscription\n};","map":{"version":3,"sources":["C:/Users/alpha/OneDrive/myapp/client/node_modules/braintree/lib/braintree/subscription.js"],"names":["AttributeSetter","require","Transaction","Subscription","initClass","Source","Api","ControlPanel","Recurring","Status","Active","Canceled","Expired","PastDue","Pending","All","all","key","hasOwnProperty","value","push","constructor","attributes","gateway","transactions","map","transactionAttributes","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAAP,CAA8BD,eAApD;;AACA,IAAIE,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAP,CAAyBC,WAA3C;;AAEA,MAAMC,YAAN,SAA2BH,eAA3B,CAA2C;AACzB,SAATI,SAAS,GAAG;AACjB,SAAKC,MAAL,GAAc;AACZC,MAAAA,GAAG,EAAE,KADO;AAEZC,MAAAA,YAAY,EAAE,eAFF;AAGZC,MAAAA,SAAS,EAAE;AAHC,KAAd;AAMA,SAAKC,MAAL,GAAc;AACZC,MAAAA,MAAM,EAAE,QADI;AAEZC,MAAAA,QAAQ,EAAE,UAFE;AAGZC,MAAAA,OAAO,EAAE,SAHG;AAIZC,MAAAA,OAAO,EAAE,UAJG;AAKZC,MAAAA,OAAO,EAAE,SALG;;AAMZC,MAAAA,GAAG,GAAG;AACJ,YAAIC,GAAG,GAAG,EAAV;;AAEA,aAAK,IAAIC,GAAT,IAAgB,IAAhB,EAAsB;AACpB,cAAI,CAAC,KAAKC,cAAL,CAAoBD,GAApB,CAAL,EAA+B;AAC7B;AACD;;AACD,cAAIE,KAAK,GAAG,KAAKF,GAAL,CAAZ;;AAEA,cAAIA,GAAG,KAAK,KAAZ,EAAmB;AAAED,YAAAA,GAAG,CAACI,IAAJ,CAASD,KAAT;AAAkB;AACxC;;AAED,eAAOH,GAAP;AACD;;AAnBW,KAAd;AAqBD;;AAEDK,EAAAA,WAAW,CAACC,UAAD,EAAaC,OAAb,EAAsB;AAC/B,UAAMD,UAAN,EAAkBC,OAAlB;AACA,SAAKC,YAAL,GAAoBF,UAAU,CAACE,YAAX,CAAwBC,GAAxB,CAA6BC,qBAAD,IAA2B,IAAIxB,WAAJ,CAAgBwB,qBAAhB,EAAuCH,OAAvC,CAAvD,CAApB;AACD;;AAlCwC;;AAoC3CpB,YAAY,CAACC,SAAb;AAEAuB,MAAM,CAACC,OAAP,GAAiB;AAACzB,EAAAA,YAAY,EAAEA;AAAf,CAAjB","sourcesContent":["'use strict';\n\nlet AttributeSetter = require('./attribute_setter').AttributeSetter;\nlet Transaction = require('./transaction').Transaction;\n\nclass Subscription extends AttributeSetter {\n  static initClass() {\n    this.Source = {\n      Api: 'api',\n      ControlPanel: 'control_panel',\n      Recurring: 'recurring'\n    };\n\n    this.Status = {\n      Active: 'Active',\n      Canceled: 'Canceled',\n      Expired: 'Expired',\n      PastDue: 'Past Due',\n      Pending: 'Pending',\n      All() {\n        let all = [];\n\n        for (let key in this) {\n          if (!this.hasOwnProperty(key)) {\n            continue;\n          }\n          let value = this[key];\n\n          if (key !== 'All') { all.push(value); }\n        }\n\n        return all;\n      }\n    };\n  }\n\n  constructor(attributes, gateway) {\n    super(attributes, gateway);\n    this.transactions = attributes.transactions.map((transactionAttributes) => new Transaction(transactionAttributes, gateway));\n  }\n}\nSubscription.initClass();\n\nmodule.exports = {Subscription: Subscription};\n"]},"metadata":{},"sourceType":"script"}