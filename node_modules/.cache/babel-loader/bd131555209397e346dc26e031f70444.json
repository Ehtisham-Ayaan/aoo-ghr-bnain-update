{"ast":null,"code":"import { setAction, setSelectedElement, tool } from \"../sketch\";\nimport { getElementAtPosition } from \"../sketch\";\nimport { mouse } from \"../sketch\";\nimport { elements } from \"../sketch\";\nimport { setElements } from \"../sketch\";\nimport { createElement } from \"./createElement\";\nexport const handleMouseDown = event => {\n  // const { clientX , clientY} = event;\n  if (tool === \"selection\") {\n    const element = getElementAtPosition(mouse.x, mouse.y, elements);\n\n    if (element) {\n      const offsetX = mouse.x - element.x1;\n      const offsetY = mouse.y - element.y1;\n      setSelectedElement({ ...element,\n        offsetX,\n        offsetY\n      });\n      setAction(\"moving\");\n    }\n  } else if (tool === \"eraser\") {\n    const element = getElementAtPosition(mouse.x, mouse.y, elements);\n\n    if (element) {\n      const offsetX = mouse.x - element.x1;\n      const offsetY = mouse.y - element.y1;\n      setSelectedElement({ ...element,\n        offsetX,\n        offsetY\n      });\n      setAction(\"eraser\");\n    }\n  } else if (tool === \"text\") {\n    const element = getElementAtPosition(mouse.x, mouse.y, elements);\n\n    if (element) {\n      const offsetX = mouse.x - element.x1;\n      const offsetY = mouse.y - element.y1;\n      setSelectedElement({ ...element,\n        offsetX,\n        offsetY\n      });\n      setAction(\"text\");\n    }\n  } else if (tool === \"resize\") {\n    const element = getElementAtPosition(mouse.x, mouse.y, elements);\n\n    if (element) {\n      const offsetX = mouse.x - element.x1;\n      const offsetY = mouse.y - element.y1;\n      setSelectedElement({ ...element,\n        offsetX,\n        offsetY\n      });\n      setAction(\"moving\");\n    }\n  } else {\n    setAction(\"drawing\"); // const {clientX, clientY} = event;\n\n    const id = elements.length;\n    const element = createElement(id, mouse.x, mouse.y, mouse.x, mouse.y, tool);\n    setElements(prevState => [...prevState, element]);\n  }\n};","map":{"version":3,"sources":["F:/myapp/client/src/sketchHelper/handleMouseDown.js"],"names":["setAction","setSelectedElement","tool","getElementAtPosition","mouse","elements","setElements","createElement","handleMouseDown","event","element","x","y","offsetX","x1","offsetY","y1","id","length","prevState"],"mappings":"AACA,SAAQA,SAAR,EAAmBC,kBAAnB,EAAuCC,IAAvC,QAAkD,WAAlD;AAEA,SAAQC,oBAAR,QAAmC,WAAnC;AAEA,SAAQC,KAAR,QAAoB,WAApB;AAEA,SAAQC,QAAR,QAAuB,WAAvB;AAEA,SAAQC,WAAR,QAA0B,WAA1B;AAEA,SAAQC,aAAR,QAA4B,iBAA5B;AAEA,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACtC;AACA,MAAIP,IAAI,KAAK,WAAb,EAA0B;AACtB,UAAMQ,OAAO,GAAGP,oBAAoB,CAACC,KAAK,CAACO,CAAP,EAAUP,KAAK,CAACQ,CAAhB,EAAmBP,QAAnB,CAApC;;AACA,QAAGK,OAAH,EACA;AACI,YAAMG,OAAO,GAAGT,KAAK,CAACO,CAAN,GAAUD,OAAO,CAACI,EAAlC;AACA,YAAMC,OAAO,GAAGX,KAAK,CAACQ,CAAN,GAAUF,OAAO,CAACM,EAAlC;AAEAf,MAAAA,kBAAkB,CAAC,EAAC,GAAGS,OAAJ;AAAYG,QAAAA,OAAZ;AAAoBE,QAAAA;AAApB,OAAD,CAAlB;AACAf,MAAAA,SAAS,CAAC,QAAD,CAAT;AACH;AAEJ,GAXD,MAYK,IAAGE,IAAI,KAAK,QAAZ,EACL;AACI,UAAMQ,OAAO,GAAGP,oBAAoB,CAACC,KAAK,CAACO,CAAP,EAAUP,KAAK,CAACQ,CAAhB,EAAmBP,QAAnB,CAApC;;AACA,QAAGK,OAAH,EACA;AACI,YAAMG,OAAO,GAAGT,KAAK,CAACO,CAAN,GAAUD,OAAO,CAACI,EAAlC;AACA,YAAMC,OAAO,GAAGX,KAAK,CAACQ,CAAN,GAAUF,OAAO,CAACM,EAAlC;AACAf,MAAAA,kBAAkB,CAAC,EAAC,GAAGS,OAAJ;AAAYG,QAAAA,OAAZ;AAAoBE,QAAAA;AAApB,OAAD,CAAlB;AACAf,MAAAA,SAAS,CAAC,QAAD,CAAT;AACH;AACJ,GAVI,MAYA,IAAGE,IAAI,KAAK,MAAZ,EACL;AACI,UAAMQ,OAAO,GAAGP,oBAAoB,CAACC,KAAK,CAACO,CAAP,EAAUP,KAAK,CAACQ,CAAhB,EAAmBP,QAAnB,CAApC;;AACA,QAAGK,OAAH,EACA;AACI,YAAMG,OAAO,GAAGT,KAAK,CAACO,CAAN,GAAUD,OAAO,CAACI,EAAlC;AACA,YAAMC,OAAO,GAAGX,KAAK,CAACQ,CAAN,GAAUF,OAAO,CAACM,EAAlC;AACAf,MAAAA,kBAAkB,CAAC,EAAC,GAAGS,OAAJ;AAAYG,QAAAA,OAAZ;AAAoBE,QAAAA;AAApB,OAAD,CAAlB;AACAf,MAAAA,SAAS,CAAC,MAAD,CAAT;AACH;AACJ,GAVI,MAWA,IAAGE,IAAI,KAAK,QAAZ,EACL;AACI,UAAMQ,OAAO,GAAGP,oBAAoB,CAACC,KAAK,CAACO,CAAP,EAAUP,KAAK,CAACQ,CAAhB,EAAmBP,QAAnB,CAApC;;AACA,QAAGK,OAAH,EACA;AACI,YAAMG,OAAO,GAAGT,KAAK,CAACO,CAAN,GAAUD,OAAO,CAACI,EAAlC;AACA,YAAMC,OAAO,GAAGX,KAAK,CAACQ,CAAN,GAAUF,OAAO,CAACM,EAAlC;AACAf,MAAAA,kBAAkB,CAAC,EAAC,GAAGS,OAAJ;AAAYG,QAAAA,OAAZ;AAAoBE,QAAAA;AAApB,OAAD,CAAlB;AACAf,MAAAA,SAAS,CAAC,QAAD,CAAT;AACH;AACJ,GAVI,MAYA;AACDA,IAAAA,SAAS,CAAC,SAAD,CAAT,CADC,CAED;;AACA,UAAMiB,EAAE,GAAGZ,QAAQ,CAACa,MAApB;AACA,UAAMR,OAAO,GAAIH,aAAa,CAACU,EAAD,EAAKb,KAAK,CAACO,CAAX,EAAcP,KAAK,CAACQ,CAApB,EAAuBR,KAAK,CAACO,CAA7B,EAAgCP,KAAK,CAACQ,CAAtC,EAAyCV,IAAzC,CAA9B;AACAI,IAAAA,WAAW,CAACa,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeT,OAAf,CAAd,CAAX;AAGH;AACJ,CA1DM","sourcesContent":["\nimport {setAction, setSelectedElement, tool} from \"../sketch\";\n\nimport {getElementAtPosition} from \"../sketch\";\n\nimport {mouse} from \"../sketch\";\n\nimport {elements} from \"../sketch\";\n\nimport {setElements} from \"../sketch\";\n\nimport {createElement} from \"./createElement\";\n\nexport const handleMouseDown = (event) => {\n    // const { clientX , clientY} = event;\n    if (tool === \"selection\") {\n        const element = getElementAtPosition(mouse.x, mouse.y, elements);\n        if(element)\n        {\n            const offsetX = mouse.x - element.x1 ;\n            const offsetY = mouse.y - element.y1 ;\n\n            setSelectedElement({...element,offsetX,offsetY});\n            setAction(\"moving\");\n        }\n\n    }\n    else if(tool === \"eraser\")\n    {\n        const element = getElementAtPosition(mouse.x, mouse.y, elements);\n        if(element)\n        {\n            const offsetX = mouse.x - element.x1 ;\n            const offsetY = mouse.y - element.y1 ;\n            setSelectedElement({...element,offsetX,offsetY});\n            setAction(\"eraser\");\n        }\n    }\n\n    else if(tool === \"text\")\n    {\n        const element = getElementAtPosition(mouse.x, mouse.y, elements);\n        if(element)\n        {\n            const offsetX = mouse.x - element.x1 ;\n            const offsetY = mouse.y - element.y1 ;\n            setSelectedElement({...element,offsetX,offsetY});\n            setAction(\"text\");\n        }\n    }\n    else if(tool === \"resize\")\n    {\n        const element = getElementAtPosition(mouse.x, mouse.y, elements);\n        if(element)\n        {\n            const offsetX = mouse.x - element.x1 ;\n            const offsetY = mouse.y - element.y1 ;\n            setSelectedElement({...element,offsetX,offsetY});\n            setAction(\"moving\");\n        }\n    }\n\n    else {\n        setAction(\"drawing\");\n        // const {clientX, clientY} = event;\n        const id = elements.length;\n        const element =  createElement(id, mouse.x, mouse.y, mouse.x, mouse.y, tool);\n        setElements(prevState => [...prevState, element]);\n\n\n    }\n};"]},"metadata":{},"sourceType":"module"}