{"ast":null,"code":"'use strict';\n\nlet PaginatedResponseStream = require('./paginated_response_stream').PaginatedResponseStream;\n\nclass PaginatedResponse {\n  constructor(pagingFunction, options) {\n    this.pagingFunction = pagingFunction;\n    this.stream = new PaginatedResponseStream(this, options);\n  }\n\n  all(callback) {\n    var results = [];\n    this.stream.on('data', function (data) {\n      return results.push(data);\n    });\n    this.stream.on('end', function () {\n      return callback(null, results);\n    });\n    this.stream.on('error', function (err) {\n      return callback(err);\n    });\n    return this.stream.ready();\n  }\n\n  ready() {\n    return this.stream.ready();\n  }\n\n}\n\nmodule.exports = {\n  PaginatedResponse: PaginatedResponse\n};","map":{"version":3,"sources":["C:/Users/alpha/OneDrive/myapp/client/node_modules/braintree/lib/braintree/paginated_response.js"],"names":["PaginatedResponseStream","require","PaginatedResponse","constructor","pagingFunction","options","stream","all","callback","results","on","data","push","err","ready","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,6BAAD,CAAP,CAAuCD,uBAArE;;AAEA,MAAME,iBAAN,CAAwB;AACtBC,EAAAA,WAAW,CAACC,cAAD,EAAiBC,OAAjB,EAA0B;AACnC,SAAKD,cAAL,GAAsBA,cAAtB;AACA,SAAKE,MAAL,GAAc,IAAIN,uBAAJ,CAA4B,IAA5B,EAAkCK,OAAlC,CAAd;AACD;;AAEDE,EAAAA,GAAG,CAACC,QAAD,EAAW;AACZ,QAAIC,OAAO,GAAG,EAAd;AAEA,SAAKH,MAAL,CAAYI,EAAZ,CAAe,MAAf,EAAuB,UAAUC,IAAV,EAAgB;AACrC,aAAOF,OAAO,CAACG,IAAR,CAAaD,IAAb,CAAP;AACD,KAFD;AAGA,SAAKL,MAAL,CAAYI,EAAZ,CAAe,KAAf,EAAsB,YAAY;AAChC,aAAOF,QAAQ,CAAC,IAAD,EAAOC,OAAP,CAAf;AACD,KAFD;AAGA,SAAKH,MAAL,CAAYI,EAAZ,CAAe,OAAf,EAAwB,UAAUG,GAAV,EAAe;AACrC,aAAOL,QAAQ,CAACK,GAAD,CAAf;AACD,KAFD;AAIA,WAAO,KAAKP,MAAL,CAAYQ,KAAZ,EAAP;AACD;;AAEDA,EAAAA,KAAK,GAAG;AACN,WAAO,KAAKR,MAAL,CAAYQ,KAAZ,EAAP;AACD;;AAxBqB;;AA2BxBC,MAAM,CAACC,OAAP,GAAiB;AAACd,EAAAA,iBAAiB,EAAEA;AAApB,CAAjB","sourcesContent":["'use strict';\n\nlet PaginatedResponseStream = require('./paginated_response_stream').PaginatedResponseStream;\n\nclass PaginatedResponse {\n  constructor(pagingFunction, options) {\n    this.pagingFunction = pagingFunction;\n    this.stream = new PaginatedResponseStream(this, options);\n  }\n\n  all(callback) {\n    var results = [];\n\n    this.stream.on('data', function (data) {\n      return results.push(data);\n    });\n    this.stream.on('end', function () {\n      return callback(null, results);\n    });\n    this.stream.on('error', function (err) {\n      return callback(err);\n    });\n\n    return this.stream.ready();\n  }\n\n  ready() {\n    return this.stream.ready();\n  }\n}\n\nmodule.exports = {PaginatedResponse: PaginatedResponse};\n"]},"metadata":{},"sourceType":"script"}