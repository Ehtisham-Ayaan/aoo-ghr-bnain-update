{"ast":null,"code":"import GenericServices from \"./GenericServices\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\";\n\nclass userServices extends GenericServices {\n  constructor(...args) {\n    super(...args);\n\n    this.login = (userName, password) => // axios.post('http://localhost:5000/auth', {userName, password} )\n    //             .then((res) =>{ \n    //                             // this.data = res.data\n    //                             console.log(res.status);\n    //                             console.log(res.isLoggedin);\n    //                 if(res.isLoggedin){\n    //                     window.location.href = '/welcome ';\n    //                 }});\n    new Promise((resolve, reject) => {\n      console.log(userName);\n      axios.post(\"http://localhost:5000/auth\", {\n        userName,\n        password\n      }).then(token => {\n        localStorage.setItem(\"token\", token);\n        resolve(token);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n\n    this.register = (name, email, password) => new Promise((resolve, reject) => {\n      this.post(\"users/register\", {\n        name,\n        email,\n        password\n      }).then(res => {\n        resolve(res);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n\n    this.isLoggedin = localStorage.getItem(\"token\") ? true : false;\n\n    this.logout = () => {\n      localStorage.removeItem(\"token\");\n      window.location.href = \"/\";\n    };\n\n    this.getLoggedinfo = () => {\n      try {\n        let jwt = localStorage.getItem(\"token\");\n        var decode = jwt_decode(jwt);\n        return decode;\n      } catch (error) {\n        console.log(\"error\");\n      }\n    };\n\n    this.isAdmin = () => {\n      if (this.isLoggedIn()) {\n        if (this.getLoggedinfo().role === \"admin\") return true;else return false;\n      } else return false;\n    };\n  }\n\n}\n\nlet UserServices = new userServices();\nexport default UserServices;","map":{"version":3,"sources":["/home/ehtisham/MyApp/myapp/client/src/services/UserServices.js"],"names":["GenericServices","jwt_decode","axios","userServices","login","userName","password","Promise","resolve","reject","console","log","post","then","token","localStorage","setItem","catch","err","register","name","email","res","isLoggedin","getItem","logout","removeItem","window","location","href","getLoggedinfo","jwt","decode","error","isAdmin","isLoggedIn","role","UserServices"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,YAAN,SAA2BH,eAA3B,CAA2C;AAAA;AAAA;;AAAA,SACzCI,KADyC,GACjC,CAACC,QAAD,EAAWC,QAAX,KAGR;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEE,QAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAE/BC,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AAEAH,MAAAA,KAAK,CAACU,IAAN,CAAW,4BAAX,EAAyC;AAAEP,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAAzC,EACGO,IADH,CACSC,KAAD,IAAW;AACfC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;AACAN,QAAAA,OAAO,CAACM,KAAD,CAAP;AACD,OAJH,EAKGG,KALH,CAKUC,GAAD,IAAS;AACdT,QAAAA,MAAM,CAACS,GAAD,CAAN;AACD,OAPH;AAQD,KAZD,CAduC;;AAAA,SA4BzCC,QA5ByC,GA4B9B,CAACC,IAAD,EAAOC,KAAP,EAAcf,QAAd,KACT,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/B,WAAKG,IAAL,CAAU,gBAAV,EAA4B;AAAEQ,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAef,QAAAA;AAAf,OAA5B,EACGO,IADH,CACSS,GAAD,IAAS;AACbd,QAAAA,OAAO,CAACc,GAAD,CAAP;AACD,OAHH,EAIGL,KAJH,CAIUC,GAAD,IAAS;AACdT,QAAAA,MAAM,CAACS,GAAD,CAAN;AACD,OANH;AAOD,KARD,CA7BuC;;AAAA,SAuCzCK,UAvCyC,GAuC5BR,YAAY,CAACS,OAAb,CAAqB,OAArB,IAAgC,IAAhC,GAAuC,KAvCX;;AAAA,SAyCzCC,MAzCyC,GAyChC,MAAM;AACbV,MAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD,KA5CwC;;AAAA,SA8CzCC,aA9CyC,GA8CzB,MAAM;AACpB,UAAI;AACF,YAAIC,GAAG,GAAGhB,YAAY,CAACS,OAAb,CAAqB,OAArB,CAAV;AACA,YAAIQ,MAAM,GAAG/B,UAAU,CAAC8B,GAAD,CAAvB;AACA,eAAOC,MAAP;AACD,OAJD,CAIE,OAAOC,KAAP,EAAc;AACdvB,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF,KAtDwC;;AAAA,SAuDzCuB,OAvDyC,GAuD/B,MAAM;AACd,UAAI,KAAKC,UAAL,EAAJ,EAAuB;AACrB,YAAI,KAAKL,aAAL,GAAqBM,IAArB,KAA8B,OAAlC,EAA2C,OAAO,IAAP,CAA3C,KACK,OAAO,KAAP;AACN,OAHD,MAGO,OAAO,KAAP;AACR,KA5DwC;AAAA;;AAAA;;AA+D3C,IAAIC,YAAY,GAAG,IAAIlC,YAAJ,EAAnB;AACA,eAAekC,YAAf","sourcesContent":["import GenericServices from \"./GenericServices\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\"\nclass userServices extends GenericServices {\n  login = (userName, password) =>\n\n\n  // axios.post('http://localhost:5000/auth', {userName, password} )\n  //             .then((res) =>{ \n  //                             // this.data = res.data\n  //                             console.log(res.status);\n  //                             console.log(res.isLoggedin);\n  //                 if(res.isLoggedin){\n  \n  //                     window.location.href = '/welcome ';\n  //                 }});\n\n    new Promise((resolve, reject) => {\n\n      console.log(userName);\n\n      axios.post(\"http://localhost:5000/auth\", { userName, password })\n        .then((token) => {\n          localStorage.setItem(\"token\", token);\n          resolve(token);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n  register = (name, email, password) =>\n    new Promise((resolve, reject) => {\n      this.post(\"users/register\", { name, email, password })\n        .then((res) => {\n          resolve(res);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n  isLoggedin = localStorage.getItem(\"token\") ? true : false;\n\n  logout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.href = \"/\";\n  };\n\n  getLoggedinfo = () => {\n    try {\n      let jwt = localStorage.getItem(\"token\");\n      var decode = jwt_decode(jwt);\n      return decode;\n    } catch (error) {\n      console.log(\"error\");\n    }\n  };\n  isAdmin = () => {\n    if (this.isLoggedIn()) {\n      if (this.getLoggedinfo().role === \"admin\") return true;\n      else return false;\n    } else return false;\n  };\n}\n\nlet UserServices = new userServices();\nexport default UserServices;\n"]},"metadata":{},"sourceType":"module"}