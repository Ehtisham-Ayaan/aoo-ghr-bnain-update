{"ast":null,"code":"import{saveAs}from'file-saver';import{saveLayer}from'../sketch';import{myVar}from'../sketch';import{jsPDF}from\"jspdf\";import{marla,totalLayer}from\"../sketch\";import{canvWidth,canvHeight}from\"../sketch\";import rough from'roughjs/bundled/rough.esm';import'jspdf-autotable';import foundation from\"../img/1.jpg\";export function HandleSave(){saveLayer();var canvas=document.getElementById(\"canvas\");var context=canvas.getContext('2d');var canvas2=document.getElementById(\"canvas2\");var ctx=canvas2.getContext('2d');ctx.clearRect(0,0,canvas.width,canvas.height);ctx.fillStyle=\"black\";ctx.font=\"bold 16px Arial\";ctx.fillText(\"Aoo Ghr Bnain\",canvas2.width/2-17,canvas2.height/2+8);// canvas.toBlob(function (blob) {\n//     saveAs(blob, \"pretty image.png\")\n// });\nconsole.log(myVar.length);var doc=new jsPDF('l','mm',[420,297]);var title=prompt(\"House Plot No.\").toString();var title1=prompt(\"Khasr No.\").toString();var title2=prompt(\"Khewat No.\").toString();var title3=prompt(\"Khatoni No.\").toString();var title4=prompt(\"Town\").toString();var title5=prompt(\"Address\").toString();var title6=prompt(\"Owner\").toString();var title7=prompt(\"S/O or D/O or W/O\").toString();var north=prompt(\"North... Only Enter U for upper, L for lower, R for right, Le for left\").toString();var title8=\"Scale : 1\\\" = 15.32 ... This is computer generated Scale. Don't worry about it.\";doc.setFont(\"san-serif\",'bold');doc.setFont(\"san-serif\",'underline');doc.text(\"PROPOSED PLAN OF HOUSE PLOT NO. \"+title+\"\\n\"+\"KHASR NO. \"+title1+\"\\n\"+\"KHEWAT NO. \"+title2+\"        KHATONI NO. \"+title3+\"\\n\"+title4+\"\\n\"+title5+\"\\n\"+title6+\"\\n\"+\"S/O OR D/O OR W/O \"+title7+\"\\n\"+title8+\"\\n\",10,10);if(north==\"U\"){doc.setFont(\"san-serif\",'bold','25');doc.text(\" ^ North is Up ^ \",50,70);}else if(north==\"L\"){doc.setFont(\"san-serif\",'bold','25');doc.text(\" __ North is Down __ \",50,70);}else if(north==\"R\"){doc.setFont(\"san-serif\",'bold','25');doc.text(\"North is Right  -->\",50,70);}else if(north==\"Le\"){doc.setFont(\"san-serif\",'bold','25');doc.text(\"<-- North is Left\",50,70);}var estimatess1totall=0;var estimatess2totall=0;var _loop=function _loop(){Data=myVar[k];// for(var m = 0; m < Data.length; m++) {\n// ctx.clearRect(0, 0, canvas.width, canvas.height);\nctx.beginPath();ctx.rect(0,0,canvas2.width,canvas2.height);ctx.stroke();var roughCanvas2=rough.canvas(canvas2);Data.forEach(function(_ref){var roughElement=_ref.roughElement;return roughCanvas2.draw(roughElement);});imgData=canvas2.toDataURL('image/png');canvas2.toBlob(function(blob){saveAs(blob,\"pretty image.png\");});doc.addImage(imgData,'PNG',10,80);ctx.clearRect(0,0,canvas.width,canvas.height);doc.addPage();for(m=0;m<Data.length;m++){estimatess1totall=estimatess1totall+Math.abs(Data[m].x2-Data[m].x1)/15.36;estimatess2totall=estimatess2totall+Math.abs(Data[m].y2-Data[m].y1)/15.36;}};for(var k=0;k<myVar.length;k++){var Data;var imgData;var m;_loop();}var myWid=(canvWidth/15.36).toString();var myHt=(canvHeight/15.36).toString();// const roughCanvas2 = rough.canvas(canvas2);\n// elements.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n// var imgData =  canvas2.toDataURL(\n//     'image/png');          \n// doc.addImage(imgData, 'PNG', 10, 10);\nvar covered=estimatess2totall*estimatess1totall;var floor=totalLayer+1;var total=parseInt(myWid)*parseInt(myHt)*floor;console.log(total);doc.text(\"Area Detail (As you have created \"+floor+\" Floors. The total area will be calculated as ...)\",10,10);if(total-covered<0){var body=[[\"You\",\"Have Created\",\"Maximum\"]];}else{var body=[[covered,total-covered,total]];}doc.autoTable({margin:{right:200},head:[['Covered Area Feet','Open Feet','Total Feet']],body:body});doc.text(\"Land : \",250,50);var myMarla=marla.toString();// console.log(myMarla)\n// myWid.toString();\n// myHt.toString();\ndoc.text(myMarla+\"  Marla \"+myWid+\" * \"+myHt+\" Feet \",270,50);//   doc.autoTable({\n//     margin : {\n//       right : 100\n//  }\t,\n//     body: [\n//       ['Floor', '10', 'Sweden'],\n//       ['Castille', '10', 'Spain'],\n//     ],\n//   })\ndoc.text(\"Foundation\",230,210);doc.addImage(foundation,'JPEG',230,220,150,76);doc.save('sample-file.pdf');// doc.text(\"Hello world!\", 10, 10);\n// doc.save(\"a4.pdf\");\nalert(\"File Save Successfully\");// //\n//\n// const writeJsonFile = require('write-json-file');\n// const jsonFile = \"/tmp/exampleFile.json\";\n// writeJsonFile(jsonFile,{canvas:true}).catch(err => console.log(err));\n//\n}","map":{"version":3,"sources":["F:/Aoo-Ghr-Bnain-Client/src/sketchHelper/handleSave.js"],"names":["saveAs","saveLayer","myVar","jsPDF","marla","totalLayer","canvWidth","canvHeight","rough","foundation","HandleSave","canvas","document","getElementById","context","getContext","canvas2","ctx","clearRect","width","height","fillStyle","font","fillText","console","log","length","doc","title","prompt","toString","title1","title2","title3","title4","title5","title6","title7","north","title8","setFont","text","estimatess1totall","estimatess2totall","Data","k","beginPath","rect","stroke","roughCanvas2","forEach","roughElement","draw","imgData","toDataURL","toBlob","blob","addImage","addPage","m","Math","abs","x2","x1","y2","y1","myWid","myHt","covered","floor","total","parseInt","body","autoTable","margin","right","head","myMarla","save","alert"],"mappings":"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","sourcesContent":["import {saveAs} from 'file-saver';\nimport {saveLayer} from '../sketch';\nimport {myVar} from '../sketch'\nimport { jsPDF } from \"jspdf\";\nimport {marla , totalLayer} from \"../sketch\"\n\nimport {canvWidth , canvHeight} from \"../sketch\"\n\nimport rough from 'roughjs/bundled/rough.esm';\nimport 'jspdf-autotable'\nimport foundation from \"../img/1.jpg\";\n\n\n\nexport function HandleSave() {\n\n    saveLayer();\n\n    const canvas = document.getElementById(\"canvas\");\n    const context = canvas.getContext('2d');\n\n    const canvas2 = document.getElementById(\"canvas2\");\n    const ctx  = canvas2.getContext('2d');\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    ctx.fillStyle = \"black\";\n    ctx.font = \"bold 16px Arial\";\n    ctx.fillText(\"Aoo Ghr Bnain\" , (canvas2.width / 2) - 17, (canvas2.height / 2) + 8);\n\n    // canvas.toBlob(function (blob) {\n    //     saveAs(blob, \"pretty image.png\")\n\n    // });\n\n    console.log(myVar.length)\n\n    \n    var doc = new jsPDF('l', 'mm', [420, 297]);\n\n    var title = prompt(\"House Plot No.\").toString()\n    var title1 = prompt(\"Khasr No.\").toString()\n    var title2 = prompt(\"Khewat No.\").toString()\n    var title3 = prompt(\"Khatoni No.\").toString()\n    var title4 = prompt(\"Town\").toString()\n    var title5 = prompt(\"Address\").toString()\n    var title6 = prompt(\"Owner\").toString()\n    var title7 = prompt(\"S/O or D/O or W/O\").toString()\n    \n    var north = prompt(\"North... Only Enter U for upper, L for lower, R for right, Le for left\").toString()\n    \n    var title8 = \"Scale : 1\\\" = 15.32 ... This is computer generated Scale. Don't worry about it.\"\n    \n    doc.setFont(\"san-serif\", 'bold')\n    doc.setFont(\"san-serif\", 'underline')\n\n    doc.text(\"PROPOSED PLAN OF HOUSE PLOT NO. \" + title+ \"\\n\" +\"KHASR NO. \"+ title1+ \"\\n\" +\"KHEWAT NO. \"+ title2 + \"        KHATONI NO. \" +title3+ \"\\n\" + title4+ \"\\n\" + title5 + \"\\n\" + title6+ \"\\n\" +\"S/O OR D/O OR W/O \"+ title7+ \"\\n\" + title8+ \"\\n\" , 10, 10);\n    \n    if(north == \"U\"){\n        doc.setFont(\"san-serif\", 'bold','25')\n        doc.text(\" ^ North is Up ^ \",50, 70)\n\n    }\n    else if(north == \"L\"){\n        doc.setFont(\"san-serif\", 'bold','25')\n        doc.text(\" __ North is Down __ \",50, 70)\n    }\n    else if(north == \"R\"){\n        doc.setFont(\"san-serif\", 'bold','25')\n        doc.text(\"North is Right  -->\",50, 70)\n    }\n    else if(north == \"Le\"){\n        doc.setFont(\"san-serif\", 'bold','25')\n        doc.text(\"<-- North is Left\" ,50, 70)\n    }\n    \n   \n    \n    let estimatess1totall = 0;\n    let estimatess2totall = 0;\n\n    \n\n            for(var k = 0; k < myVar.length; k++) {\n\n                var Data = myVar[k];\n\n                // for(var m = 0; m < Data.length; m++) {\n\n                    // ctx.clearRect(0, 0, canvas.width, canvas.height);\n                    ctx.beginPath();\n                    ctx.rect(0, 0, canvas2.width, canvas2.height);\n                    ctx.stroke();\n                \n                    const roughCanvas2 = rough.canvas(canvas2);\n                    Data.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n\n                    var imgData =  canvas2.toDataURL(\n                        'image/png');      \n                        \n                        canvas2.toBlob(function (blob) {\n                            saveAs(blob, \"pretty image.png\")\n    \n                        });\n                    \n                    doc.addImage(imgData, 'PNG', 10, 80);\n                    ctx.clearRect(0, 0, canvas.width, canvas.height);\n                    doc.addPage();\n\n                    for(var m = 0; m < Data.length; m++) {\n\n                    estimatess1totall = estimatess1totall + (Math.abs((Data[m].x2-Data[m].x1))  / 15.36);\n                    estimatess2totall = estimatess2totall + (Math.abs((Data[m].y2-Data[m].y1))  / 15.36);\n\n                }\n\n            }\n\n            var myWid = (canvWidth / 15.36).toString();\n\n            var myHt = (canvHeight / 15.36).toString();\n            \n\n            // const roughCanvas2 = rough.canvas(canvas2);\n            // elements.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n\n            // var imgData =  canvas2.toDataURL(\n            //     'image/png');          \n            \n            // doc.addImage(imgData, 'PNG', 10, 10);\n\n            \n\n            var covered = estimatess2totall * estimatess1totall\n            var floor = totalLayer + 1;\n            var total = parseInt(myWid) * parseInt(myHt) * floor\n\n            console.log(total)\n\n            doc.text(\"Area Detail (As you have created \" + floor + \" Floors. The total area will be calculated as ...)\", 10, 10)\n\n            if(total - covered < 0){\n              var body = [[\"You\" , \"Have Created\" , \"Maximum\"]]\n            }\n            else{\n\n            var body = [[covered , total - covered , total]]\n            }\n            doc.autoTable({\n              margin : {\n                right : 200\n           }\t,\n              head: [['Covered Area Feet', 'Open Feet', 'Total Feet']],\n              body: \n                body  ,\n            \n            })\n            doc.text(\"Land : \", 250, 50)\n\n            var myMarla = marla.toString()\n            \n            // console.log(myMarla)\n\n            // myWid.toString();\n            // myHt.toString();\n\n            doc.text(myMarla + \"  Marla \" + myWid + \" * \" + myHt + \" Feet \", 270, 50)\n\n          //   doc.autoTable({\n\n             \n\n          //     margin : {\n          //       right : 100\n          //  }\t,\n              \n          //     body: [\n          //       ['Floor', '10', 'Sweden'],\n          //       ['Castille', '10', 'Spain'],\n                \n          //     ],\n          //   })\n\n\n            doc.text(\"Foundation\", 230, 210)\n\n            doc.addImage(foundation, 'JPEG', 230, 220, 150, 76);\n            \n            doc.save('sample-file.pdf');\n\n\n            // doc.text(\"Hello world!\", 10, 10);\n            // doc.save(\"a4.pdf\");\n\n    alert(\"File Save Successfully\");\n    // //\n    //\n    // const writeJsonFile = require('write-json-file');\n    // const jsonFile = \"/tmp/exampleFile.json\";\n    // writeJsonFile(jsonFile,{canvas:true}).catch(err => console.log(err));\n    //\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}