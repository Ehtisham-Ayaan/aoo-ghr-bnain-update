{"ast":null,"code":"'use strict';\n\nlet Gateway = require('./gateway').Gateway;\n\nlet wrapPrototype = require('@braintree/wrap-promise').wrapPrototype;\n\nclass DisbursementGateway extends Gateway {\n  constructor(gateway) {\n    super();\n    this.gateway = gateway;\n    this.config = this.gateway.config;\n  }\n\n  transactions(disbursement) {\n    let transactionIds = disbursement.transactionIds;\n    return new Promise((resolve, reject) => {\n      this.gateway.transaction.search(search => {\n        search.ids().in(transactionIds);\n      }, (err, response) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(response);\n        }\n      });\n    });\n  }\n\n}\n\nmodule.exports = {\n  DisbursementGateway: wrapPrototype(DisbursementGateway)\n};","map":{"version":3,"sources":["C:/Users/alpha/OneDrive/myapp/client/node_modules/braintree/lib/braintree/disbursement_gateway.js"],"names":["Gateway","require","wrapPrototype","DisbursementGateway","constructor","gateway","config","transactions","disbursement","transactionIds","Promise","resolve","reject","transaction","search","ids","in","err","response","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBD,OAAnC;;AACA,IAAIE,aAAa,GAAGD,OAAO,CAAC,yBAAD,CAAP,CAAmCC,aAAvD;;AAEA,MAAMC,mBAAN,SAAkCH,OAAlC,CAA0C;AACxCI,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB;AACA,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKC,MAAL,GAAc,KAAKD,OAAL,CAAaC,MAA3B;AACD;;AAEDC,EAAAA,YAAY,CAACC,YAAD,EAAe;AACzB,QAAIC,cAAc,GAAGD,YAAY,CAACC,cAAlC;AAEA,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,WAAKP,OAAL,CAAaQ,WAAb,CAAyBC,MAAzB,CAAiCA,MAAD,IAAY;AAC1CA,QAAAA,MAAM,CAACC,GAAP,GAAaC,EAAb,CAAgBP,cAAhB;AACD,OAFD,EAEG,CAACQ,GAAD,EAAMC,QAAN,KAAmB;AACpB,YAAID,GAAJ,EAAS;AACPL,UAAAA,MAAM,CAACK,GAAD,CAAN;AACD,SAFD,MAEO;AACLN,UAAAA,OAAO,CAACO,QAAD,CAAP;AACD;AACF,OARD;AASD,KAVM,CAAP;AAWD;;AArBuC;;AAwB1CC,MAAM,CAACC,OAAP,GAAiB;AAACjB,EAAAA,mBAAmB,EAAED,aAAa,CAACC,mBAAD;AAAnC,CAAjB","sourcesContent":["'use strict';\n\nlet Gateway = require('./gateway').Gateway;\nlet wrapPrototype = require('@braintree/wrap-promise').wrapPrototype;\n\nclass DisbursementGateway extends Gateway {\n  constructor(gateway) {\n    super();\n    this.gateway = gateway;\n    this.config = this.gateway.config;\n  }\n\n  transactions(disbursement) {\n    let transactionIds = disbursement.transactionIds;\n\n    return new Promise((resolve, reject) => {\n      this.gateway.transaction.search((search) => {\n        search.ids().in(transactionIds);\n      }, (err, response) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(response);\n        }\n      });\n    });\n  }\n}\n\nmodule.exports = {DisbursementGateway: wrapPrototype(DisbursementGateway)};\n"]},"metadata":{},"sourceType":"script"}