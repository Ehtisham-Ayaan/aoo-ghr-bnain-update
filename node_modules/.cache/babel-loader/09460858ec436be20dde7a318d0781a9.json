{"ast":null,"code":"import { mouse, myArr, setMyArr, elements, setElements, getElementAtPosition, setAction, setSelectedElement, tool } from \"../sketch\";\nimport { createElement } from \"./createElement\";\nexport const handleMouseDown = event => {\n  // const { clientX , clientY} = event;\n  if (tool === \"selection\") {\n    const element = getElementAtPosition(mouse.x, mouse.y, elements);\n\n    if (element) {\n      const offsetX = mouse.x - element.x1;\n      const offsetY = mouse.y - element.y1;\n      setSelectedElement({ ...element,\n        offsetX,\n        offsetY\n      });\n      setAction(\"moving\");\n    }\n  } else if (tool === \"eraser\") {\n    const element = getElementAtPosition(mouse.x, mouse.y, elements);\n\n    if (element) {\n      const offsetX = mouse.x - element.x1;\n      const offsetY = mouse.y - element.y1;\n      setSelectedElement({ ...element,\n        offsetX,\n        offsetY\n      });\n      setAction(\"eraser\");\n    }\n  } else if (tool === \"text\") {\n    const element = getElementAtPosition(mouse.x, mouse.y, elements);\n\n    if (element) {\n      const offsetX = mouse.x - element.x1;\n      const offsetY = mouse.y - element.y1;\n      setSelectedElement({ ...element,\n        offsetX,\n        offsetY\n      });\n      setAction(\"text\");\n    }\n  } else if (tool === \"resize\") {\n    const element = getElementAtPosition(mouse.x, mouse.y, elements);\n\n    if (element) {\n      const offsetX = mouse.x - element.x1;\n      const offsetY = mouse.y - element.y1;\n      setSelectedElement({ ...element,\n        offsetX,\n        offsetY\n      });\n      setAction(\"moving\");\n    }\n  } else if (tool === \"sizes\") {\n    const element = getElementAtPosition(mouse.x, mouse.y, elements);\n\n    if (element) {\n      const offsetX = mouse.x - element.x1;\n      const offsetY = mouse.y - element.y1;\n      setSelectedElement({ ...element,\n        offsetX,\n        offsetY\n      });\n      let myJs = JSON.stringify(selectedElement);\n      setMyArr(JSON.parse(myJs));\n      console.log(myArr);\n    }\n  } else {\n    setAction(\"drawing\"); // const {clientX, clientY} = event;\n\n    const id = elements.length;\n    const element = createElement(id, mouse.x, mouse.y, mouse.x, mouse.y, tool);\n    setElements(prevState => [...prevState, element]);\n  }\n};","map":{"version":3,"sources":["F:/myapp/client/src/sketchHelper/handleMouseDown.js"],"names":["mouse","myArr","setMyArr","elements","setElements","getElementAtPosition","setAction","setSelectedElement","tool","createElement","handleMouseDown","event","element","x","y","offsetX","x1","offsetY","y1","myJs","JSON","stringify","selectedElement","parse","console","log","id","length","prevState"],"mappings":"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","sourcesContent":["import {    mouse ,\n            myArr ,\n            setMyArr , \n            elements , \n            setElements ,\n            getElementAtPosition , \n            setAction , \n            setSelectedElement, \n            tool } \n        \n            from \"../sketch\";\n\n\nimport {createElement} from \"./createElement\";\n\nexport const handleMouseDown = (event) => {\n    // const { clientX , clientY} = event;\n    if (tool === \"selection\") {\n        const element = getElementAtPosition(mouse.x, mouse.y, elements);\n        if(element)\n        {\n            const offsetX = mouse.x - element.x1 ;\n            const offsetY = mouse.y - element.y1 ;\n\n            setSelectedElement({...element,offsetX,offsetY});\n            setAction(\"moving\");\n        }\n\n    }\n    else if(tool === \"eraser\")\n    {\n        const element = getElementAtPosition(mouse.x, mouse.y, elements);\n        if(element)\n        {\n            const offsetX = mouse.x - element.x1 ;\n            const offsetY = mouse.y - element.y1 ;\n            setSelectedElement({...element,offsetX,offsetY});\n            setAction(\"eraser\");\n        }\n    }\n\n    else if(tool === \"text\")\n    {\n        const element = getElementAtPosition(mouse.x, mouse.y, elements);\n        if(element)\n        {\n            const offsetX = mouse.x - element.x1 ;\n            const offsetY = mouse.y - element.y1 ;\n            setSelectedElement({...element,offsetX,offsetY});\n            setAction(\"text\");\n        }\n    }\n    else if(tool === \"resize\")\n    {\n        const element = getElementAtPosition(mouse.x, mouse.y, elements);\n        if(element)\n        {\n            const offsetX = mouse.x - element.x1 ;\n            const offsetY = mouse.y - element.y1 ;\n            setSelectedElement({...element,offsetX,offsetY});\n            setAction(\"moving\");\n        }\n    }\n\n    else if(tool === \"sizes\")\n    {\n        const element = getElementAtPosition(mouse.x, mouse.y, elements);\n        if(element)\n        {\n            const offsetX = mouse.x - element.x1 ;\n            const offsetY = mouse.y - element.y1 ;\n            setSelectedElement({...element,offsetX,offsetY});\n            let myJs = JSON.stringify(selectedElement);\n            setMyArr(JSON.parse(myJs))\n            console.log( myArr );\n        }\n    }\n\n    else {\n        setAction(\"drawing\");\n        // const {clientX, clientY} = event;\n        const id = elements.length;\n        const element =  createElement(id, mouse.x, mouse.y, mouse.x, mouse.y, tool);\n        setElements(prevState => [...prevState, element]);\n\n\n    }\n};"]},"metadata":{},"sourceType":"module"}