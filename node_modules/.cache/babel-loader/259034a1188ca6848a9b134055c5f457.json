{"ast":null,"code":"import { saveAs } from 'file-saver';\nimport myVar from '../sketch';\nimport { jsPDF } from \"jspdf\";\nimport rough from 'roughjs/bundled/rough.esm';\nexport function handleSave() {\n  const canvas = document.getElementById(\"canvas\");\n  const context = canvas.getContext('2d');\n  const canvas2 = document.getElementById(\"canvas2\");\n  const ctx = canvas2.getContext('2d');\n  context.fillStyle = \"white\";\n  context.font = \"bold 16px Arial\";\n  context.fillText(\"Aoo Ghr Bnain\", canvas.width / 2 - 17, canvas.height / 2 + 8); // canvas.toBlob(function (blob) {\n  //     saveAs(blob, \"pretty image.png\")\n  // });\n\n  var doc = new jsPDF('p', 'mm');\n\n  for (var k = 0; k < myVar.length; k++) {\n    var Data = myVar[k];\n\n    for (var m = 0; m < Data.length; m++) {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      const roughCanvas = rough.canvas(canvas);\n      elements.forEach(({\n        roughElement\n      }) => roughCanvas.draw(roughElement));\n      var imgData = canvas2.toDataURL('image/png');\n      doc.addImage(imgData, 'PNG', 10, 10); // estimatess1total = estimatess1total + (Math.abs((Data[m].x2-Data[m].x1))  / 15.36);\n      // estimatess2total = estimatess2total + (Math.abs((Data[m].y2-Data[m].y1))  / 15.36);\n    }\n  }\n\n  doc.save('sample-file.pdf');\n  alert(\"File Save Successfully\"); // //\n  //\n  // const writeJsonFile = require('write-json-file');\n  // const jsonFile = \"/tmp/exampleFile.json\";\n  // writeJsonFile(jsonFile,{canvas:true}).catch(err => console.log(err));\n  //\n}","map":{"version":3,"sources":["C:/Users/alpha/OneDrive/myapp/client/src/sketchHelper/handleSave.js"],"names":["saveAs","myVar","jsPDF","rough","handleSave","canvas","document","getElementById","context","getContext","canvas2","ctx","fillStyle","font","fillText","width","height","doc","k","length","Data","m","clearRect","roughCanvas","elements","forEach","roughElement","draw","imgData","toDataURL","addImage","save","alert"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,SAASC,KAAT,QAAsB,OAAtB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AAGA,OAAO,SAASC,UAAT,GAAsB;AACzB,QAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AACA,QAAMC,OAAO,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAhB;AAEA,QAAMC,OAAO,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAhB;AACA,QAAMI,GAAG,GAAID,OAAO,CAACD,UAAR,CAAmB,IAAnB,CAAb;AAEAD,EAAAA,OAAO,CAACI,SAAR,GAAoB,OAApB;AACAJ,EAAAA,OAAO,CAACK,IAAR,GAAe,iBAAf;AACAL,EAAAA,OAAO,CAACM,QAAR,CAAiB,eAAjB,EAAoCT,MAAM,CAACU,KAAP,GAAe,CAAhB,GAAqB,EAAxD,EAA6DV,MAAM,CAACW,MAAP,GAAgB,CAAjB,GAAsB,CAAlF,EATyB,CAWzB;AACA;AAEA;;AAEA,MAAIC,GAAG,GAAG,IAAIf,KAAJ,CAAU,GAAV,EAAe,IAAf,CAAV;;AACQ,OAAI,IAAIgB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGjB,KAAK,CAACkB,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAElC,QAAIE,IAAI,GAAGnB,KAAK,CAACiB,CAAD,CAAhB;;AAEA,SAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,IAAI,CAACD,MAAxB,EAAgCE,CAAC,EAAjC,EAAqC;AAEjCV,MAAAA,GAAG,CAACW,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBjB,MAAM,CAACU,KAA3B,EAAkCV,MAAM,CAACW,MAAzC;AAEA,YAAMO,WAAW,GAAGpB,KAAK,CAACE,MAAN,CAAaA,MAAb,CAApB;AACAmB,MAAAA,QAAQ,CAACC,OAAT,CAAiB,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAoBH,WAAW,CAACI,IAAZ,CAAiBD,YAAjB,CAArC;AAEA,UAAIE,OAAO,GAAIlB,OAAO,CAACmB,SAAR,CACX,WADW,CAAf;AAGAZ,MAAAA,GAAG,CAACa,QAAJ,CAAaF,OAAb,EAAsB,KAAtB,EAA6B,EAA7B,EAAiC,EAAjC,EAViC,CAcjC;AACA;AAEH;AAEJ;;AACDX,EAAAA,GAAG,CAACc,IAAJ,CAAS,iBAAT;AAERC,EAAAA,KAAK,CAAC,wBAAD,CAAL,CA3CyB,CA4CzB;AACA;AACA;AACA;AACA;AACA;AAKH","sourcesContent":["import {saveAs} from 'file-saver';\nimport myVar from '../sketch';\nimport { jsPDF } from \"jspdf\";\nimport rough from 'roughjs/bundled/rough.esm';\n\n\nexport function handleSave() {\n    const canvas = document.getElementById(\"canvas\");\n    const context = canvas.getContext('2d');\n\n    const canvas2 = document.getElementById(\"canvas2\");\n    const ctx  = canvas2.getContext('2d');\n\n    context.fillStyle = \"white\";\n    context.font = \"bold 16px Arial\";\n    context.fillText(\"Aoo Ghr Bnain\" , (canvas.width / 2) - 17, (canvas.height / 2) + 8);\n\n    // canvas.toBlob(function (blob) {\n    //     saveAs(blob, \"pretty image.png\")\n\n    // });\n    \n    var doc = new jsPDF('p', 'mm');\n            for(var k = 0; k < myVar.length; k++) {\n\n                var Data = myVar[k];\n\n                for(var m = 0; m < Data.length; m++) {\n\n                    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n                    const roughCanvas = rough.canvas(canvas);\n                    elements.forEach(({roughElement}) => roughCanvas.draw(roughElement));\n\n                    var imgData =  canvas2.toDataURL(\n                        'image/png');          \n                    \n                    doc.addImage(imgData, 'PNG', 10, 10);\n                    \n                \n\n                    // estimatess1total = estimatess1total + (Math.abs((Data[m].x2-Data[m].x1))  / 15.36);\n                    // estimatess2total = estimatess2total + (Math.abs((Data[m].y2-Data[m].y1))  / 15.36);\n\n                }\n\n            }\n            doc.save('sample-file.pdf');\n\n    alert(\"File Save Successfully\");\n    // //\n    //\n    // const writeJsonFile = require('write-json-file');\n    // const jsonFile = \"/tmp/exampleFile.json\";\n    // writeJsonFile(jsonFile,{canvas:true}).catch(err => console.log(err));\n    //\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}