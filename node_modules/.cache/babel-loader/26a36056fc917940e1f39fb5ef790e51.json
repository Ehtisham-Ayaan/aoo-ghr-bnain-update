{"ast":null,"code":"import GenericServices from \"./GenericServices\";\nimport jwt_decode from \"jwt-decode\";\n\nclass userServices extends GenericServices {\n  constructor(...args) {\n    super(...args);\n\n    this.login = (userName, password) => new Promise((resolve, reject) => {\n      console.log(userName, password);\n      this.post(\"http://localhost:5000/auth\", {\n        userName,\n        password\n      }).then(token => {\n        localStorage.setItem(\"token\", token);\n        resolve(token);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n\n    this.register = (username, email, password, role) => new Promise((resolve, reject) => {\n      console.log(username);\n      this.post(\"http://localhost:5000/register\", {\n        username,\n        email,\n        password,\n        role\n      }).then(res => {\n        resolve(res);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n\n    this.contact = (username, email, query) => new Promise((resolve, reject) => {\n      console.log(username);\n      this.post(\"http://localhost:5000/contact\", {\n        username,\n        email,\n        query\n      }).then(res => {\n        resolve(res);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n\n    this.save = (name, elements, width, height, id) => new Promise((resolve, reject) => {\n      var data = JSON.stringify(elements);\n      console.log(width);\n      console.log(height);\n      this.post(\"http://localhost:5000/save\", {\n        name,\n        data,\n        width,\n        height,\n        id\n      }).then(res => {\n        resolve(res);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n\n    this.change = (sub, role) => new Promise((resolve, reject) => {\n      console.log(role);\n      this.post(\"http://localhost:5000/change\", {\n        sub,\n        role\n      }).then(res => {\n        resolve(res);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n\n    this.updatePass = (email, password, role) => new Promise((resolve, reject) => {\n      console.log(email);\n      this.post(\"http://localhost:5000/updatePass\", {\n        email,\n        password,\n        role\n      }).then(res => {\n        resolve(res);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n\n    this.sketchLength = 0;\n\n    this.getSketch = id => new Promise((resolve, reject) => {\n      console.log(id);\n      this.post(\"http://localhost:5000/getSketch\", {\n        id\n      }).then(token2 => {\n        sketchLength = token2.length;\n\n        for (var i = 0; i < token2.length; i++) {\n          localStorage.setItem(\"token2\" + i, token2[i]);\n          resolve(token2[i]);\n        }\n      }).catch(err => {\n        reject(err);\n      });\n    });\n\n    this.isLoggedin = localStorage.getItem(\"token\") ? true : false;\n\n    this.logout = () => {\n      localStorage.removeItem(\"token\");\n      window.location.href = \"/\";\n    };\n\n    this.getLoggedinfo = () => {\n      try {\n        let jwt = localStorage.getItem(\"token\");\n        var decode = jwt_decode(jwt);\n        return decode;\n      } catch (error) {\n        console.log(\"error\");\n      }\n    };\n\n    this.getTotalSketches = () => {\n      return sketchLength;\n    };\n\n    this.getSketchinfo = () => {\n      try {\n        let jwt = localStorage.getItem(\"token21\");\n        var decode = jwt_decode(jwt);\n        return decode;\n      } catch (error) {\n        console.log(\"error\");\n      }\n    };\n\n    this.isAdmin = () => {\n      if (this.isLoggedIn) {\n        if (this.getLoggedinfo().role === \"admin\") return true;else return false;\n      } else return false;\n    };\n  }\n\n}\n\nlet UserServices = new userServices();\nexport default UserServices;","map":{"version":3,"sources":["C:/Users/alpha/OneDrive/myapp/client/src/services/UserServices.js"],"names":["GenericServices","jwt_decode","userServices","login","userName","password","Promise","resolve","reject","console","log","post","then","token","localStorage","setItem","catch","err","register","username","email","role","res","contact","query","save","name","elements","width","height","id","data","JSON","stringify","change","sub","updatePass","sketchLength","getSketch","token2","length","i","isLoggedin","getItem","logout","removeItem","window","location","href","getLoggedinfo","jwt","decode","error","getTotalSketches","getSketchinfo","isAdmin","isLoggedIn","UserServices"],"mappings":"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","sourcesContent":["import GenericServices from \"./GenericServices\";\nimport jwt_decode from \"jwt-decode\";\nclass userServices extends GenericServices {\n\n\n  \n\n  login = (userName, password) =>\n\n    new Promise((resolve, reject) => {\n\n      console.log(userName , password);\n\n      this.post(\"http://localhost:5000/auth\", { userName, password })\n        .then((token) => {\n          localStorage.setItem(\"token\", token);\n          resolve(token);\n         \n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n  register = (username, email, password , role) =>\n    new Promise((resolve, reject) => {\n\n\n      console.log(username)\n\n      this.post(\"http://localhost:5000/register\", { username, email, password , role})\n        .then((res) => {\n          resolve(res);\n        })  \n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    contact = (username, email, query) =>\n    new Promise((resolve, reject) => {\n\n\n      console.log(username)\n\n      this.post(\"http://localhost:5000/contact\", { username, email, query })\n        .then((res) => {\n          resolve(res);\n        })  \n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    save = (name , elements ,width , height, id) =>\n    new Promise((resolve, reject) => {\n\n      var data = JSON.stringify(elements);\n\n      console.log(width)\n\n      console.log(height)\n\n      this.post(\"http://localhost:5000/save\", { name , data ,width , height, id })\n        .then((res) => {\n          resolve(res);\n        })  \n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    change = (sub , role) =>\n    new Promise((resolve, reject) => {\n\n      console.log(role)\n\n      this.post(\"http://localhost:5000/change\", { sub , role })\n        .then((res) => {\n          resolve(res);\n        })  \n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    updatePass = (email, password, role) =>\n    new Promise((resolve, reject) => {\n\n      console.log(email)\n\n      this.post(\"http://localhost:5000/updatePass\", { email, password , role })\n        .then((res) => {\n          resolve(res);\n        })  \n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    sketchLength = 0 ;\n\n    getSketch = (id) =>\n    new Promise((resolve, reject) => {\n\n      console.log(id)\n\n      this.post(\"http://localhost:5000/getSketch\", { id })\n        .then((token2) => {\n          sketchLength = token2.length\n          for(var i = 0; i <token2.length; i++){\n          localStorage.setItem(\"token2\"+i, token2[i]);\n          resolve(token2[i]);\n          }\n        })  \n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    isLoggedin = localStorage.getItem(\"token\") ? true : false;\n\n  logout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.href = \"/\";\n  };\n\n  getLoggedinfo = () => {\n    try {\n      let jwt = localStorage.getItem(\"token\");\n      var decode = jwt_decode(jwt);\n      return decode;\n    } catch (error) {\n      console.log(\"error\");\n    }\n  };\n\n  getTotalSketches = () => {\n    return sketchLength\n  };\n\n  getSketchinfo = () => {\n    try {\n      let jwt = localStorage.getItem(\"token21\");\n      var decode = jwt_decode(jwt);\n      return decode;\n    } catch (error) {\n      console.log(\"error\");\n    }\n  };\n  \n  isAdmin = () => {\n    if (this.isLoggedIn) {\n      if (this.getLoggedinfo().role === \"admin\") return true;\n      else return false;\n    } else return false;\n  };\n}\n\nlet UserServices = new userServices();\nexport default UserServices;\n"]},"metadata":{},"sourceType":"module"}