{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alpha\\\\OneDrive\\\\myapp\\\\client\\\\src\\\\services\\\\payment.js\";\nimport React from \"react\";\nimport DropIn from \"braintree-web-drop-in-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Payment extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clientToken: null\n    };\n  }\n\n  async componentDidMount() {\n    // Get a client token for authorization from your server\n    const response = await fetch(\"server.test/client_token\");\n    const clientToken = await response.json(); // If returned as JSON string\n\n    this.setState({\n      clientToken\n    });\n  }\n\n  async buy() {\n    // Send the nonce to your server\n    const {\n      nonce\n    } = await this.instance.requestPaymentMethod();\n    await fetch(`server.test/purchase/${nonce}`);\n  }\n\n  render() {\n    if (!this.state.clientToken) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DropIn, {\n          options: {\n            authorization: this.state.clientToken\n          },\n          onInstance: instance => this.instance = instance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.buy.bind(this),\n          children: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/alpha/OneDrive/myapp/client/src/services/payment.js"],"names":["React","DropIn","Payment","Component","state","clientToken","componentDidMount","response","fetch","json","setState","buy","nonce","instance","requestPaymentMethod","render","authorization","bind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,OAAO,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAG5CC,KAH4C,GAGpC;AACPC,MAAAA,WAAW,EAAE;AADN,KAHoC;AAAA;;AAOrB,QAAjBC,iBAAiB,GAAG;AACzB;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0BAAD,CAA5B;AACA,UAAMH,WAAW,GAAG,MAAME,QAAQ,CAACE,IAAT,EAA1B,CAHyB,CAGkB;;AAE3C,SAAKC,QAAL,CAAc;AACbL,MAAAA;AADa,KAAd;AAGA;;AAEQ,QAAHM,GAAG,GAAG;AACX;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAY,MAAM,KAAKC,QAAL,CAAcC,oBAAd,EAAxB;AACA,UAAMN,KAAK,CAAE,wBAAuBI,KAAM,EAA/B,CAAX;AACA;;AAEDG,EAAAA,MAAM,GAAG;AACR,QAAI,CAAC,KAAKX,KAAL,CAAWC,WAAhB,EAA6B;AAC5B,0BACC;AAAA,+BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD;AAKA,KAND,MAMO;AACN,0BACC;AAAA,gCACC,QAAC,MAAD;AACC,UAAA,OAAO,EAAE;AAAEW,YAAAA,aAAa,EAAE,KAAKZ,KAAL,CAAWC;AAA5B,WADV;AAEC,UAAA,UAAU,EAAEQ,QAAQ,IAAK,KAAKA,QAAL,GAAgBA;AAF1C;AAAA;AAAA;AAAA;AAAA,gBADD,eAKC;AAAQ,UAAA,OAAO,EAAE,KAAKF,GAAL,CAASM,IAAT,CAAc,IAAd,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AASA;AACD;;AAzC2C","sourcesContent":["import React from \"react\";\r\nimport DropIn from \"braintree-web-drop-in-react\";\r\n\r\nexport class Payment extends React.Component {\r\n\tinstance;\r\n\r\n\tstate = {\r\n\t\tclientToken: null\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\t// Get a client token for authorization from your server\r\n\t\tconst response = await fetch(\"server.test/client_token\");\r\n\t\tconst clientToken = await response.json(); // If returned as JSON string\r\n\r\n\t\tthis.setState({\r\n\t\t\tclientToken\r\n\t\t});\r\n\t}\r\n\r\n\tasync buy() {\r\n\t\t// Send the nonce to your server\r\n\t\tconst { nonce } = await this.instance.requestPaymentMethod();\r\n\t\tawait fetch(`server.test/purchase/${nonce}`);\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (!this.state.clientToken) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>Loading...</h1>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<DropIn\r\n\t\t\t\t\t\toptions={{ authorization: this.state.clientToken }}\r\n\t\t\t\t\t\tonInstance={instance => (this.instance = instance)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={this.buy.bind(this)}>Buy</button>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}