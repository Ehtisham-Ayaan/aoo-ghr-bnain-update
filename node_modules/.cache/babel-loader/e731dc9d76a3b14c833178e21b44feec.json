{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alpha\\\\OneDrive\\\\myapp\\\\client\\\\src\\\\sketch.js\",\n    _s = $RefreshSig$();\n\nimport './css/App.css';\nimport React, { useLayoutEffect, useState } from 'react';\nimport rough from 'roughjs/bundled/rough.esm';\nimport Button from '@material-ui/core/Button';\nimport clsx from 'clsx';\nimport TabPanel from \"./sketchHelper/TabPanel\";\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { Avatar, ButtonGroup, Input, InputAdornment, InputLabel, Menu, MenuItem } from \"@material-ui/core\";\nimport SwapHorizontalCircleIcon from '@material-ui/icons/SwapHorizontalCircle';\nimport BuildIcon from '@material-ui/icons/Build';\nimport LandscapeIcon from '@material-ui/icons/Landscape';\nimport SwapVerticalCircleIcon from '@material-ui/icons/SwapVerticalCircle';\nimport useStyles from \"./sketchHelper/useStyles\";\nimport { handleMouseDown } from \"./sketchHelper/handleMouseDown\";\nimport { handleMouseUp } from \"./sketchHelper/handleMouseUp\";\nimport { handleMouseMove } from \"./sketchHelper/handleMouseMove\";\nimport { handleSave } from \"./sketchHelper/handleSave\";\nimport { isWithinElement } from \"./sketchHelper/isWithinElement\";\nimport { toggleDrawer } from \"./sketchHelper/toggleDrawer\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { scrapMe } from './scrapMe';\nimport { toast } from \"react-toastify\";\nimport UserServices from \"./services/UserServices\";\nimport { Spin } from 'antd';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport surface from './img/surface.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet heightt = null;\nlet widthh = null;\nlet item = null;\nlet canv = null;\nlet canvWidth,\n    setCanvWidth = null;\nlet canvHeight,\n    setCanvHeight = null;\nlet ElementWidth,\n    setElementWidth = null;\nlet ElementLength,\n    setElementLength = null;\nlet error, setError;\nlet canvas = null;\nlet totalLayer = null;\nlet tool, setTool;\nlet elements, setElements;\nlet selectedElement, setSelectedElement;\nlet action, setAction;\nlet state, setState;\nlet open, setOpen;\nlet myArr, setMyArr;\nlet price, setPrice;\nlet title, setTitle;\nlet image, setImage;\nlet price2, setPrice2;\nlet title2, setTitle2;\nlet image2, setImage2;\nlet price3, setPrice3;\nlet title3, setTitle3;\nlet image3, setImage3;\nlet steelPrice, setSteelPrice;\nlet steelTitle, setSteelTitle;\nlet steelImage, setSteelImage;\nlet steelPrice2, setSteelPrice2;\nlet steelTitle2, setSteelTitle2;\nlet steelImage2, setSteelImage2;\nlet steelPrice3, setSteelPrice3;\nlet steelTitle3, setSteelTitle3;\nlet steelImage3, setSteelImage3;\nlet loading, setLoading;\nlet value, setValue;\nlet marla = 0;\nexport { canvWidth, canvHeight };\nexport { ElementWidth, ElementLength, setElementLength, setElementWidth };\nexport { error, setError };\nexport { canvas };\nexport { tool, setTool };\nexport { elements, setElements };\nexport { selectedElement, setSelectedElement };\nexport { action, setAction };\nexport { state, setState };\nexport { open, setOpen };\nexport { myArr, setMyArr };\nexport { price, setPrice };\nexport { title, setTitle };\nexport { image, setImage };\nexport { price2, setPrice2 };\nexport { title2, setTitle2 };\nexport { image2, setImage2 };\nexport { price3, setPrice3 };\nexport { title3, setTitle3 };\nexport { image3, setImage3 };\nexport { steelPrice, setSteelPrice };\nexport { steelTitle, setSteelTitle };\nexport { steelImage, setSteelImage };\nexport { steelPrice2, setSteelPrice2 };\nexport { steelTitle2, setSteelTitle2 };\nexport { steelImage2, setSteelImage2 };\nexport { steelPrice3, setSteelPrice3 };\nexport { steelTitle3, setSteelTitle3 };\nexport { steelImage3, setSteelImage3 };\nexport { loading, setLoading };\nexport { value, setValue };\nexport let mouse = {\n  x: 0,\n  y: 0,\n  events: \"mousemove,mousedown,mouseup\"\n};\nexport const list = anchor => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: clsx(useStyles.list, {\n    [useStyles.fullList]: anchor === 'top' || anchor === 'bottom'\n  }),\n  role: \"presentation\" // onClick={toggleDrawer(anchor, false)}\n  // onKeyDown={toggleDrawer(anchor, false)}\n  ,\n  children: loading ? /*#__PURE__*/_jsxDEV(List, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Spin, {\n      style: {\n        width: '100%',\n        marginTop: '20%',\n        marginBottom: '20%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 34\n    }, this)].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n      button: true,\n      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 40\n      }, this)]\n    }, text, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 36\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 32\n  }, this) : /*#__PURE__*/_jsxDEV(List, {\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [\n    /*#__PURE__*/\n    // <Typography style={{color: 'black'}}>\n    //         Title : {title} <br></br>\n    //         Price : {price}\n    //         </Typography>\n    _jsxDEV(FormControl, {\n      component: \"fieldset\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"Cement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        \"aria-label\": \"gender\",\n        name: \"gender1\",\n        value: value,\n        onChange: event => setValue(event.target.value),\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: price,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 74\n          }, this),\n          label: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 33\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: 'black',\n            marginLeft: '25%'\n          },\n          children: price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 102\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: price2,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 75\n          }, this),\n          label: title2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 33\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: 'black',\n            marginLeft: '25%'\n          },\n          children: price2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 105\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: price3,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 76\n          }, this),\n          label: title3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 34\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: 'black',\n            marginLeft: '25%'\n          },\n          children: price3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 105\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      style: {\n        color: 'black'\n      },\n      children: [\"Title : \", title3, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 42\n      }, this), \"Price : \", price3]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 26\n    }, this)].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n      button: true,\n      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n        children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: \"Remy Sharp\",\n          src: surface\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 62\n        }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: \"Remy Sharp\",\n          src: image3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 65\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }, this)]\n    }, text, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 21\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 126,\n  columnNumber: 13\n}, this);\nexport const distance = (a, b) => Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\nexport const getElementAtPosition = (x, y, elements) => {\n  return elements.find(element => isWithinElement(x, y, element));\n};\nexport const handleDrawerOpen = () => {\n  setOpen(true);\n};\nexport const handleDrawerClose = () => {\n  setOpen(false);\n};\nexport const handleError = () => {\n  setError(false);\n}; // const isWithinCanvas = (x,y, element) => {\n//     const {x1, y1, x2, y2} = element;\n//\n//         const minX = Math.min(x1, x2);\n//         const maxX = Math.max(x1, x2);\n//         const minY = Math.min(y1, y2);\n//         const maxy = Math.max(y1, y2);\n//         return x >= minX && x <= maxX && y <= maxy && y >= minY;\n//\n// }\n\nexport function putCanvs() {\n  // for (let item = 0; item < 20; item++) {\n  //     if (count !== 0 && count%5 === 0) {\n  //         document.write(\" ||| \");\n  //     }\n  // canv.setAttribute('width', window.innerWidth);\n  if (widthh !== null) {\n    item = item + 1;\n    totalLayer = totalLayer + 1;\n    const texta = document.createElement(\"input\");\n    texta.setAttribute('id', 'itemNo' + item);\n    texta.textContent = '111';\n    canv = document.createElement(\"canvas\");\n    canv.width = canvas.width; // canv.setAttribute('height', window.innerHeight * heightt/100);\n\n    canv.height = canvas.height;\n    canv.setAttribute('id', 'canv' + item);\n    alert(totalLayer);\n    canv.style.background = \"#c0c6c5\";\n    canv.style.border = \"5px solid darkslategrey\";\n    canv.style.margin = \"14.4%\";\n    document.body.appendChild(canv);\n    canv.addEventListener('mousedown', handleMouseDown, true);\n    canv.addEventListener('mouseup', handleMouseUp, true);\n    canv.addEventListener('mousemove', handleMouseMove, true);\n    canv.onmousedown = handleMouseDown;\n    canv.onmouseup = handleMouseUp;\n    canv.onmousemove = handleMouseMove;\n    const C = document.getElementById(canv.getAttribute('id'));\n\n    if (C.getContext) {\n      if (C.getContext) {\n        makePlot(C);\n      }\n    }\n  } else {\n    alert(\"Please Enter Width and Length First\");\n    setOpen(true);\n  }\n}\n\nfunction makePlot(elem) {\n  const ctx = elem.getContext(\"2d\");\n  ctx.fillStyle = '#00f';\n  ctx.strokeStyle = 'black';\n  ctx.lineWidth = 5;\n  ctx.borderBlock = 1;\n} // const getCvsAtPosition = (x,y, elements) => {\n//     return elements.find(element => isWithinCanvas(x,y,element));\n// }\n\n\nfunction App() {\n  _s();\n\n  [tool, setTool] = useState(\"selection\");\n  [elements, setElements] = useState([]);\n  [action, setAction] = useState('none');\n  [canvWidth, setCanvWidth] = useState(null);\n  [canvHeight, setCanvHeight] = useState(null);\n  [myArr, setMyArr] = useState([]);\n  [ElementWidth, setElementWidth] = useState(null);\n  [ElementLength, setElementLength] = useState(null);\n  [selectedElement, setSelectedElement] = useState(null);\n  [error, setError] = useState(false);\n  [price, setPrice] = useState(null);\n  [title, setTitle] = useState(null);\n  [image, setImage] = useState(null);\n  [price2, setPrice2] = useState(null);\n  [title2, setTitle2] = useState(null);\n  [image2, setImage2] = useState(null);\n  [price3, setPrice3] = useState(null);\n  [title3, setTitle3] = useState(null);\n  [image3, setImage3] = useState(null);\n  [loading, setLoading] = useState(false);\n  [value, setValue] = React.useState(null);\n  const [devWidth, setDevWidth] = useState(null);\n  const [devHeight, setDevHeight] = useState(null); // let canv = null;\n  // }\n\n  useLayoutEffect(() => {\n    if (widthh !== null) {\n      canvas = document.getElementById('canvas');\n      const context = canvas.getContext('2d');\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      const roughCanvas = rough.canvas(canvas);\n      elements.forEach(({\n        roughElement\n      }) => roughCanvas.draw(roughElement)); // const roughCanvas222 = rough.canvas(canvas2);\n      // elements.forEach(({roughElement}) => roughCanvas222.draw(roughElement));\n      //\n      //      canv = document.getElementById('canv' + 1);\n      //     const ctx = canv.getContext('2d');\n      //     ctx.clearRect(0,0,canvas.width, canvas.height);\n      //\n      //     const roughCanvas2 = rough.canvas(canv);\n      //     elements.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n\n      for (let i = 1; i <= item; i++) {\n        const cnv = document.getElementById('canv' + item);\n        const ctx = cnv.getContext('2d');\n        ctx.clearRect(0, 0, cnv.width, cnv.height);\n        const roughCanvas2 = rough.canvas(cnv); // let element+item;\n        // let\n\n        elements.forEach(({\n          roughElement\n        }) => roughCanvas2.draw(roughElement));\n      }\n    } else {\n      alert(\"Please Enter Width and Length First\");\n      setOpen(true);\n    }\n  } // ,\n  // [\n  //     elements , canvas , item\n  // ]\n  );\n\n  function handleWrite() {\n    const context = canvas.getContext('2d');\n    const wrt = document.getElementById(\"write\").value;\n    context.fillStyle = \"white\";\n    context.font = \"bold 16px Arial\";\n    context.fillText(wrt, canvas.width / 2 - 17, canvas.height / 2 + 8);\n  }\n\n  const classes = useStyles();\n  const theme = useTheme();\n  [open, setOpen] = React.useState(false);\n  [state, setState] = React.useState({\n    bottom: false\n  });\n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired\n  };\n\n  const handleSubmit = () => {\n    heightt = document.getElementById(\"height\").value;\n    widthh = document.getElementById(\"width\").value;\n    alert(\" Length  \" + heightt + \"   width  \" + widthh + \"   was submitted\");\n    canvas = document.getElementById(\"canvas\");\n    setCanvWidth(window.innerWidth * widthh / 100);\n    setCanvHeight(window.innerWidth * heightt / 100);\n    canvas.width = canvWidth;\n    canvas.height = canvHeight;\n    marla = widthh * heightt / 270;\n    document.getElementById(\"marla\").value = marla;\n  };\n\n  const handleCalculate = () => {\n    const totalArea = widthh * heightt;\n    const enteredArea = document.getElementById(\"area\").value;\n    let myElement = 0;\n    const totalCost = totalArea * 250;\n    const cost = enteredArea * 250;\n    let myJs = JSON.stringify(elements);\n    setMyArr(JSON.parse(myJs));\n    let estimatess1 = 0;\n    let estimatess2 = 0;\n\n    for (var i = 0; i < myArr.length; i++) {\n      // console.log( myArr[i].type);\n      // console.log( myArr[i].x1);\n      // console.log( myArr[i].x2);\n      // console.log( myArr[i].y2);\n      // console.log( myArr[i].y1);\n      // console.log( (myArr[i].x2-myArr[i].x1)  / 15.36);\n      // console.log( (myArr[i].y2-myArr[i].y1)  / 15.36);\n      estimatess1 = estimatess1 + (myArr[i].x2 - myArr[i].x1) / 15.36;\n      estimatess2 = estimatess2 + (myArr[i].y2 - myArr[i].y1) / 15.36; // myElement ++ ;\n    }\n\n    if (marla < estimatess1 * estimatess2 / 270) {\n      console.log(\"Total Area Created Feet  \" + widthh * heightt);\n      console.log(\"Total Area Created Marla \" + marla);\n    } else {\n      console.log(\"Total Area Created Feet  \" + estimatess1 * estimatess2);\n      console.log(\"Total Area Created Marla \" + estimatess1 * estimatess2 / 270);\n    }\n\n    document.getElementById(\"myArea\").value = totalCost;\n    document.getElementById(\"eArea\").value = cost;\n\n    if (marla < estimatess1 * estimatess2 / 270) {\n      document.getElementById(\"cArea\").value = widthh * heightt * 250;\n    } else {\n      document.getElementById(\"cArea\").value = estimatess1 * estimatess2 * 250;\n    } // console.log(value)\n\n  };\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const [view, setView] = React.useState('list');\n\n  const handleChange = (event, nextView) => {\n    setView(nextView);\n  };\n\n  let getJson = () => {\n    let myJs = JSON.stringify(elements);\n    setMyArr(JSON.parse(myJs));\n    console.log(myArr);\n  };\n\n  let lessItem = () => {\n    if (item > 0) {\n      item = item - 1;\n      alert(item);\n    } else alert(\"Already on First\");\n  };\n\n  let upItem = () => {\n    if (item < totalLayer) {\n      item = item + 1;\n      alert(item);\n    } else alert(\"Already on Last\");\n  }; // var canvas = document.getElementById(\"canvas\"),\n  //     ctx = canvas.getContext(\"2d\");\n  // var b = ball[i];\n  // b.draw(b.x, b.y, b.color ,b.radius);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflow: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        noWrap: true,\n        className: classes.title,\n        style: {\n          color: \"#4E4141\"\n        },\n        children: ['bottom'].map(anchor => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Drawer, {\n            anchor: anchor,\n            open: state[anchor],\n            onClose: toggleDrawer(anchor, false),\n            children: list(anchor)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 45\n          }, this)\n        }, anchor, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 41\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"right\",\n      open: open,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.drawerHeader,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 70\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 92\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Enter Width (feet)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"width\",\n            type: \"number\",\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(SwapHorizontalCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 57\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Enter Length (feet)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"height\",\n            type: \"number\",\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(SwapVerticalCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            value: \"Submit\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Your current Marla is : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"marla\",\n            type: \"number\",\n            step: \"any\",\n            readOnly: true,\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Enter Text \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"write\",\n            type: \"text\",\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleWrite,\n            children: \"Write\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Enter Area (Sq. feet)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"area\",\n            type: \"number\",\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: [/*#__PURE__*/_jsxDEV(SwapHorizontalCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 57\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 86\n              }, this), /*#__PURE__*/_jsxDEV(SwapVerticalCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 671,\n                columnNumber: 57\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          value: \"calculate\",\n          onClick: scrapMe,\n          children: \"Select Material\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"est\",\n          value: \"calculate\",\n          onClick: handleCalculate,\n          children: \"Estimate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 37\n        }, this)].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(BuildIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 78\n            }, this) : /*#__PURE__*/_jsxDEV(LandscapeIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 95\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 45\n          }, this)]\n        }, text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 41\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Total Cost of total area \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"myArea\",\n            type: \"number\",\n            step: \"any\",\n            readOnly: true,\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Total Cost of Entered Area \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"eArea\",\n            type: \"number\",\n            step: \"any\",\n            readOnly: true,\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"input-with-icon-adornment\",\n            children: \"Total Cost of Created Area (Without Material) \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"cArea\",\n            step: \"any\",\n            readOnly: true,\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 45\n        }, this)].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 78\n            }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 94\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 45\n          }, this)]\n        }, text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 41\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            orientation: \"vertical\",\n            value: view,\n            exclusive: true,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"#ffffff\",\n              \"aria-label\": \"open drawer\",\n              edge: \"end\",\n              onClick: handleDrawerOpen,\n              className: clsx(open && classes.hide),\n              children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 764,\n              columnNumber: 45\n            }, this), UserServices.isLoggedin ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: e => {\n                UserServices.save(elements, UserServices.getLoggedinfo().email).then(data => {\n                  console.log(data);\n                  toast.success(data, {\n                    position: \"bottom-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                  });\n                }).catch(err => {\n                  toast.error(err.response.data, {\n                    position: \"bottom-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                  });\n                });\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 779,\n              columnNumber: 49\n            }, this) : \"\", /*#__PURE__*/_jsxDEV(Button, {\n              onClick: putCanvs,\n              children: \"Add Layer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"selection\",\n              onClick: () => setTool(\"selection\"),\n              \"aria-label\": \"left aligned\",\n              children: \"Selection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"selection\",\n              onClick: () => setTool(\"sizes\"),\n              \"aria-label\": \"left aligned\",\n              children: \"Get Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"text\",\n              onClick: () => setTool(\"text\"),\n              children: \"Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"resize\",\n              onClick: () => setTool(\"resize\"),\n              children: \"Re - Factor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 831,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"line\",\n              onClick: () => setTool(\"line\"),\n              children: \"Wall\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 836,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"rectangle\",\n              onClick: () => setTool(\"rectangle\"),\n              children: \"Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 841,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"ellipse\",\n              onClick: () => setTool(\"ellipse\"),\n              children: \"Ellipse Shape Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 846,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              \"aria-controls\": \"simple-menu\",\n              \"aria-haspopup\": \"true\",\n              onClick: handleClick,\n              children: \"Door\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 854,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              id: \"simple-menu\",\n              anchorEl: anchorEl,\n              keepMounted: true,\n              open: Boolean(anchorEl),\n              onClose: handleClose,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                id: \"arcL\",\n                onClick: () => setTool(\"arcL\"),\n                children: \"Door Left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 869,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                id: \"arcR\",\n                onClick: () => setTool(\"arcR\"),\n                children: \"Door Right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 874,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: handleClose,\n                children: \"Logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 880,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 861,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"circle\",\n              onClick: () => setTool(\"circle\"),\n              children: \"circular room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 888,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"eraser\",\n              onClick: () => setTool(\"eraser\"),\n              children: \"Erase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 893,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: lessItem,\n              children: [\"Change Layer \", /*#__PURE__*/_jsxDEV(ExpandLessIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 900,\n                columnNumber: 62\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 898,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: upItem,\n              children: [\"Change Layer \", /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 904,\n                columnNumber: 62\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 902,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSave,\n              children: \"Save Local\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 906,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: getJson,\n              children: \"JSON\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 910,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                const canv = document.getElementById(\"canvas\");\n                const ctx = canv.getContext('2d');\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                setElements([]);\n              },\n              children: \"Clear All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 915,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: scrapMe,\n              children: \"Scrap Me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 924,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"5%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          style: {\n            background: \"#c0c6c5\",\n            border: \"5px solid darkslategrey\",\n            margin: \"5%\"\n          },\n          width: canvWidth,\n          height: canvHeight,\n          id: \"canvas\",\n          onMouseDown: handleMouseDown,\n          onMouseUp: handleMouseUp,\n          onMouseMove: handleMouseMove,\n          children: \"Canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [selectedElement === null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"input-with-icon-adornment\",\n          children: \"Current selected element is : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: \"No element is selected\",\n          readOnly: true,\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 968,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 964,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 962,\n        columnNumber: 37\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"input-with-icon-adornment\",\n          children: \"Current selected element is : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: selectedElement.type === \"rectangle\" ? \"Room\" : selectedElement.type === \"line\" ? \"Wall\" : selectedElement.type === \"ellipse\" ? \"Ellipse Shape Room\" : selectedElement.type === \"arcL\" ? \"Door Left\" : selectedElement.type === \"arcR\" ? \"Door Right\" : selectedElement.type === \"circle\" ? \"Circular Room\" : \"\",\n          readOnly: true,\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1003,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 975,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"input-with-icon-adornment\",\n        children: \"Your current Width is : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1012,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: canvWidth / 15.36,\n        type: \"number\",\n        step: \".01\",\n        readOnly: true,\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1019,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1013,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"input-with-icon-adornment\",\n        children: \"Your current Length is : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1026,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: canvHeight / 15.36,\n        type: \"number\",\n        step: \".01\",\n        readOnly: true,\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1033,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1027,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"input-with-icon-adornment\",\n          children: \"Element current Width is : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1041,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: ElementWidth / 15.36,\n          type: \"number\",\n          step: \".01\",\n          readOnly: true,\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1048,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1042,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1040,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"input-with-icon-adornment\",\n          children: \"Element current Length is : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1058,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: ElementLength / 15.36,\n          type: \"number\",\n          step: \".01\",\n          readOnly: true,\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1066,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1059,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1057,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 958,\n      columnNumber: 29\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Values must be valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1078,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1077,\n      columnNumber: 32\n    }, this) : \"\", loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        style: {\n          width: '100%',\n          marginTop: '20%',\n          marginBottom: '20%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1090,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1088,\n      columnNumber: 32\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 564,\n    columnNumber: 25\n  }, this);\n}\n\n_s(App, \"q0lAR+CbLPdzfPzXGEvDf8EAeug=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = App;\nexport default App;\nexport { widthh };\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/alpha/OneDrive/myapp/client/src/sketch.js"],"names":["React","useLayoutEffect","useState","rough","Button","clsx","TabPanel","PropTypes","useTheme","Drawer","AppBar","Toolbar","List","Typography","Divider","IconButton","ChevronLeftIcon","ChevronRightIcon","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","Avatar","ButtonGroup","Input","InputAdornment","InputLabel","Menu","MenuItem","SwapHorizontalCircleIcon","BuildIcon","LandscapeIcon","SwapVerticalCircleIcon","useStyles","handleMouseDown","handleMouseUp","handleMouseMove","handleSave","isWithinElement","toggleDrawer","MenuIcon","ExpandLessIcon","ExpandMoreIcon","scrapMe","toast","UserServices","Spin","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","surface","heightt","widthh","item","canv","canvWidth","setCanvWidth","canvHeight","setCanvHeight","ElementWidth","setElementWidth","ElementLength","setElementLength","error","setError","canvas","totalLayer","tool","setTool","elements","setElements","selectedElement","setSelectedElement","action","setAction","state","setState","open","setOpen","myArr","setMyArr","price","setPrice","title","setTitle","image","setImage","price2","setPrice2","title2","setTitle2","image2","setImage2","price3","setPrice3","title3","setTitle3","image3","setImage3","steelPrice","setSteelPrice","steelTitle","setSteelTitle","steelImage","setSteelImage","steelPrice2","setSteelPrice2","steelTitle2","setSteelTitle2","steelImage2","setSteelImage2","steelPrice3","setSteelPrice3","steelTitle3","setSteelTitle3","steelImage3","setSteelImage3","loading","setLoading","value","setValue","marla","mouse","x","y","events","list","anchor","fullList","display","flexDirection","width","marginTop","marginBottom","map","text","index","event","target","color","marginLeft","distance","a","b","Math","sqrt","pow","getElementAtPosition","find","element","handleDrawerOpen","handleDrawerClose","handleError","putCanvs","texta","document","createElement","setAttribute","textContent","height","alert","style","background","border","margin","body","appendChild","addEventListener","onmousedown","onmouseup","onmousemove","C","getElementById","getAttribute","getContext","makePlot","elem","ctx","fillStyle","strokeStyle","lineWidth","borderBlock","App","devWidth","setDevWidth","devHeight","setDevHeight","context","clearRect","roughCanvas","forEach","roughElement","draw","i","cnv","roughCanvas2","handleWrite","wrt","font","fillText","classes","theme","bottom","propTypes","children","node","any","isRequired","handleSubmit","window","innerWidth","handleCalculate","totalArea","enteredArea","myElement","totalCost","cost","myJs","JSON","stringify","parse","estimatess1","estimatess2","length","x2","x1","y2","y1","console","log","anchorEl","setAnchorEl","handleClick","currentTarget","handleClose","view","setView","handleChange","nextView","getJson","lessItem","upItem","overflow","drawer","paper","drawerPaper","drawerHeader","direction","root","hide","isLoggedin","e","save","getLoggedinfo","email","then","data","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","catch","err","response","Boolean","type"],"mappings":"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","sourcesContent":["import './css/App.css';\nimport React, {useLayoutEffect, useState} from 'react';\nimport rough from 'roughjs/bundled/rough.esm';\nimport Button from '@material-ui/core/Button';\nimport clsx from 'clsx';\nimport TabPanel from \"./sketchHelper/TabPanel\";\nimport PropTypes from 'prop-types';\nimport {useTheme} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport {Avatar, ButtonGroup, Input, InputAdornment, InputLabel, Menu, MenuItem} from \"@material-ui/core\";\nimport SwapHorizontalCircleIcon from '@material-ui/icons/SwapHorizontalCircle';\nimport BuildIcon from '@material-ui/icons/Build';\nimport LandscapeIcon from '@material-ui/icons/Landscape';\nimport SwapVerticalCircleIcon from '@material-ui/icons/SwapVerticalCircle';\nimport useStyles from \"./sketchHelper/useStyles\";\nimport {handleMouseDown} from \"./sketchHelper/handleMouseDown\";\nimport {handleMouseUp} from \"./sketchHelper/handleMouseUp\";\nimport {handleMouseMove} from \"./sketchHelper/handleMouseMove\";\nimport {handleSave} from \"./sketchHelper/handleSave\";\nimport {isWithinElement} from \"./sketchHelper/isWithinElement\";\nimport {toggleDrawer} from \"./sketchHelper/toggleDrawer\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {scrapMe} from './scrapMe'\nimport { toast } from \"react-toastify\";\nimport UserServices from \"./services/UserServices\";\nimport { Spin } from 'antd';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport surface from './img/surface.jpg'; \n\n\n        let heightt = null;\n        let widthh = null;\n        let item = null;\n        let canv = null;\n        let canvWidth , setCanvWidth = null;\n        let canvHeight , setCanvHeight = null;\n        let ElementWidth , setElementWidth = null;\n        let ElementLength , setElementLength = null;\n        let error , setError ;\n        let canvas = null;\n        let totalLayer = null;\n        let  tool , setTool ;\n        let elements, setElements;\n        let selectedElement , setSelectedElement ;        \n        let action , setAction ;\n        let state , setState;\n        let open , setOpen ;\n        let myArr , setMyArr ;\n        let price , setPrice ;\n        let title , setTitle ;\n        let image , setImage ;\n        let price2 , setPrice2 ;\n        let title2 , setTitle2 ;\n        let image2 , setImage2 ;\n        let price3 , setPrice3 ;\n        let title3 , setTitle3 ;\n        let image3 , setImage3 ;\n        let steelPrice , setSteelPrice ;\n        let steelTitle , setSteelTitle ;\n        let steelImage , setSteelImage ;\n        let steelPrice2 , setSteelPrice2 ;\n        let steelTitle2 , setSteelTitle2 ;\n        let steelImage2 , setSteelImage2 ;\n        let steelPrice3 , setSteelPrice3 ;\n        let steelTitle3 , setSteelTitle3 ;\n        let steelImage3 , setSteelImage3 ;\n        let loading , setLoading ;\n        let value, setValue;\n        let marla = 0;\n\n        export {canvWidth , canvHeight};\n        export {ElementWidth , ElementLength , setElementLength  , setElementWidth};\n        export {error , setError };\n        export {canvas};\n        export {tool , setTool};\n        export {elements , setElements };\n        export {selectedElement , setSelectedElement};\n        export {action , setAction};\n        export {state , setState};\n        export {open , setOpen};        \n        export {myArr , setMyArr};\n        export {price , setPrice};\n        export {title , setTitle};\n        export {image , setImage};\n        export {price2 , setPrice2};\n        export {title2 , setTitle2};\n        export {image2 , setImage2};\n        export {price3 , setPrice3};\n        export {title3 , setTitle3};\n        export {image3 , setImage3};\n        export {steelPrice , setSteelPrice};\n        export {steelTitle , setSteelTitle};\n        export {steelImage , setSteelImage};\n        export {steelPrice2 , setSteelPrice2};\n        export {steelTitle2 , setSteelTitle2};\n        export {steelImage2 , setSteelImage2};\n        export {steelPrice3 , setSteelPrice3};\n        export {steelTitle3 , setSteelTitle3};\n        export {steelImage3 , setSteelImage3};\n        export {loading , setLoading};\n        export {value, setValue}; \n\n        export let mouse = {x : 0, y : 0, events : \"mousemove,mousedown,mouseup\"};\n            \n        export const list = (anchor) => (\n        \n            <div\n                className={clsx(useStyles.list, {\n                    [useStyles.fullList]: anchor === 'top' || anchor === 'bottom',\n                })}\n                role=\"presentation\"\n                // onClick={toggleDrawer(anchor, false)}\n                // onKeyDown={toggleDrawer(anchor, false)}\n            >\n\n                {loading ? (\n                               \n                               <List\n                               style={{display: 'flex' , flexDirection : 'row'}}\n                   \n                           >\n                   \n                               {[<Spin style={{width:'100%' , marginTop: '20%' , marginBottom:'20%'}} />\n                                   ].map((text, index) => (\n                                   <ListItem button key={text}>\n                                       <ListItemIcon></ListItemIcon>\n                                       <ListItemText primary={text} />\n                                   </ListItem>\n                               ))}\n                           </List>\n                    ) :  \n\n                    <List \n                    style={{display: 'flex' , flexDirection : 'column'}}\n        \n                >\n        \n                    {[\n                    // <Typography style={{color: 'black'}}>\n                    //         Title : {title} <br></br>\n                    //         Price : {price}\n                    //         </Typography>\n\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Cement</FormLabel>\n                            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} \n                            onChange={(event) => setValue(event.target.value)}\n                            >\n                                <FormControlLabel value={price} control={<Radio />} label={title} /> <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>{price}</Typography>\n                                <FormControlLabel value={price2} control={<Radio />} label={title2} />  <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>{price2}</Typography>\n                                 <FormControlLabel value={price3} control={<Radio />} label={title3} /> <Typography\n                                                                                                        style = {{color: 'black',\n                                                                                                        marginLeft: '25%'}}>{price3}</Typography>\n                                {/* <FormControlLabel value=\"disabled\" disabled control={<Radio />} label=\"(Disabled option)\" /> */}\n                            </RadioGroup>\n                         \n                        </FormControl>\n                        ,\n                         <Typography style={{color: 'black'}}>\n                        Title : {title3} <br></br>\n                        Price : {price3}\n                        </Typography>].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>{index % 2 === 0 ? <Avatar alt=\"Remy Sharp\" src={surface}/> :\n                                                                <Avatar alt=\"Remy Sharp\" src={image3}/>}</ListItemIcon>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    ))}\n                </List>\n\n\n\n                            \n                }\n        \n        \n            </div>\n        );\n        \n        \n        export const distance = (a,b) => Math.sqrt(Math.pow(a.x - b.x , 2) + Math.pow(a.y - b.y, 2));\n        \n        export const getElementAtPosition = (x,y, elements) => {\n            return elements.find(element => isWithinElement(x,y,element));\n        }\n        \n        export const handleDrawerOpen = () => {\n            setOpen(true);\n        };\n        \n        export const handleDrawerClose = () => {\n            setOpen(false);\n        }; \n        \n        export const handleError = () => {\n            setError(false);\n        }; \n        \n        \n            // const isWithinCanvas = (x,y, element) => {\n            //     const {x1, y1, x2, y2} = element;\n            //\n            //         const minX = Math.min(x1, x2);\n            //         const maxX = Math.max(x1, x2);\n            //         const minY = Math.min(y1, y2);\n            //         const maxy = Math.max(y1, y2);\n            //         return x >= minX && x <= maxX && y <= maxy && y >= minY;\n            //\n            // }\n\n\n            export function putCanvs() {\n\n\n                // for (let item = 0; item < 20; item++) {\n                //     if (count !== 0 && count%5 === 0) {\n                //         document.write(\" ||| \");\n                //     }\n\n\n                // canv.setAttribute('width', window.innerWidth);\n                if (widthh !== null) {\n\n                    item = item + 1;\n                    totalLayer = totalLayer + 1;\n\n\n                    const texta = document.createElement(\"input\");\n\n                    texta.setAttribute('id', 'itemNo'\n                    + item\n                    );\n\n\n                    texta.textContent = '111';\n\n                    canv = document.createElement(\"canvas\");\n\n                    canv.width = canvas.width;\n                    // canv.setAttribute('height', window.innerHeight * heightt/100);\n                    canv.height = canvas.height;\n                    canv.setAttribute('id', 'canv'\n                    + item\n                    );\n\n\n\n                    alert(totalLayer);\n                    canv.style.background = \"#c0c6c5\";\n\n                    canv.style.border = \"5px solid darkslategrey\";\n\n                    canv.style.margin = \"14.4%\";\n\n                    document.body.appendChild(canv);\n\n                    canv.addEventListener('mousedown' , handleMouseDown , true);\n                    canv.addEventListener('mouseup' , handleMouseUp , true);\n                    canv.addEventListener('mousemove' , handleMouseMove , true);\n\n                    canv.onmousedown = handleMouseDown;\n                    canv.onmouseup = handleMouseUp;\n                    canv.onmousemove = handleMouseMove;\n                    const C = document.getElementById(canv.getAttribute('id'));\n                    if (C.getContext) {\n                        if (C.getContext) {\n                            makePlot(C);\n                        }\n                    }\n                }\n                else {\n                    alert(\"Please Enter Width and Length First\");\n                    setOpen(true);\n                }\n            }\n\n            function makePlot(elem) {\n\n                const ctx = elem.getContext(\"2d\");\n                ctx.fillStyle   = '#00f';\n                ctx.strokeStyle = 'black';\n                ctx.lineWidth   = 5;\n                ctx.borderBlock = 1;\n\n            }\n\n            // const getCvsAtPosition = (x,y, elements) => {\n                //     return elements.find(element => isWithinCanvas(x,y,element));\n                // }\n\n            function App() \n            \n            {\n\n                [tool, setTool] = useState(\"selection\");\n                [elements, setElements] = useState([]);\n                [action , setAction] = useState('none');\n                [canvWidth, setCanvWidth] = useState(null);\n                [canvHeight, setCanvHeight] = useState(null);\n                [myArr , setMyArr] = useState([]);\n                [ElementWidth , setElementWidth] = useState(null);\n                [ElementLength , setElementLength] = useState(null);\n                [selectedElement , setSelectedElement] = useState(null);\n                [error , setError] = useState(false);\n                [price , setPrice] = useState(null);\n                [title , setTitle] = useState(null);\n                [image , setImage] = useState(null);\n                [price2 , setPrice2] = useState(null);\n                [title2 , setTitle2] = useState(null);\n                [image2 , setImage2] = useState(null);\n                [price3 , setPrice3] = useState(null);\n                [title3 , setTitle3] = useState(null);\n                [image3 , setImage3] = useState(null);\n                [loading , setLoading] = useState(false);\n                [value, setValue] = React.useState(null);\n\n                const [devWidth, setDevWidth] = useState(null);\n                const [devHeight, setDevHeight] = useState(null);\n\n\n                // let canv = null;\n    \n                // }\n\n                useLayoutEffect(() => {\n\n                    if(widthh !== null)\n                    {\n\n                        canvas = document.getElementById('canvas');\n                        const context = canvas.getContext('2d');\n                        context.clearRect(0, 0, canvas.width, canvas.height);\n\n                        const roughCanvas = rough.canvas(canvas);\n                        elements.forEach(({roughElement}) => roughCanvas.draw(roughElement));\n\n\n                        // const roughCanvas222 = rough.canvas(canvas2);\n                        // elements.forEach(({roughElement}) => roughCanvas222.draw(roughElement));\n                        //\n                        //      canv = document.getElementById('canv' + 1);\n                        //     const ctx = canv.getContext('2d');\n                        //     ctx.clearRect(0,0,canvas.width, canvas.height);\n                        //\n                        //     const roughCanvas2 = rough.canvas(canv);\n                        //     elements.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n\n\n                        for(let i = 1 ; i <= item ; i ++) {\n                            const cnv = document.getElementById('canv' + item);\n                            const ctx = cnv.getContext('2d');\n\n                            ctx.clearRect(0,0,cnv.width, cnv.height);\n                            const roughCanvas2 = rough.canvas(cnv);\n                            // let element+item;\n                            // let\n                            elements.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n                        }\n\n                    }\n                            \n                    else {\n                        alert(\"Please Enter Width and Length First\");\n                        setOpen(true);\n                    }\n                }\n                    // ,\n                    // [\n                    //     elements , canvas , item\n                    // ]\n    \n                    );\n\n                    function handleWrite(){\n\n                        const context = canvas.getContext('2d');\n\n                        const wrt = document.getElementById(\"write\").value;\n                        context.fillStyle = \"white\";\n                        context.font = \"bold 16px Arial\";\n                        context.fillText(wrt , (canvas.width / 2) - 17, (canvas.height / 2) + 8);\n\n                    }\n\n                    const classes = useStyles();\n                    const theme = useTheme();\n                    [open, setOpen] = React.useState(false);\n                    \n                    [state, setState] = React.useState({\n                        bottom: false,\n           \n                    });\n\n                    TabPanel.propTypes = {\n                        children: PropTypes.node,\n                        index: PropTypes.any.isRequired,\n                        value: PropTypes.any.isRequired,\n                    };\n\n                    const handleSubmit = () => {\n                        heightt = document.getElementById(\"height\").value;\n                        widthh = document.getElementById(\"width\").value;\n                        alert(\" Length  \" + heightt + \"   width  \" + widthh + \"   was submitted\");\n                        canvas = document.getElementById(\"canvas\");\n                        setCanvWidth( window.innerWidth * widthh/100 );\n                        setCanvHeight(window.innerWidth * heightt/100);\n                        canvas.width = canvWidth ;\n                        canvas.height = canvHeight;\n\n                        marla = (widthh * heightt)/270;\n\n                        document.getElementById(\"marla\").value = marla ;\n\n                    }\n\n\n\n                    const handleCalculate = () => {\n\n                        const totalArea = widthh * heightt;\n                        const enteredArea = document.getElementById(\"area\").value ;\n                        let myElement = 0;\n\n                        \n                        const totalCost = totalArea * 250;\n                        const cost = enteredArea * 250;\n                        let myJs = JSON.stringify(elements);\n                        setMyArr(JSON.parse(myJs))\n                        let estimatess1 = 0;\n                        let estimatess2 = 0;\n\n                        for(var i = 0; i < myArr.length ; i++)\n                        {\n                            // console.log( myArr[i].type);\n                            // console.log( myArr[i].x1);\n                            // console.log( myArr[i].x2);\n                            // console.log( myArr[i].y2);\n                            // console.log( myArr[i].y1);\n                            // console.log( (myArr[i].x2-myArr[i].x1)  / 15.36);\n                            // console.log( (myArr[i].y2-myArr[i].y1)  / 15.36);\n                            \n                            estimatess1 = estimatess1 + ((myArr[i].x2-myArr[i].x1)  / 15.36);\n                            estimatess2 = estimatess2 + ((myArr[i].y2-myArr[i].y1)  / 15.36);\n                           \n                            // myElement ++ ;\n\n                        }\n\n                        if(marla < ((estimatess1*estimatess2) / 270))\n                        {\n                            console.log(\"Total Area Created Feet  \" + (widthh*heightt));\n                            console.log(\"Total Area Created Marla \" + marla);\n                        }\n                        else{\n                        console.log(\"Total Area Created Feet  \" + (estimatess1*estimatess2));\n\n                        \n                        console.log(\"Total Area Created Marla \" + ((estimatess1*estimatess2) / 270)); \n                        }\n                        document.getElementById(\"myArea\").value = totalCost ;\n                        document.getElementById(\"eArea\").value = cost ;\n\n                        if(marla < ((estimatess1*estimatess2) / 270))\n                        {\n                            document.getElementById(\"cArea\").value =  (widthh*heightt) * 250 ;\n                        }\n                        else{\n                            document.getElementById(\"cArea\").value =  (estimatess1*estimatess2) * 250 ;\n                        }\n                        \n\n                        // console.log(value)\n\n                        \n\n                    }\n\n                    const [anchorEl, setAnchorEl] = React.useState(null);\n                    const handleClick = (event) => {\n\n                        setAnchorEl(event.currentTarget);\n\n                    };\n\n                    const handleClose = () => {\n                        setAnchorEl(null);\n                    };\n                    \n                    const [view, setView] = React.useState('list');\n                    const handleChange = (event, nextView) => {\n                        setView(nextView);\n                    };\n\n\n\n\n                    let getJson = () => {\n                        let myJs = JSON.stringify(elements);\n                        setMyArr(JSON.parse(myJs))\n                        console.log( myArr );\n                    }\n                    \n                    let lessItem = () => {\n                        if(item > 0) {\n                            item = item - 1;\n                            alert(item);\n                        }\n                        else alert(\"Already on First\");\n                    }\n\n                    let upItem = () => {\n                        if(item < totalLayer){\n                            item = item + 1;\n                            alert(item);\n                        }\n                        else alert(\"Already on Last\");\n                    }\n\n                    // var canvas = document.getElementById(\"canvas\"),\n                    //     ctx = canvas.getContext(\"2d\");\n                    // var b = ball[i];\n                    // b.draw(b.x, b.y, b.color ,b.radius);\n\n                    \n                    \n                    \n                    \n\n\n\n\n\n\n\n\n\n\n\n\n                    return (\n                        <div style={{overflow: \"hidden\"}}>\n\n                            <Toolbar>\n                                <Typography variant=\"h6\" noWrap className={classes.title} style={{color : \"#4E4141\"}}>\n\n                                    {['bottom'].map((anchor) => (\n                                        <React.Fragment key={anchor}>\n                                \n                                            <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n                                \n                                                {list(anchor)}\n                                            </Drawer>\n                                        </React.Fragment>\n                                    ))}\n                                </Typography>\n                    \n                            </Toolbar>\n\n\n\n\n\n            \n                            <Drawer\n                                className={classes.drawer}\n                                variant=\"persistent\"\n                                anchor=\"right\"\n                                open={open}\n                                classes={{\n                                    paper: classes.drawerPaper,\n                                }}\n                                >\n                                <div className={classes.drawerHeader}>\n                                    <IconButton onClick={handleDrawerClose}>\n                                        {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                                    </IconButton>\n                                </div>\n\n                               <Divider />\n                                <List>\n                                    {[<div>\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Enter Width (feet)</InputLabel>\n                                            <Input\n                                                id=\"width\"\n                                                type=\"number\"\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                        <SwapHorizontalCircleIcon />\n                                                    </InputAdornment>\n                                                }\n                                            />\n                                                \n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Enter Length (feet)</InputLabel>\n\n                                            <Input\n                                                id=\"height\"\n                                                type=\"number\"\n                                                startAdornment={\n                                                <InputAdornment position=\"start\">\n                                                    <SwapVerticalCircleIcon />\n                                                </InputAdornment>\n                                                }\n                                            />\n                                            <Button value=\"Submit\" onClick={handleSubmit}>\n                                                Submit\n                                            </Button>\n\n                                    </div>, <div>\n\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Your current Marla is : </InputLabel>\n                                            <Input\n                                                id=\"marla\"\n                                                type=\"number\"\n                                                step=\"any\"\n                                                readOnly\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                    </InputAdornment>\n                                                }\n                                            />\n\n                                    </div>,\n\n                                    <div>\n\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Enter Text </InputLabel>\n                                            <Input\n\n                                                id=\"write\"\n                                                type=\"text\"\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                    </InputAdornment>\n                                                }\n                                            />\n\n                                            <Button onClick={handleWrite} >Write</Button>\n\n                                    </div>, <div>\n\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Enter Area (Sq. feet)</InputLabel>\n                                            <Input\n                                                id=\"area\"\n                                                type=\"number\"\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                        <SwapHorizontalCircleIcon /> <h2>*</h2>\n                                                        <SwapVerticalCircleIcon />\n                                                    </InputAdornment>\n                                                }\n                                            />\n\n                                        \n\n                                    </div>,\n\n                                    <Button value=\"calculate\" onClick={scrapMe}>\n                                            Select Material\n                                        </Button>,\n\n                                    <Button id = \"est\" \n                                        value=\"calculate\" \n                                        onClick={handleCalculate}>\n                                        Estimate\n                                    </Button>\n\n                                        \n\n                                    ].map((text, index) => (\n                                        <ListItem button key={text}>\n                                            <ListItemIcon>{index % 2 === 0 ? < BuildIcon /> : <LandscapeIcon />}</ListItemIcon>\n                                            <ListItemText primary={text} />\n                                        </ListItem>\n                                    ))}\n\n                                </List>\n\n                                <List>\n\n                                    {[<div>\n\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Total Cost of total area </InputLabel>\n\n                                            <Input\n                                                id=\"myArea\"\n                                                type=\"number\"\n                                                step=\"any\"\n                                                readOnly\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                    </InputAdornment>\n                                                }\n                        \n                                            />\n                                    </div>, <div>\n\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Total Cost of Entered Area </InputLabel>\n\n                                            <Input\n                                                id=\"eArea\"\n                                                type=\"number\"\n                                                step=\"any\"\n                                                readOnly\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                    </InputAdornment>\n                                                }\n                                            />\n                                    </div>, <div>\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Total Cost of Created Area (Without Material) </InputLabel>\n                                            <Input\n                                                id=\"cArea\"\n                                                step=\"any\"\n                                                readOnly\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                    </InputAdornment>\n                                                }\n                                            />\n\n                                    </div>].map((text, index) => (\n\n                                        <ListItem button key={text}>\n                                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                                            <ListItemText primary={text} />\n                                        </ListItem>\n                                    ))}\n                                </List>\n                            </Drawer>\n\n                            <div className=\"row\">\n                                <div className=\"col-md-2\">\n                                    <div className={classes.root}>\n                                        <ButtonGroup\n                                            orientation=\"vertical\"\n                                            value={view}\n                                            exclusive\n                                            onChange={handleChange}\n                                            >\n\n                                            <IconButton\n                                                color=\"#ffffff\"\n                                                aria-label=\"open drawer\"\n                                                edge=\"end\"\n                                                onClick={handleDrawerOpen}\n                                                className={clsx(open && classes.hide)}\n                                                >\n                                            \n                                               <MenuIcon />\n                                            </IconButton>\n\n                                            {UserServices.isLoggedin ?\n\n                                                (\n\n                                                <Button  onClick={(e) => {\n                                                    UserServices.save(elements , UserServices.getLoggedinfo().email)\n                                                    .then((data) => {\n                                                        console.log(data);\n                                                        toast.success(data, {\n                                                            position: \"bottom-right\",\n                                                            autoClose: 5000,\n                                                            hideProgressBar: false,\n                                                            closeOnClick: true,\n                                                            pauseOnHover: true,\n                                                            draggable: true,\n                                                            progress: undefined,\n                                                        });\n                                                    })\n                                                    .catch((err) => {\n                                                        toast.error(err.response.data, {\n                                                            position: \"bottom-right\",\n                                                            autoClose: 5000,\n                                                            hideProgressBar: false,\n                                                            closeOnClick: true,\n                                                            pauseOnHover: true,\n                                                            draggable: true,\n                                                            progress: undefined,\n                                                        });\n                                                    });\n                                                }} >Save</Button>\n                                                ) : \n                                                (\"\")\n                                            }  \n\n                                            <Button \n                                                onClick={putCanvs} >\n                                                Add Layer\n                                            </Button>\n                                            <Button \n                                                id = \"selection\" \n                                                onClick={() => setTool(\"selection\")}   \n                                                aria-label=\"left aligned\">\n                                                Selection\n                                            </Button>\n    \n                                            <Button \n                                                id = \"selection\" \n                                                onClick={() => setTool(\"sizes\")}   \n                                                aria-label=\"left aligned\">\n                                                Get Size\n                                            </Button>\n                                            <Button \n                                                id = \"text\" \n                                                onClick={() => setTool(\"text\")}>\n                                                Text\n                                            </Button>\n                                            <Button \n                                                id = \"resize\" \n                                                onClick={() => setTool(\"resize\")}>\n                                                Re - Factor\n                                            </Button>\n                                            <Button \n                                                id = \"line\" \n                                                onClick={() => setTool(\"line\")}>\n                                                Wall\n                                            </Button>\n                                            <Button \n                                                id = \"rectangle\" \n                                                onClick={() => setTool(\"rectangle\")}>\n                                                Room\n                                            </Button>\n                                            <Button \n                                                id = \"ellipse\" \n                                                onClick={() => \n                                                setTool(\"ellipse\")}>\n                                                Ellipse Shape Room\n                                            </Button>\n                                    \n\n                                            <Button \n                                                aria-controls=\"simple-menu\" \n                                                aria-haspopup=\"true\" \n                                                onClick={handleClick}>\n                                                Door\n                                            </Button>\n \n                                                <Menu\n                                                    id=\"simple-menu\"\n                                                    anchorEl={anchorEl}\n                                                    keepMounted\n                                                    open={Boolean(anchorEl)}\n                                                    onClose={handleClose}\n                                                    >\n             \n                                                    <MenuItem \n                                                        id = \"arcL\" \n                                                        onClick={() => setTool(\"arcL\")  }>\n                                                        Door Left\n                                                    </MenuItem>\n                                                    <MenuItem \n                                                        id = \"arcR\" \n                                                        onClick={() => setTool(\"arcR\")  }>\n                                                        Door Right\n                                                    </MenuItem>\n            \n                                                    <MenuItem \n                                                        onClick={handleClose}>\n                                                        Logout\n                                                    </MenuItem>\n\n                                                </Menu>\n\n\n                                            <Button \n                                                id = \"circle\" \n                                                onClick={() => setTool(\"circle\")}>\n                                                circular room\n                                            </Button>\n                                            <Button \n                                                id = \"eraser\" \n                                                onClick={() => setTool(\"eraser\")}>\n                                                Erase\n                                            </Button>\n                                            <Button  \n                                                onClick={lessItem} >\n                                                Change Layer <ExpandLessIcon/> \n                                            </Button>\n                                            <Button \n                                                onClick={upItem} >\n                                                Change Layer <ExpandMoreIcon/>\n                                            </Button>\n                                            <Button \n                                            onClick={handleSave} >\n                                            Save Local \n                                            </Button>\n                                            <Button \n                                            onClick={getJson} >\n                                            JSON\n                                            </Button>\n                    \n                                            <Button onClick={()=>{\n                                                const canv = document.getElementById(\"canvas\");\n                                                const ctx = canv.getContext('2d')\n                                                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                                                setElements([]);\n                                                }} >\n                                                Clear All\n                                            </Button>\n                    \n                                            <Button \n                                                onClick={scrapMe\n                                                }>\n                                                Scrap Me\n                                            </Button>\n                                        </ButtonGroup>\n\n                                    </div>\n                                </div>\n\n\n                                <div\n                                    style= {{ marginTop  : \"5%\" ,\n                                    }}>\n                                        <canvas\n                                            style = {{\n                                                background:\"#c0c6c5\" , \n                                                border : \"5px solid darkslategrey\" , \n                                                margin : \"5%\"}}\n                    \n                                            width = {canvWidth}\n                                            height = {canvHeight}\n                                            id = \"canvas\"\n                                            onMouseDown={handleMouseDown}\n                                            onMouseUp={handleMouseUp}\n                                            onMouseMove={handleMouseMove}\n\n                                            >\n                                            Canvas\n                                        </canvas>\n                \n                                </div>\n                            </div>\n\n                            <div>\n\n                                {selectedElement === null ? (\n                               \n                                    <div className=\"container\">\n                                      <InputLabel htmlFor=\"input-with-icon-adornment\">Current selected element is : </InputLabel>\n                                        <Input\n                                            value  = \"No element is selected\"\n                                            readOnly\n                                            startAdornment={\n                                                <InputAdornment position=\"start\">\n                                                </InputAdornment>\n                                                }\n                                            />\n                                    </div>\n                                    ) : \n\n                                    <div className = \"container\">\n                                        <InputLabel htmlFor=\"input-with-icon-adornment\">Current selected element is : </InputLabel>\n\n                                        <Input\n\n                                            value  =  {selectedElement.type === \"rectangle\" ? (\n                                                \"Room\"            \n                                                ) : \n                                            selectedElement.type === \"line\" ? (\n                                                \"Wall\"\n                                                ) : \n                                            selectedElement.type === \"ellipse\" ? (\n                                                \"Ellipse Shape Room\"\n                                                ) :\n                                            selectedElement.type === \"arcL\" ? (\n                                                \"Door Left\"\n                                                ) : \n                                            selectedElement.type === \"arcR\" ? (\n                                                \"Door Right\"\n                                                ) : \n                                            selectedElement.type === \"circle\" ? (\n                                                \"Circular Room\"\n                                                ) : (\"\")\n         \n                                            }  \n                                            \n                                            readOnly\n                                            startAdornment={\n                                                <InputAdornment position=\"start\">\n\n                                                </InputAdornment>\n                                                }\n                                        />\n                                    </div>\n                            \n                                }\n\n                                <InputLabel htmlFor=\"input-with-icon-adornment\">Your current Width is : </InputLabel>\n                                    <Input\n                                        value  = {canvWidth / 15.36 } \n                                        type=\"number\"\n                                        step=\".01\"\n                                        readOnly\n                                        startAdornment={\n                                            <InputAdornment position=\"start\">\n\n                                            </InputAdornment>\n                                        }\n                                    />\n\n\n                                <InputLabel htmlFor=\"input-with-icon-adornment\">Your current Length is : </InputLabel>\n                                    <Input\n                                        value  = {canvHeight / 15.36 } \n                                        type=\"number\"\n                                        step=\".01\"\n                                        readOnly\n                                        startAdornment={\n                                            <InputAdornment position=\"start\">\n\n                                            </InputAdornment>\n                                        }\n                                    />\n\n    \n                                <div>\n                                    <InputLabel htmlFor=\"input-with-icon-adornment\">Element current Width is : </InputLabel>\n                                        <Input\n                                            value  = {  ElementWidth   / 15.36 } \n                                            type=\"number\"\n                                            step=\".01\"\n                                            readOnly\n                                            startAdornment={\n                                            <InputAdornment position=\"start\">\n\n                                            </InputAdornment>\n                                            }\n                                        />\n                                </div>\n\n\n\n                                <div>\n                                    <InputLabel htmlFor=\"input-with-icon-adornment\">Element current Length is : </InputLabel>\n                                        <Input\n                                            value  = {\n                                                (   ElementLength   )   /   15.36 }\n                                                type=\"number\"\n                                                step=\".01\"\n                                                readOnly\n                                                startAdornment={\n                                                <InputAdornment position=\"start\">\n\n                                                </InputAdornment>\n                                                }\n                                        />\n                                </div>\n\n                            </div>\n\n                            {error ? (\n                               \n                               <div className=\"container\">\n                                   <h3>Values must be valid</h3>\n\n                                </div>\n                            ) :  \n\n                            (\"\")\n                            \n                            } \n                            {loading ? (\n                               \n                               <div className=\"container\">\n                                  \n                                   <Spin style={{width:'100%' , marginTop: '20%' , marginBottom:'20%'}} />\n\n                                </div>\n                            ) :  \n\n                            (\"\")\n                            \n                            }        \n                        </div>\n                    );\n            }\n\nexport default App;\nexport { widthh };\n\n                    \n"]},"metadata":{},"sourceType":"module"}