{"ast":null,"code":"import { saveAs } from 'file-saver';\nimport { saveLayer } from '../sketch';\nimport { myVar } from '../sketch';\nimport { elements } from '../sketch';\nimport { jsPDF } from \"jspdf\";\nimport rough from 'roughjs/bundled/rough.esm';\nexport function HandleSave() {\n  saveLayer();\n  const canvas = document.getElementById(\"canvas\");\n  const context = canvas.getContext('2d');\n  const canvas2 = document.getElementById(\"canvas2\");\n  const ctx = canvas2.getContext('2d');\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = \"black\";\n  ctx.font = \"bold 16px Arial\";\n  ctx.fillText(\"Aoo Ghr Bnain\", canvas2.width / 2 - 17, canvas2.height / 2 + 8); // canvas.toBlob(function (blob) {\n  //     saveAs(blob, \"pretty image.png\")\n  // });\n\n  console.log(myVar.length);\n  var doc = new jsPDF('l', 'mm', [420, 297]);\n  var title = prompt(\"House Plot No.\");\n  var title1 = prompt(\"Khasr No.\");\n  var title2 = prompt(\"Khewat No.\");\n  var title3 = prompt(\"Khatoni No.\");\n  var title4 = prompt(\"Town\");\n  var title5 = prompt(\"Address\");\n  var title6 = prompt(\"Owner\");\n  var title7 = prompt(\"S/O or D/O or W/O\");\n  var title8 = \"Scale : 1\\\" = 15.32 ... This is computer generated Scale. Don't worry about it.\";\n  doc.setFont(\"san-serif\", 'bold');\n  doc.text(\"PROPOSED PLAN OF HOUSE PLOT NO.\" + title + \"\\n\" + \"KHASR NO.\" + title1 + \"\\n\" + \"KHEWAT NO. \" + title2 + \"\\n\" + \"KHATONI NO. \" + title3 + \"\\n\" + title4 + \"\\n\" + title5.toString() + \"\\n\" + title6 + \"\\n\" + \"S/O OR D/O OR W/O \" + title7 + \"\\n\" + title8 + \"\\n\");\n\n  for (var k = 0; k < myVar.length; k++) {\n    var Data = myVar[k]; // for(var m = 0; m < Data.length; m++) {\n    // ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    ctx.beginPath();\n    ctx.rect(0, 0, canvas2.width, canvas2.height);\n    ctx.stroke();\n    const roughCanvas2 = rough.canvas(canvas2);\n    Data.forEach(({\n      roughElement\n    }) => roughCanvas2.draw(roughElement));\n    var imgData = canvas2.toDataURL('image/png');\n    doc.addImage(imgData, 'PNG', 10, 10); // estimatess1total = estimatess1total + (Math.abs((Data[m].x2-Data[m].x1))  / 15.36);\n    // estimatess2total = estimatess2total + (Math.abs((Data[m].y2-Data[m].y1))  / 15.36);\n    // }\n  } // const roughCanvas2 = rough.canvas(canvas2);\n  // elements.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n  // var imgData =  canvas2.toDataURL(\n  //     'image/png');          \n  // doc.addImage(imgData, 'PNG', 10, 10);\n\n\n  doc.save('sample-file.pdf'); // doc.text(\"Hello world!\", 10, 10);\n  // doc.save(\"a4.pdf\");\n\n  alert(\"File Save Successfully\"); // //\n  //\n  // const writeJsonFile = require('write-json-file');\n  // const jsonFile = \"/tmp/exampleFile.json\";\n  // writeJsonFile(jsonFile,{canvas:true}).catch(err => console.log(err));\n  //\n}\n_c = HandleSave;\n\nvar _c;\n\n$RefreshReg$(_c, \"HandleSave\");","map":{"version":3,"sources":["C:/Users/alpha/OneDrive/myapp/client/src/sketchHelper/handleSave.js"],"names":["saveAs","saveLayer","myVar","elements","jsPDF","rough","HandleSave","canvas","document","getElementById","context","getContext","canvas2","ctx","clearRect","width","height","fillStyle","font","fillText","console","log","length","doc","title","prompt","title1","title2","title3","title4","title5","title6","title7","title8","setFont","text","toString","k","Data","beginPath","rect","stroke","roughCanvas2","forEach","roughElement","draw","imgData","toDataURL","addImage","save","alert"],"mappings":"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","sourcesContent":["import {saveAs} from 'file-saver';\nimport {saveLayer} from '../sketch';\nimport {myVar} from '../sketch'\nimport {elements} from '../sketch'\nimport { jsPDF } from \"jspdf\";\nimport rough from 'roughjs/bundled/rough.esm';\n\n\n\nexport function HandleSave() {\n\n    saveLayer();\n\n    const canvas = document.getElementById(\"canvas\");\n    const context = canvas.getContext('2d');\n\n    const canvas2 = document.getElementById(\"canvas2\");\n    const ctx  = canvas2.getContext('2d');\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    ctx.fillStyle = \"black\";\n    ctx.font = \"bold 16px Arial\";\n    ctx.fillText(\"Aoo Ghr Bnain\" , (canvas2.width / 2) - 17, (canvas2.height / 2) + 8);\n\n    // canvas.toBlob(function (blob) {\n    //     saveAs(blob, \"pretty image.png\")\n\n    // });\n\n    console.log(myVar.length)\n\n    \n    var doc = new jsPDF('l', 'mm', [420, 297]);\n\n    var title = prompt(\"House Plot No.\")\n    var title1 = prompt(\"Khasr No.\")\n    var title2 = prompt(\"Khewat No.\")\n    var title3 = prompt(\"Khatoni No.\")\n    var title4 = prompt(\"Town\")\n    var title5 = prompt(\"Address\")\n    var title6 = prompt(\"Owner\")\n    var title7 = prompt(\"S/O or D/O or W/O\")\n    \n    var title8 = \"Scale : 1\\\" = 15.32 ... This is computer generated Scale. Don't worry about it.\"\n    \n    doc.setFont(\"san-serif\", 'bold')\n\n    doc.text(\"PROPOSED PLAN OF HOUSE PLOT NO.\" + title+ \"\\n\" +\"KHASR NO.\"+ title1+ \"\\n\" +\"KHEWAT NO. \"+ title2+ \"\\n\" + \"KHATONI NO. \" +title3+ \"\\n\" + title4+ \"\\n\" + title5.toString() + \"\\n\" + title6+ \"\\n\" +\"S/O OR D/O OR W/O \"+ title7+ \"\\n\" + title8+ \"\\n\");\n    \n\n            for(var k = 0; k < myVar.length; k++) {\n\n                var Data = myVar[k];\n\n                // for(var m = 0; m < Data.length; m++) {\n\n                    // ctx.clearRect(0, 0, canvas.width, canvas.height);\n                    ctx.beginPath();\n                    ctx.rect(0, 0, canvas2.width, canvas2.height);\n                    ctx.stroke();\n                \n                    const roughCanvas2 = rough.canvas(canvas2);\n                    Data.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n\n                    var imgData =  canvas2.toDataURL(\n                        'image/png');          \n                    \n                    doc.addImage(imgData, 'PNG', 10, 10);\n                    \n                \n\n                    // estimatess1total = estimatess1total + (Math.abs((Data[m].x2-Data[m].x1))  / 15.36);\n                    // estimatess2total = estimatess2total + (Math.abs((Data[m].y2-Data[m].y1))  / 15.36);\n\n                // }\n\n            }\n\n            \n\n            // const roughCanvas2 = rough.canvas(canvas2);\n            // elements.forEach(({roughElement}) => roughCanvas2.draw(roughElement));\n\n            // var imgData =  canvas2.toDataURL(\n            //     'image/png');          \n            \n            // doc.addImage(imgData, 'PNG', 10, 10);\n            \n            doc.save('sample-file.pdf');\n\n\n            // doc.text(\"Hello world!\", 10, 10);\n            // doc.save(\"a4.pdf\");\n\n    alert(\"File Save Successfully\");\n    // //\n    //\n    // const writeJsonFile = require('write-json-file');\n    // const jsonFile = \"/tmp/exampleFile.json\";\n    // writeJsonFile(jsonFile,{canvas:true}).catch(err => console.log(err));\n    //\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}