{"ast":null,"code":"'use strict';\n\nlet Gateway = require('./gateway').Gateway;\n\nlet Merchant = require('./merchant').Merchant;\n\nlet OAuthCredentials = require('./oauth_credentials').OAuthCredentials;\n\nlet wrapPrototype = require('@braintree/wrap-promise').wrapPrototype;\n\nclass MerchantGateway extends Gateway {\n  constructor(gateway) {\n    super();\n    this.gateway = gateway;\n    this.config = this.gateway.config;\n  }\n\n  create(attributes) {\n    return this.gateway.http.post('/merchants/create_via_api', {\n      merchant: attributes\n    }).then(this.responseHandler());\n  }\n\n  responseHandler() {\n    let handler = this.createResponseHandler(null, null);\n    return function (payload) {\n      return handler(payload).then(response => {\n        if (response.success) {\n          response.merchant = new Merchant(response.response.merchant);\n          response.credentials = new OAuthCredentials(response.response.credentials);\n          delete response.response;\n        }\n\n        return response;\n      });\n    };\n  }\n\n}\n\nmodule.exports = {\n  MerchantGateway: wrapPrototype(MerchantGateway)\n};","map":{"version":3,"sources":["C:/Users/alpha/OneDrive/myapp/client/node_modules/braintree/lib/braintree/merchant_gateway.js"],"names":["Gateway","require","Merchant","OAuthCredentials","wrapPrototype","MerchantGateway","constructor","gateway","config","create","attributes","http","post","merchant","then","responseHandler","handler","createResponseHandler","payload","response","success","credentials","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBD,OAAnC;;AACA,IAAIE,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAP,CAAsBC,QAArC;;AACA,IAAIC,gBAAgB,GAAGF,OAAO,CAAC,qBAAD,CAAP,CAA+BE,gBAAtD;;AACA,IAAIC,aAAa,GAAGH,OAAO,CAAC,yBAAD,CAAP,CAAmCG,aAAvD;;AAEA,MAAMC,eAAN,SAA8BL,OAA9B,CAAsC;AACpCM,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB;AACA,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKC,MAAL,GAAc,KAAKD,OAAL,CAAaC,MAA3B;AACD;;AAEDC,EAAAA,MAAM,CAACC,UAAD,EAAa;AACjB,WAAO,KAAKH,OAAL,CAAaI,IAAb,CAAkBC,IAAlB,CAAuB,2BAAvB,EAAoD;AAACC,MAAAA,QAAQ,EAAEH;AAAX,KAApD,EAA4EI,IAA5E,CAAiF,KAAKC,eAAL,EAAjF,CAAP;AACD;;AAEDA,EAAAA,eAAe,GAAG;AAChB,QAAIC,OAAO,GAAG,KAAKC,qBAAL,CAA2B,IAA3B,EAAiC,IAAjC,CAAd;AAEA,WAAO,UAAUC,OAAV,EAAmB;AACxB,aAAOF,OAAO,CAACE,OAAD,CAAP,CAAiBJ,IAAjB,CAAuBK,QAAD,IAAc;AACzC,YAAIA,QAAQ,CAACC,OAAb,EAAsB;AACpBD,UAAAA,QAAQ,CAACN,QAAT,GAAoB,IAAIX,QAAJ,CAAaiB,QAAQ,CAACA,QAAT,CAAkBN,QAA/B,CAApB;AACAM,UAAAA,QAAQ,CAACE,WAAT,GAAuB,IAAIlB,gBAAJ,CAAqBgB,QAAQ,CAACA,QAAT,CAAkBE,WAAvC,CAAvB;AACA,iBAAOF,QAAQ,CAACA,QAAhB;AACD;;AAED,eAAOA,QAAP;AACD,OARM,CAAP;AASD,KAVD;AAWD;;AAzBmC;;AA4BtCG,MAAM,CAACC,OAAP,GAAiB;AAAClB,EAAAA,eAAe,EAAED,aAAa,CAACC,eAAD;AAA/B,CAAjB","sourcesContent":["'use strict';\n\nlet Gateway = require('./gateway').Gateway;\nlet Merchant = require('./merchant').Merchant;\nlet OAuthCredentials = require('./oauth_credentials').OAuthCredentials;\nlet wrapPrototype = require('@braintree/wrap-promise').wrapPrototype;\n\nclass MerchantGateway extends Gateway {\n  constructor(gateway) {\n    super();\n    this.gateway = gateway;\n    this.config = this.gateway.config;\n  }\n\n  create(attributes) {\n    return this.gateway.http.post('/merchants/create_via_api', {merchant: attributes}).then(this.responseHandler());\n  }\n\n  responseHandler() {\n    let handler = this.createResponseHandler(null, null);\n\n    return function (payload) {\n      return handler(payload).then((response) => {\n        if (response.success) {\n          response.merchant = new Merchant(response.response.merchant);\n          response.credentials = new OAuthCredentials(response.response.credentials);\n          delete response.response;\n        }\n\n        return response;\n      });\n    };\n  }\n}\n\nmodule.exports = {MerchantGateway: wrapPrototype(MerchantGateway)};\n"]},"metadata":{},"sourceType":"script"}